<?xml version="1.0" encoding="UTF-8"?>
<sourceUnit>
   <pragmaDirective>pragma<pragmaSolidity>solidity<version>
            <versionOperator>^</versionOperator>
            <versionLiteral>0.4.24</versionLiteral>
         </version>
      </pragmaSolidity>;</pragmaDirective>
   <libraryDefinition>library<identifier>SafeMath</identifier>{<contractPartDefinition>
         <functionDefinition>function<identifier>mul</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>_a</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>_b</identifier>
               </parameter>)</parameterList>
            <visibleType>internal</visibleType>
            <stateMutability>
               <pureType>pure</pureType>
            </stateMutability>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>uint256</elementaryTypeName>
                     </typeName>
                     <identifier>c</identifier>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{<statement>
                  <ifStatement>if(<condition>
                        <expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>_a</identifier>
                              </primaryExpression>
                           </expression>
                           <comparison>==</comparison>
                           <expression>
                              <primaryExpression>
                                 <numberLiteral>
                                    <decimalNumber>0</decimalNumber>
                                 </numberLiteral>
                              </primaryExpression>
                           </expression>
                        </expression>
                     </condition>)<statement>
                        <block>{<statement>
                              <returnStatement>return<expression>
                                    <primaryExpression>
                                       <numberLiteral>
                                          <decimalNumber>0</decimalNumber>
                                       </numberLiteral>
                                    </primaryExpression>
                                 </expression>
                              </returnStatement>;</statement>}</block>
                     </statement>
                  </ifStatement>
               </statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>c</identifier>
                           </primaryExpression>
                        </expression>=<expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>_a</identifier>
                              </primaryExpression>
                           </expression>
                           <muldivOperator>
                              <mulOperator>*</mulOperator>
                           </muldivOperator>
                           <expression>
                              <primaryExpression>
                                 <identifier>_b</identifier>
                              </primaryExpression>
                           </expression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>assert</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>c</identifier>
                                          </primaryExpression>
                                       </expression>
                                       <muldivOperator>
                                          <divOperator>/</divOperator>
                                       </muldivOperator>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>_a</identifier>
                                          </primaryExpression>
                                       </expression>
                                    </expression>
                                    <comparison>==</comparison>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>_b</identifier>
                                       </primaryExpression>
                                    </expression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <returnStatement>return<expression>
                        <primaryExpression>
                           <identifier>c</identifier>
                        </primaryExpression>
                     </expression>
                  </returnStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>div</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>_a</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>_b</identifier>
               </parameter>)</parameterList>
            <visibleType>internal</visibleType>
            <stateMutability>
               <pureType>pure</pureType>
            </stateMutability>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>uint256</elementaryTypeName>
                     </typeName>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{<statement>
                  <returnStatement>return<expression>
                        <expression>
                           <primaryExpression>
                              <identifier>_a</identifier>
                           </primaryExpression>
                        </expression>
                        <muldivOperator>
                           <divOperator>/</divOperator>
                        </muldivOperator>
                        <expression>
                           <primaryExpression>
                              <identifier>_b</identifier>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </returnStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>sub</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>_a</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>_b</identifier>
               </parameter>)</parameterList>
            <visibleType>internal</visibleType>
            <stateMutability>
               <pureType>pure</pureType>
            </stateMutability>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>uint256</elementaryTypeName>
                     </typeName>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>assert</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>_b</identifier>
                                       </primaryExpression>
                                    </expression>&lt;=<expression>
                                       <primaryExpression>
                                          <identifier>_a</identifier>
                                       </primaryExpression>
                                    </expression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <returnStatement>return<expression>
                        <expression>
                           <primaryExpression>
                              <identifier>_a</identifier>
                           </primaryExpression>
                        </expression>
                        <plusminusOperator>
                           <minusOperator>-</minusOperator>
                        </plusminusOperator>
                        <expression>
                           <primaryExpression>
                              <identifier>_b</identifier>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </returnStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>add</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>_a</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>_b</identifier>
               </parameter>)</parameterList>
            <visibleType>internal</visibleType>
            <stateMutability>
               <pureType>pure</pureType>
            </stateMutability>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>uint256</elementaryTypeName>
                     </typeName>
                     <identifier>c</identifier>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>c</identifier>
                           </primaryExpression>
                        </expression>=<expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>_a</identifier>
                              </primaryExpression>
                           </expression>
                           <plusminusOperator>
                              <plusOperator>+</plusOperator>
                           </plusminusOperator>
                           <expression>
                              <primaryExpression>
                                 <identifier>_b</identifier>
                              </primaryExpression>
                           </expression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>assert</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>c</identifier>
                                       </primaryExpression>
                                    </expression>&gt;=<expression>
                                       <primaryExpression>
                                          <identifier>_a</identifier>
                                       </primaryExpression>
                                    </expression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <returnStatement>return<expression>
                        <primaryExpression>
                           <identifier>c</identifier>
                        </primaryExpression>
                     </expression>
                  </returnStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>}</libraryDefinition>
   <contractDefinition>contract<identifier>ArrayTools</identifier>{<contractPartDefinition>
         <functionDefinition>function<identifier>_combineArray</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <typeName>
                        <elementaryTypeName>uint256</elementaryTypeName>
                     </typeName>[]</typeName>
                  <identifier>_array</identifier>
               </parameter>)</parameterList>
            <visibleType>internal</visibleType>
            <stateMutability>
               <pureType>pure</pureType>
            </stateMutability>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>uint256</elementaryTypeName>
                     </typeName>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <variableDeclaration>
                           <typeName>
                              <elementaryTypeName>uint256</elementaryTypeName>
                           </typeName>
                           <identifier>fullAmount</identifier>
                        </variableDeclaration>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <forStatement>for(<expression>
                        <expression>
                           <variableDeclaration>
                              <typeName>
                                 <elementaryTypeName>uint256</elementaryTypeName>
                              </typeName>
                              <identifier>i</identifier>
                           </variableDeclaration>
                        </expression>=<expression>
                           <primaryExpression>
                              <numberLiteral>
                                 <decimalNumber>0</decimalNumber>
                              </numberLiteral>
                           </primaryExpression>
                        </expression>
                     </expression>;<condition>
                        <expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>i</identifier>
                              </primaryExpression>
                           </expression>&lt;<expression>
                              <expression>
                                 <primaryExpression>
                                    <identifier>_array</identifier>
                                 </primaryExpression>
                              </expression>.length</expression>
                        </expression>
                     </condition>;<expression>
                        <expression>
                           <primaryExpression>
                              <identifier>i</identifier>
                           </primaryExpression>
                        </expression>
                        <twoPlusMinusOperator>
                           <incrementOperator>++</incrementOperator>
                        </twoPlusMinusOperator>
                     </expression>)<statement>
                        <block>{<statement>
                              <expressionStatement>
                                 <expression>
                                    <functionCall>
                                       <functionName>
                                          <identifier>require</identifier>
                                       </functionName>
                                       <callArguments>
                                          <tupleExpression>(<expression>
                                                <expression>
                                                   <expression>
                                                      <primaryExpression>
                                                         <identifier>_array</identifier>
                                                      </primaryExpression>
                                                   </expression>[<expression>
                                                      <primaryExpression>
                                                         <identifier>i</identifier>
                                                      </primaryExpression>
                                                   </expression>]</expression>&gt;<expression>
                                                   <primaryExpression>
                                                      <numberLiteral>
                                                         <decimalNumber>0</decimalNumber>
                                                      </numberLiteral>
                                                   </primaryExpression>
                                                </expression>
                                             </expression>)</tupleExpression>
                                       </callArguments>
                                    </functionCall>
                                 </expression>
                              </expressionStatement>;</statement>
                           <statement>
                              <expressionStatement>
                                 <expression>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>fullAmount</identifier>
                                       </primaryExpression>
                                    </expression>
                                    <lvalueOperator>
                                       <plusLvalueOperator>+=</plusLvalueOperator>
                                    </lvalueOperator>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>_array</identifier>
                                          </primaryExpression>
                                       </expression>[<expression>
                                          <primaryExpression>
                                             <identifier>i</identifier>
                                          </primaryExpression>
                                       </expression>]</expression>
                                 </expression>
                              </expressionStatement>;</statement>}</block>
                     </statement>
                  </forStatement>
               </statement>
               <statement>
                  <returnStatement>return<expression>
                        <primaryExpression>
                           <identifier>fullAmount</identifier>
                        </primaryExpression>
                     </expression>
                  </returnStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>}</contractDefinition>
   <contractDefinition>contract<identifier>IQDAO</identifier>{<contractPartDefinition>
         <functionDefinition>function<identifier>balanceOf</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>_owner</identifier>
               </parameter>)</parameterList>
            <visibleType>public</visibleType>
            <stateMutability>
               <viewType>view</viewType>
            </stateMutability>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>uint256</elementaryTypeName>
                     </typeName>
                  </parameter>)</parameterList>
            </returnsParameters>;</functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>approveForOtherContracts</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>_sender</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>_spender</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>_value</identifier>
               </parameter>)</parameterList>
            <visibleType>external</visibleType>;</functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>transfer</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>_to</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>_value</identifier>
               </parameter>)</parameterList>
            <visibleType>public</visibleType>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>bool</elementaryTypeName>
                     </typeName>
                  </parameter>)</parameterList>
            </returnsParameters>;</functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>transferFrom</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>_from</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>_to</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>_value</identifier>
               </parameter>)</parameterList>
            <visibleType>public</visibleType>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>bool</elementaryTypeName>
                     </typeName>
                  </parameter>)</parameterList>
            </returnsParameters>;</functionDefinition>
      </contractPartDefinition>}</contractDefinition>
   <contractDefinition>contract<identifier>Ownable</identifier>{<contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>address</elementaryTypeName>
            </typeName>
            <visibleType>public</visibleType>
            <identifier>owner</identifier>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <eventDefinition>event<identifier>OwnershipRenounced</identifier>
            <indexedParameterList>(<indexedParameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>indexed<identifier>previousOwner</identifier>
               </indexedParameter>)</indexedParameterList>;</eventDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <eventDefinition>event<identifier>OwnershipTransferred</identifier>
            <indexedParameterList>(<indexedParameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>indexed<identifier>previousOwner</identifier>
               </indexedParameter>,<indexedParameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>indexed<identifier>newOwner</identifier>
               </indexedParameter>)</indexedParameterList>;</eventDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>constructor<parameterList>()</parameterList>
            <visibleType>public</visibleType>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>owner</identifier>
                           </primaryExpression>
                        </expression>=<expression>
                           <environmentalVariable>msg.sender</environmentalVariable>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <modifierDefinition>modifier<identifier>onlyOwner</identifier>
            <parameterList>()</parameterList>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <environmentalVariable>msg.sender</environmentalVariable>
                                    </expression>
                                    <comparison>==</comparison>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>owner</identifier>
                                       </primaryExpression>
                                    </expression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <placeholderStatement>_</placeholderStatement>;</statement>}</block>
         </modifierDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>renounceOwnership</identifier>
            <parameterList>()</parameterList>
            <visibleType>public</visibleType>
            <identifier>onlyOwner</identifier>
            <block>{<statement>
                  <emitEventStatement>emit<identifier>OwnershipRenounced</identifier>
                     <callArguments>
                        <tupleExpression>(<expression>
                              <primaryExpression>
                                 <identifier>owner</identifier>
                              </primaryExpression>
                           </expression>)</tupleExpression>
                     </callArguments>
                  </emitEventStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>owner</identifier>
                           </primaryExpression>
                        </expression>=<expression>
                           <typeConversion>
                              <typeName>
                                 <elementaryTypeName>address</elementaryTypeName>
                              </typeName>(<expression>
                                 <primaryExpression>
                                    <numberLiteral>
                                       <decimalNumber>0</decimalNumber>
                                    </numberLiteral>
                                 </primaryExpression>
                              </expression>)</typeConversion>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>transferOwnership</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>_newOwner</identifier>
               </parameter>)</parameterList>
            <visibleType>public</visibleType>
            <identifier>onlyOwner</identifier>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>_transferOwnership</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <primaryExpression>
                                       <identifier>_newOwner</identifier>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>_transferOwnership</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>_newOwner</identifier>
               </parameter>)</parameterList>
            <visibleType>internal</visibleType>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>_newOwner</identifier>
                                       </primaryExpression>
                                    </expression>
                                    <comparison>!=</comparison>
                                    <expression>
                                       <typeConversion>
                                          <typeName>
                                             <elementaryTypeName>address</elementaryTypeName>
                                          </typeName>(<expression>
                                             <primaryExpression>
                                                <numberLiteral>
                                                   <decimalNumber>0</decimalNumber>
                                                </numberLiteral>
                                             </primaryExpression>
                                          </expression>)</typeConversion>
                                    </expression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <emitEventStatement>emit<identifier>OwnershipTransferred</identifier>
                     <callArguments>
                        <tupleExpression>(<expression>
                              <primaryExpression>
                                 <identifier>owner</identifier>
                              </primaryExpression>
                           </expression>,<expression>
                              <primaryExpression>
                                 <identifier>_newOwner</identifier>
                              </primaryExpression>
                           </expression>)</tupleExpression>
                     </callArguments>
                  </emitEventStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>owner</identifier>
                           </primaryExpression>
                        </expression>=<expression>
                           <primaryExpression>
                              <identifier>_newOwner</identifier>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>}</contractDefinition>
   <contractDefinition>contract<identifier>WhitelistMigratable</identifier>is<inheritanceSpecifier>
         <userDefinedTypeName>
            <identifier>Ownable</identifier>
         </userDefinedTypeName>
      </inheritanceSpecifier>{<contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <mappingSt>mapping(<typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>=&gt;<typeName>
                     <elementaryTypeName>bool</elementaryTypeName>
                  </typeName>)</mappingSt>
            </typeName>
            <visibleType>public</visibleType>
            <identifier>governanceContracts</identifier>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <eventDefinition>event<identifier>GovernanceContractAdded</identifier>
            <indexedParameterList>(<indexedParameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>addr</identifier>
               </indexedParameter>)</indexedParameterList>;</eventDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <eventDefinition>event<identifier>GovernanceContractRemoved</identifier>
            <indexedParameterList>(<indexedParameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>addr</identifier>
               </indexedParameter>)</indexedParameterList>;</eventDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <modifierDefinition>modifier<identifier>onlyGovernanceContracts</identifier>
            <parameterList>()</parameterList>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>governanceContracts</identifier>
                                       </primaryExpression>
                                    </expression>[<expression>
                                       <environmentalVariable>msg.sender</environmentalVariable>
                                    </expression>]</expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <placeholderStatement>_</placeholderStatement>;</statement>}</block>
         </modifierDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>addAddressToGovernanceContract</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>addr</identifier>
               </parameter>)</parameterList>
            <identifier>onlyOwner</identifier>
            <visibleType>public</visibleType>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>bool</elementaryTypeName>
                     </typeName>
                     <identifier>success</identifier>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{<statement>
                  <ifStatement>if(<condition>
                        <expression>!<expression>
                              <expression>
                                 <primaryExpression>
                                    <identifier>governanceContracts</identifier>
                                 </primaryExpression>
                              </expression>[<expression>
                                 <primaryExpression>
                                    <identifier>addr</identifier>
                                 </primaryExpression>
                              </expression>]</expression>
                        </expression>
                     </condition>)<statement>
                        <block>{<statement>
                              <expressionStatement>
                                 <expression>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>governanceContracts</identifier>
                                          </primaryExpression>
                                       </expression>[<expression>
                                          <primaryExpression>
                                             <identifier>addr</identifier>
                                          </primaryExpression>
                                       </expression>]</expression>=<expression>
                                       <primaryExpression>
                                          <booleanLiteral>true</booleanLiteral>
                                       </primaryExpression>
                                    </expression>
                                 </expression>
                              </expressionStatement>;</statement>
                           <statement>
                              <emitEventStatement>emit<identifier>GovernanceContractAdded</identifier>
                                 <callArguments>
                                    <tupleExpression>(<expression>
                                          <primaryExpression>
                                             <identifier>addr</identifier>
                                          </primaryExpression>
                                       </expression>)</tupleExpression>
                                 </callArguments>
                              </emitEventStatement>;</statement>
                           <statement>
                              <expressionStatement>
                                 <expression>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>success</identifier>
                                       </primaryExpression>
                                    </expression>=<expression>
                                       <primaryExpression>
                                          <booleanLiteral>true</booleanLiteral>
                                       </primaryExpression>
                                    </expression>
                                 </expression>
                              </expressionStatement>;</statement>}</block>
                     </statement>
                  </ifStatement>
               </statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>removeAddressFromGovernanceContract</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>addr</identifier>
               </parameter>)</parameterList>
            <identifier>onlyOwner</identifier>
            <visibleType>public</visibleType>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>bool</elementaryTypeName>
                     </typeName>
                     <identifier>success</identifier>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{<statement>
                  <ifStatement>if(<condition>
                        <expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>governanceContracts</identifier>
                              </primaryExpression>
                           </expression>[<expression>
                              <primaryExpression>
                                 <identifier>addr</identifier>
                              </primaryExpression>
                           </expression>]</expression>
                     </condition>)<statement>
                        <block>{<statement>
                              <expressionStatement>
                                 <expression>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>governanceContracts</identifier>
                                          </primaryExpression>
                                       </expression>[<expression>
                                          <primaryExpression>
                                             <identifier>addr</identifier>
                                          </primaryExpression>
                                       </expression>]</expression>=<expression>
                                       <primaryExpression>
                                          <booleanLiteral>false</booleanLiteral>
                                       </primaryExpression>
                                    </expression>
                                 </expression>
                              </expressionStatement>;</statement>
                           <statement>
                              <emitEventStatement>emit<identifier>GovernanceContractRemoved</identifier>
                                 <callArguments>
                                    <tupleExpression>(<expression>
                                          <primaryExpression>
                                             <identifier>addr</identifier>
                                          </primaryExpression>
                                       </expression>)</tupleExpression>
                                 </callArguments>
                              </emitEventStatement>;</statement>
                           <statement>
                              <expressionStatement>
                                 <expression>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>success</identifier>
                                       </primaryExpression>
                                    </expression>=<expression>
                                       <primaryExpression>
                                          <booleanLiteral>true</booleanLiteral>
                                       </primaryExpression>
                                    </expression>
                                 </expression>
                              </expressionStatement>;</statement>}</block>
                     </statement>
                  </ifStatement>
               </statement>}</block>
         </functionDefinition>
      </contractPartDefinition>}</contractDefinition>
   <contractDefinition>contract<identifier>SafeStorage</identifier>is<inheritanceSpecifier>
         <userDefinedTypeName>
            <identifier>WhitelistMigratable</identifier>
         </userDefinedTypeName>
      </inheritanceSpecifier>,<inheritanceSpecifier>
         <userDefinedTypeName>
            <identifier>ArrayTools</identifier>
         </userDefinedTypeName>
      </inheritanceSpecifier>{<contractPartDefinition>
         <usingForDeclaration>using<identifier>SafeMath</identifier>for<typeName>
               <elementaryTypeName>uint256</elementaryTypeName>
            </typeName>;</usingForDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <eventDefinition>event<identifier>LockSlotCreated</identifier>
            <indexedParameterList>(<indexedParameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>indexed<identifier>holder</identifier>
               </indexedParameter>,<indexedParameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>id</identifier>
               </indexedParameter>,<indexedParameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>amount</identifier>
               </indexedParameter>)</indexedParameterList>;</eventDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <structDefinition>struct<identifier>LockSlot</identifier>{<variableDeclaration>
               <typeName>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>[]</typeName>
               <identifier>tokens</identifier>
            </variableDeclaration>;<variableDeclaration>
               <typeName>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>[]</typeName>
               <identifier>periods</identifier>
            </variableDeclaration>;<variableDeclaration>
               <typeName>
                  <elementaryTypeName>uint256</elementaryTypeName>
               </typeName>
               <identifier>paidTokens</identifier>
            </variableDeclaration>;<variableDeclaration>
               <typeName>
                  <elementaryTypeName>bool</elementaryTypeName>
               </typeName>
               <identifier>finalized</identifier>
            </variableDeclaration>;}</structDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <mappingSt>mapping(<typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>=&gt;<typeName>
                     <mappingSt>mapping(<typeName>
                           <elementaryTypeName>uint256</elementaryTypeName>
                        </typeName>=&gt;<typeName>
                           <userDefinedTypeName>
                              <identifier>LockSlot</identifier>
                           </userDefinedTypeName>
                        </typeName>)</mappingSt>
                  </typeName>)</mappingSt>
            </typeName>
            <visibleType>internal</visibleType>
            <identifier>lockTokenStorage</identifier>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <mappingSt>mapping(<typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>=&gt;<typeName>
                     <typeName>
                        <elementaryTypeName>uint256</elementaryTypeName>
                     </typeName>[]</typeName>)</mappingSt>
            </typeName>
            <visibleType>private</visibleType>
            <identifier>lockSlotIdList</identifier>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <typeName>
                  <elementaryTypeName>address</elementaryTypeName>
               </typeName>[]</typeName>
            <visibleType>internal</visibleType>
            <identifier>holdersList</identifier>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <typeName>
                  <elementaryTypeName>address</elementaryTypeName>
               </typeName>[]</typeName>
            <visibleType>internal</visibleType>
            <identifier>totalSlot</identifier>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>uint256</elementaryTypeName>
            </typeName>
            <visibleType>public</visibleType>
            <identifier>maximumDurationToFreeze</identifier>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>uint256</elementaryTypeName>
            </typeName>
            <visibleType>public</visibleType>
            <identifier>lostTime</identifier>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>uint256</elementaryTypeName>
            </typeName>
            <visibleType>public</visibleType>
            <identifier>totalLockedTokens</identifier>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <userDefinedTypeName>
                  <identifier>IQDAO</identifier>
               </userDefinedTypeName>
            </typeName>
            <visibleType>public</visibleType>
            <identifier>token_</identifier>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>createLockSlot</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>_holder</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <typeName>
                        <elementaryTypeName>uint256</elementaryTypeName>
                     </typeName>[]</typeName>
                  <identifier>_tokens</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <typeName>
                        <elementaryTypeName>uint256</elementaryTypeName>
                     </typeName>[]</typeName>
                  <identifier>_periods</identifier>
               </parameter>)</parameterList>
            <visibleType>public</visibleType>
            <identifier>onlyGovernanceContracts</identifier>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>_holder</identifier>
                                       </primaryExpression>
                                    </expression>
                                    <comparison>!=</comparison>
                                    <expression>
                                       <typeConversion>
                                          <typeName>
                                             <elementaryTypeName>address</elementaryTypeName>
                                          </typeName>(<expression>
                                             <primaryExpression>
                                                <numberLiteral>
                                                   <decimalNumber>0</decimalNumber>
                                                </numberLiteral>
                                             </primaryExpression>
                                          </expression>)</typeConversion>
                                    </expression>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <stringLiteral>LockStorage cannot be created for this address</stringLiteral>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <expression>
                                          <expression>
                                             <primaryExpression>
                                                <identifier>_tokens</identifier>
                                             </primaryExpression>
                                          </expression>.length</expression>
                                       <comparison>==</comparison>
                                       <expression>
                                          <expression>
                                             <primaryExpression>
                                                <identifier>_periods</identifier>
                                             </primaryExpression>
                                          </expression>.length</expression>
                                    </expression>&amp;&amp;<expression>
                                       <expression>
                                          <expression>
                                             <primaryExpression>
                                                <identifier>_tokens</identifier>
                                             </primaryExpression>
                                          </expression>.length</expression>&gt;<expression>
                                          <primaryExpression>
                                             <numberLiteral>
                                                <decimalNumber>0</decimalNumber>
                                             </numberLiteral>
                                          </primaryExpression>
                                       </expression>
                                    </expression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <functionCall>
                                          <functionName>
                                             <identifier>_combineArray</identifier>
                                          </functionName>
                                          <callArguments>
                                             <tupleExpression>(<expression>
                                                   <primaryExpression>
                                                      <identifier>_periods</identifier>
                                                   </primaryExpression>
                                                </expression>)</tupleExpression>
                                          </callArguments>
                                       </functionCall>
                                    </expression>&lt;=<expression>
                                       <primaryExpression>
                                          <identifier>maximumDurationToFreeze</identifier>
                                       </primaryExpression>
                                    </expression>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <stringLiteral>Incorrect time, should be less 3 years</stringLiteral>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <functionCall>
                                          <functionName>
                                             <identifier>_combineArray</identifier>
                                          </functionName>
                                          <callArguments>
                                             <tupleExpression>(<expression>
                                                   <primaryExpression>
                                                      <identifier>_tokens</identifier>
                                                   </primaryExpression>
                                                </expression>)</tupleExpression>
                                          </callArguments>
                                       </functionCall>
                                    </expression>&gt;<expression>
                                       <primaryExpression>
                                          <numberLiteral>
                                             <decimalNumber>0</decimalNumber>
                                          </numberLiteral>
                                       </primaryExpression>
                                    </expression>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <stringLiteral>Incorrect amount</stringLiteral>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <variableDeclaration>
                              <typeName>
                                 <elementaryTypeName>uint256</elementaryTypeName>
                              </typeName>
                              <identifier>fullAmount</identifier>
                           </variableDeclaration>
                        </expression>=<expression>
                           <functionCall>
                              <functionName>
                                 <identifier>_combineArray</identifier>
                              </functionName>
                              <callArguments>
                                 <tupleExpression>(<expression>
                                       <primaryExpression>
                                          <identifier>_tokens</identifier>
                                       </primaryExpression>
                                    </expression>)</tupleExpression>
                              </callArguments>
                           </functionCall>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <variableDeclaration>
                              <typeName>
                                 <elementaryTypeName>uint256</elementaryTypeName>
                              </typeName>
                              <identifier>newId</identifier>
                           </variableDeclaration>
                        </expression>=<expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>totalSlot</identifier>
                              </primaryExpression>
                           </expression>.length</expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>token_</identifier>
                           </primaryExpression>
                        </expression>.<functionCall>
                           <functionName>
                              <identifier>approveForOtherContracts</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <environmentalVariable>msg.sender</environmentalVariable>
                                 </expression>,<expression>
                                    <environmentalVariable>this</environmentalVariable>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <identifier>fullAmount</identifier>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>token_</identifier>
                           </primaryExpression>
                        </expression>.<functionCall>
                           <functionName>
                              <identifier>transferFrom</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <environmentalVariable>msg.sender</environmentalVariable>
                                 </expression>,<expression>
                                    <environmentalVariable>this</environmentalVariable>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <identifier>fullAmount</identifier>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <expression>
                              <expression>
                                 <primaryExpression>
                                    <identifier>lockTokenStorage</identifier>
                                 </primaryExpression>
                              </expression>[<expression>
                                 <primaryExpression>
                                    <identifier>_holder</identifier>
                                 </primaryExpression>
                              </expression>]</expression>[<expression>
                              <primaryExpression>
                                 <identifier>newId</identifier>
                              </primaryExpression>
                           </expression>]</expression>=<expression>
                           <functionCall>
                              <functionName>
                                 <identifier>_createLockSlot</identifier>
                              </functionName>
                              <callArguments>
                                 <tupleExpression>(<expression>
                                       <primaryExpression>
                                          <identifier>_tokens</identifier>
                                       </primaryExpression>
                                    </expression>,<expression>
                                       <primaryExpression>
                                          <identifier>_periods</identifier>
                                       </primaryExpression>
                                    </expression>)</tupleExpression>
                              </callArguments>
                           </functionCall>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>totalSlot</identifier>
                           </primaryExpression>
                        </expression>.<functionCall>
                           <functionName>
                              <identifier>push</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <primaryExpression>
                                       <identifier>_holder</identifier>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>totalLockedTokens</identifier>
                           </primaryExpression>
                        </expression>=<expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>totalLockedTokens</identifier>
                              </primaryExpression>
                           </expression>.<functionCall>
                              <functionName>
                                 <identifier>add</identifier>
                              </functionName>
                              <callArguments>
                                 <tupleExpression>(<expression>
                                       <primaryExpression>
                                          <identifier>fullAmount</identifier>
                                       </primaryExpression>
                                    </expression>)</tupleExpression>
                              </callArguments>
                           </functionCall>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <ifStatement>if(<condition>
                        <expression>
                           <expression>
                              <expression>
                                 <expression>
                                    <primaryExpression>
                                       <identifier>lockSlotIdList</identifier>
                                    </primaryExpression>
                                 </expression>[<expression>
                                    <primaryExpression>
                                       <identifier>_holder</identifier>
                                    </primaryExpression>
                                 </expression>]</expression>.length</expression>
                           <comparison>==</comparison>
                           <expression>
                              <primaryExpression>
                                 <numberLiteral>
                                    <decimalNumber>0</decimalNumber>
                                 </numberLiteral>
                              </primaryExpression>
                           </expression>
                        </expression>
                     </condition>)<statement>
                        <block>{<statement>
                              <expressionStatement>
                                 <expression>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>holdersList</identifier>
                                       </primaryExpression>
                                    </expression>.<functionCall>
                                       <functionName>
                                          <identifier>push</identifier>
                                       </functionName>
                                       <callArguments>
                                          <tupleExpression>(<expression>
                                                <primaryExpression>
                                                   <identifier>_holder</identifier>
                                                </primaryExpression>
                                             </expression>)</tupleExpression>
                                       </callArguments>
                                    </functionCall>
                                 </expression>
                              </expressionStatement>;</statement>}</block>
                     </statement>
                  </ifStatement>
               </statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>lockSlotIdList</identifier>
                              </primaryExpression>
                           </expression>[<expression>
                              <primaryExpression>
                                 <identifier>_holder</identifier>
                              </primaryExpression>
                           </expression>]</expression>.<functionCall>
                           <functionName>
                              <identifier>push</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <primaryExpression>
                                       <identifier>newId</identifier>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <emitEventStatement>emit<identifier>LockSlotCreated</identifier>
                     <callArguments>
                        <tupleExpression>(<expression>
                              <primaryExpression>
                                 <identifier>_holder</identifier>
                              </primaryExpression>
                           </expression>,<expression>
                              <primaryExpression>
                                 <identifier>newId</identifier>
                              </primaryExpression>
                           </expression>,<expression>
                              <primaryExpression>
                                 <identifier>fullAmount</identifier>
                              </primaryExpression>
                           </expression>)</tupleExpression>
                     </callArguments>
                  </emitEventStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>getAddressToId</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>_lockSlotId</identifier>
               </parameter>)</parameterList>
            <visibleType>public</visibleType>
            <stateMutability>
               <viewType>view</viewType>
            </stateMutability>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>address</elementaryTypeName>
                     </typeName>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{<statement>
                  <returnStatement>return<expression>
                        <expression>
                           <primaryExpression>
                              <identifier>totalSlot</identifier>
                           </primaryExpression>
                        </expression>[<expression>
                           <primaryExpression>
                              <identifier>_lockSlotId</identifier>
                           </primaryExpression>
                        </expression>]</expression>
                  </returnStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>getAllLockSlotIdsToAddress</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>_holder</identifier>
               </parameter>)</parameterList>
            <visibleType>public</visibleType>
            <stateMutability>
               <viewType>view</viewType>
            </stateMutability>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <typeName>
                           <elementaryTypeName>uint256</elementaryTypeName>
                        </typeName>[]</typeName>
                     <identifier>_lockSlotIds</identifier>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{<statement>
                  <returnStatement>return<expression>
                        <expression>
                           <primaryExpression>
                              <identifier>lockSlotIdList</identifier>
                           </primaryExpression>
                        </expression>[<expression>
                           <primaryExpression>
                              <identifier>_holder</identifier>
                           </primaryExpression>
                        </expression>]</expression>
                  </returnStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>_createLockSlot</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <typeName>
                        <elementaryTypeName>uint256</elementaryTypeName>
                     </typeName>[]</typeName>
                  <identifier>_lockTokens</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <typeName>
                        <elementaryTypeName>uint256</elementaryTypeName>
                     </typeName>[]</typeName>
                  <identifier>_lockPeriods</identifier>
               </parameter>)</parameterList>
            <visibleType>internal</visibleType>
            <stateMutability>
               <viewType>view</viewType>
            </stateMutability>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <userDefinedTypeName>
                           <identifier>LockSlot</identifier>
                        </userDefinedTypeName>
                     </typeName>
                     <storageLocation>memory</storageLocation>
                     <identifier>_lockSlot</identifier>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>_lockPeriods</identifier>
                              </primaryExpression>
                           </expression>[<expression>
                              <primaryExpression>
                                 <numberLiteral>
                                    <decimalNumber>0</decimalNumber>
                                 </numberLiteral>
                              </primaryExpression>
                           </expression>]</expression>
                        <lvalueOperator>
                           <plusLvalueOperator>+=</plusLvalueOperator>
                        </lvalueOperator>
                        <expression>
                           <environmentalVariable>now</environmentalVariable>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <ifStatement>if(<condition>
                        <expression>
                           <expression>
                              <expression>
                                 <primaryExpression>
                                    <identifier>_lockPeriods</identifier>
                                 </primaryExpression>
                              </expression>.length</expression>&gt;<expression>
                              <primaryExpression>
                                 <numberLiteral>
                                    <decimalNumber>1</decimalNumber>
                                 </numberLiteral>
                              </primaryExpression>
                           </expression>
                        </expression>
                     </condition>)<statement>
                        <block>{<statement>
                              <forStatement>for(<expression>
                                    <expression>
                                       <variableDeclaration>
                                          <typeName>
                                             <elementaryTypeName>uint256</elementaryTypeName>
                                          </typeName>
                                          <identifier>i</identifier>
                                       </variableDeclaration>
                                    </expression>=<expression>
                                       <primaryExpression>
                                          <numberLiteral>
                                             <decimalNumber>1</decimalNumber>
                                          </numberLiteral>
                                       </primaryExpression>
                                    </expression>
                                 </expression>;<condition>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>i</identifier>
                                          </primaryExpression>
                                       </expression>&lt;<expression>
                                          <expression>
                                             <primaryExpression>
                                                <identifier>_lockPeriods</identifier>
                                             </primaryExpression>
                                          </expression>.length</expression>
                                    </expression>
                                 </condition>;<expression>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>i</identifier>
                                       </primaryExpression>
                                    </expression>
                                    <twoPlusMinusOperator>
                                       <incrementOperator>++</incrementOperator>
                                    </twoPlusMinusOperator>
                                 </expression>)<statement>
                                    <block>{<statement>
                                          <expressionStatement>
                                             <expression>
                                                <expression>
                                                   <expression>
                                                      <primaryExpression>
                                                         <identifier>_lockPeriods</identifier>
                                                      </primaryExpression>
                                                   </expression>[<expression>
                                                      <primaryExpression>
                                                         <identifier>i</identifier>
                                                      </primaryExpression>
                                                   </expression>]</expression>
                                                <lvalueOperator>
                                                   <plusLvalueOperator>+=</plusLvalueOperator>
                                                </lvalueOperator>
                                                <expression>
                                                   <expression>
                                                      <primaryExpression>
                                                         <identifier>_lockPeriods</identifier>
                                                      </primaryExpression>
                                                   </expression>[<expression>
                                                      <expression>
                                                         <primaryExpression>
                                                            <identifier>i</identifier>
                                                         </primaryExpression>
                                                      </expression>
                                                      <plusminusOperator>
                                                         <minusOperator>-</minusOperator>
                                                      </plusminusOperator>
                                                      <expression>
                                                         <primaryExpression>
                                                            <numberLiteral>
                                                               <decimalNumber>1</decimalNumber>
                                                            </numberLiteral>
                                                         </primaryExpression>
                                                      </expression>
                                                   </expression>]</expression>
                                             </expression>
                                          </expressionStatement>;</statement>}</block>
                                 </statement>
                              </forStatement>
                           </statement>}</block>
                     </statement>
                  </ifStatement>
               </statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>_lockSlot</identifier>
                           </primaryExpression>
                        </expression>=<expression>
                           <functionCall>
                              <functionName>
                                 <identifier>LockSlot</identifier>
                              </functionName>
                              <callArguments>(<nameValueList>{<identifier>tokens</identifier>:<expression>
                                       <primaryExpression>
                                          <identifier>_lockTokens</identifier>
                                       </primaryExpression>
                                    </expression>,<identifier>periods</identifier>:<expression>
                                       <primaryExpression>
                                          <identifier>_lockPeriods</identifier>
                                       </primaryExpression>
                                    </expression>,<identifier>paidTokens</identifier>:<expression>
                                       <primaryExpression>
                                          <numberLiteral>
                                             <decimalNumber>0</decimalNumber>
                                          </numberLiteral>
                                       </primaryExpression>
                                    </expression>,<identifier>finalized</identifier>:<expression>
                                       <primaryExpression>
                                          <booleanLiteral>false</booleanLiteral>
                                       </primaryExpression>
                                    </expression>}</nameValueList>)</callArguments>
                           </functionCall>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>}</contractDefinition>
   <contractDefinition>contract<identifier>ReleaseLockToken</identifier>is<inheritanceSpecifier>
         <userDefinedTypeName>
            <identifier>SafeStorage</identifier>
         </userDefinedTypeName>
      </inheritanceSpecifier>{<contractPartDefinition>
         <eventDefinition>event<identifier>TokensWithdrawed</identifier>
            <indexedParameterList>(<indexedParameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>indexed<identifier>sender</identifier>
               </indexedParameter>,<indexedParameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>amount</identifier>
               </indexedParameter>,<indexedParameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>time</identifier>
               </indexedParameter>)</indexedParameterList>;</eventDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>uint256</elementaryTypeName>
            </typeName>
            <visibleType>public</visibleType>
            <identifier>withdrawableTokens</identifier>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>release</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>_lockSlotId</identifier>
               </parameter>)</parameterList>
            <visibleType>public</visibleType>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <functionCall>
                                       <functionName>
                                          <identifier>_validateWithdraw</identifier>
                                       </functionName>
                                       <callArguments>
                                          <tupleExpression>(<expression>
                                                <environmentalVariable>msg.sender</environmentalVariable>
                                             </expression>,<expression>
                                                <primaryExpression>
                                                   <identifier>_lockSlotId</identifier>
                                                </primaryExpression>
                                             </expression>)</tupleExpression>
                                       </callArguments>
                                    </functionCall>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <variableDeclaration>
                              <typeName>
                                 <elementaryTypeName>uint256</elementaryTypeName>
                              </typeName>
                              <identifier>tokensForWithdraw</identifier>
                           </variableDeclaration>
                        </expression>=<expression>
                           <functionCall>
                              <functionName>
                                 <identifier>_getAvailableTokens</identifier>
                              </functionName>
                              <callArguments>
                                 <tupleExpression>(<expression>
                                       <environmentalVariable>msg.sender</environmentalVariable>
                                    </expression>,<expression>
                                       <primaryExpression>
                                          <identifier>_lockSlotId</identifier>
                                       </primaryExpression>
                                    </expression>)</tupleExpression>
                              </callArguments>
                           </functionCall>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <expression>
                              <expression>
                                 <expression>
                                    <primaryExpression>
                                       <identifier>lockTokenStorage</identifier>
                                    </primaryExpression>
                                 </expression>[<expression>
                                    <environmentalVariable>msg.sender</environmentalVariable>
                                 </expression>]</expression>[<expression>
                                 <primaryExpression>
                                    <identifier>_lockSlotId</identifier>
                                 </primaryExpression>
                              </expression>]</expression>.<identifier>paidTokens</identifier>
                        </expression>=<expression>
                           <expression>
                              <expression>
                                 <expression>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>lockTokenStorage</identifier>
                                       </primaryExpression>
                                    </expression>[<expression>
                                       <environmentalVariable>msg.sender</environmentalVariable>
                                    </expression>]</expression>[<expression>
                                    <primaryExpression>
                                       <identifier>_lockSlotId</identifier>
                                    </primaryExpression>
                                 </expression>]</expression>.<identifier>paidTokens</identifier>
                           </expression>.<functionCall>
                              <functionName>
                                 <identifier>add</identifier>
                              </functionName>
                              <callArguments>
                                 <tupleExpression>(<expression>
                                       <primaryExpression>
                                          <identifier>tokensForWithdraw</identifier>
                                       </primaryExpression>
                                    </expression>)</tupleExpression>
                              </callArguments>
                           </functionCall>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>token_</identifier>
                           </primaryExpression>
                        </expression>.<functionCall>
                           <functionName>
                              <identifier>transfer</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <environmentalVariable>msg.sender</environmentalVariable>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <identifier>tokensForWithdraw</identifier>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <ifStatement>if(<condition>
                        <expression>
                           <expression>
                              <functionCall>
                                 <functionName>
                                    <identifier>_combineArray</identifier>
                                 </functionName>
                                 <callArguments>
                                    <tupleExpression>(<expression>
                                          <expression>
                                             <expression>
                                                <expression>
                                                   <primaryExpression>
                                                      <identifier>lockTokenStorage</identifier>
                                                   </primaryExpression>
                                                </expression>[<expression>
                                                   <environmentalVariable>msg.sender</environmentalVariable>
                                                </expression>]</expression>[<expression>
                                                <primaryExpression>
                                                   <identifier>_lockSlotId</identifier>
                                                </primaryExpression>
                                             </expression>]</expression>.<identifier>tokens</identifier>
                                       </expression>)</tupleExpression>
                                 </callArguments>
                              </functionCall>
                           </expression>
                           <comparison>==</comparison>
                           <expression>
                              <expression>
                                 <expression>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>lockTokenStorage</identifier>
                                       </primaryExpression>
                                    </expression>[<expression>
                                       <environmentalVariable>msg.sender</environmentalVariable>
                                    </expression>]</expression>[<expression>
                                    <primaryExpression>
                                       <identifier>_lockSlotId</identifier>
                                    </primaryExpression>
                                 </expression>]</expression>.<identifier>paidTokens</identifier>
                           </expression>
                        </expression>
                     </condition>)<statement>
                        <block>{<statement>
                              <expressionStatement>
                                 <expression>
                                    <functionCall>
                                       <functionName>
                                          <identifier>_finalizeLock</identifier>
                                       </functionName>
                                       <callArguments>
                                          <tupleExpression>(<expression>
                                                <environmentalVariable>msg.sender</environmentalVariable>
                                             </expression>,<expression>
                                                <primaryExpression>
                                                   <identifier>_lockSlotId</identifier>
                                                </primaryExpression>
                                             </expression>)</tupleExpression>
                                       </callArguments>
                                    </functionCall>
                                 </expression>
                              </expressionStatement>;</statement>}</block>
                     </statement>
                  </ifStatement>
               </statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>withdrawableTokens</identifier>
                           </primaryExpression>
                        </expression>=<expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>withdrawableTokens</identifier>
                              </primaryExpression>
                           </expression>.<functionCall>
                              <functionName>
                                 <identifier>add</identifier>
                              </functionName>
                              <callArguments>
                                 <tupleExpression>(<expression>
                                       <primaryExpression>
                                          <identifier>tokensForWithdraw</identifier>
                                       </primaryExpression>
                                    </expression>)</tupleExpression>
                              </callArguments>
                           </functionCall>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>totalLockedTokens</identifier>
                           </primaryExpression>
                        </expression>=<expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>totalLockedTokens</identifier>
                              </primaryExpression>
                           </expression>.<functionCall>
                              <functionName>
                                 <identifier>sub</identifier>
                              </functionName>
                              <callArguments>
                                 <tupleExpression>(<expression>
                                       <primaryExpression>
                                          <identifier>tokensForWithdraw</identifier>
                                       </primaryExpression>
                                    </expression>)</tupleExpression>
                              </callArguments>
                           </functionCall>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <emitEventStatement>emit<identifier>TokensWithdrawed</identifier>
                     <callArguments>
                        <tupleExpression>(<expression>
                              <environmentalVariable>msg.sender</environmentalVariable>
                           </expression>,<expression>
                              <primaryExpression>
                                 <identifier>tokensForWithdraw</identifier>
                              </primaryExpression>
                           </expression>,<expression>
                              <environmentalVariable>now</environmentalVariable>
                           </expression>)</tupleExpression>
                     </callArguments>
                  </emitEventStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>getWithdrawableTokens</identifier>
            <parameterList>()</parameterList>
            <visibleType>public</visibleType>
            <stateMutability>
               <viewType>view</viewType>
            </stateMutability>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>uint256</elementaryTypeName>
                     </typeName>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{<statement>
                  <returnStatement>return<expression>
                        <primaryExpression>
                           <identifier>withdrawableTokens</identifier>
                        </primaryExpression>
                     </expression>
                  </returnStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>withdrawLostToken</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>_lockSlotId</identifier>
               </parameter>)</parameterList>
            <visibleType>public</visibleType>
            <identifier>onlyGovernanceContracts</identifier>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <environmentalVariable>now</environmentalVariable>
                                    </expression>&gt;<expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>lostTime</identifier>
                                          </primaryExpression>
                                       </expression>.<functionCall>
                                          <functionName>
                                             <identifier>add</identifier>
                                          </functionName>
                                          <callArguments>
                                             <tupleExpression>(<expression>
                                                   <expression>
                                                      <expression>
                                                         <expression>
                                                            <expression>
                                                               <primaryExpression>
                                                                  <identifier>lockTokenStorage</identifier>
                                                               </primaryExpression>
                                                            </expression>[<expression>
                                                               <functionCall>
                                                                  <functionName>
                                                                     <identifier>getAddressToId</identifier>
                                                                  </functionName>
                                                                  <callArguments>
                                                                     <tupleExpression>(<expression>
                                                                           <primaryExpression>
                                                                              <identifier>_lockSlotId</identifier>
                                                                           </primaryExpression>
                                                                        </expression>)</tupleExpression>
                                                                  </callArguments>
                                                               </functionCall>
                                                            </expression>]</expression>[<expression>
                                                            <primaryExpression>
                                                               <identifier>_lockSlotId</identifier>
                                                            </primaryExpression>
                                                         </expression>]</expression>.<identifier>periods</identifier>
                                                   </expression>[<expression>
                                                      <expression>
                                                         <expression>
                                                            <expression>
                                                               <expression>
                                                                  <expression>
                                                                     <primaryExpression>
                                                                        <identifier>lockTokenStorage</identifier>
                                                                     </primaryExpression>
                                                                  </expression>[<expression>
                                                                     <functionCall>
                                                                        <functionName>
                                                                           <identifier>getAddressToId</identifier>
                                                                        </functionName>
                                                                        <callArguments>
                                                                           <tupleExpression>(<expression>
                                                                                 <primaryExpression>
                                                                                    <identifier>_lockSlotId</identifier>
                                                                                 </primaryExpression>
                                                                              </expression>)</tupleExpression>
                                                                        </callArguments>
                                                                     </functionCall>
                                                                  </expression>]</expression>[<expression>
                                                                  <primaryExpression>
                                                                     <identifier>_lockSlotId</identifier>
                                                                  </primaryExpression>
                                                               </expression>]</expression>.<identifier>periods</identifier>
                                                         </expression>.length</expression>
                                                      <plusminusOperator>
                                                         <minusOperator>-</minusOperator>
                                                      </plusminusOperator>
                                                      <expression>
                                                         <primaryExpression>
                                                            <numberLiteral>
                                                               <decimalNumber>1</decimalNumber>
                                                            </numberLiteral>
                                                         </primaryExpression>
                                                      </expression>
                                                   </expression>]</expression>)</tupleExpression>
                                          </callArguments>
                                       </functionCall>
                                    </expression>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <stringLiteral>Tokens are not lost</stringLiteral>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <variableDeclaration>
                              <typeName>
                                 <elementaryTypeName>uint256</elementaryTypeName>
                              </typeName>
                              <identifier>tokensForWithdraw</identifier>
                           </variableDeclaration>
                        </expression>=<expression>
                           <functionCall>
                              <functionName>
                                 <identifier>_getAvailableTokens</identifier>
                              </functionName>
                              <callArguments>
                                 <tupleExpression>(<expression>
                                       <functionCall>
                                          <functionName>
                                             <identifier>getAddressToId</identifier>
                                          </functionName>
                                          <callArguments>
                                             <tupleExpression>(<expression>
                                                   <primaryExpression>
                                                      <identifier>_lockSlotId</identifier>
                                                   </primaryExpression>
                                                </expression>)</tupleExpression>
                                          </callArguments>
                                       </functionCall>
                                    </expression>,<expression>
                                       <primaryExpression>
                                          <identifier>_lockSlotId</identifier>
                                       </primaryExpression>
                                    </expression>)</tupleExpression>
                              </callArguments>
                           </functionCall>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>withdrawableTokens</identifier>
                           </primaryExpression>
                        </expression>=<expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>withdrawableTokens</identifier>
                              </primaryExpression>
                           </expression>.<functionCall>
                              <functionName>
                                 <identifier>add</identifier>
                              </functionName>
                              <callArguments>
                                 <tupleExpression>(<expression>
                                       <primaryExpression>
                                          <identifier>tokensForWithdraw</identifier>
                                       </primaryExpression>
                                    </expression>)</tupleExpression>
                              </callArguments>
                           </functionCall>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>totalLockedTokens</identifier>
                           </primaryExpression>
                        </expression>=<expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>totalLockedTokens</identifier>
                              </primaryExpression>
                           </expression>.<functionCall>
                              <functionName>
                                 <identifier>sub</identifier>
                              </functionName>
                              <callArguments>
                                 <tupleExpression>(<expression>
                                       <primaryExpression>
                                          <identifier>tokensForWithdraw</identifier>
                                       </primaryExpression>
                                    </expression>)</tupleExpression>
                              </callArguments>
                           </functionCall>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <expression>
                              <expression>
                                 <expression>
                                    <primaryExpression>
                                       <identifier>lockTokenStorage</identifier>
                                    </primaryExpression>
                                 </expression>[<expression>
                                    <functionCall>
                                       <functionName>
                                          <identifier>getAddressToId</identifier>
                                       </functionName>
                                       <callArguments>
                                          <tupleExpression>(<expression>
                                                <primaryExpression>
                                                   <identifier>_lockSlotId</identifier>
                                                </primaryExpression>
                                             </expression>)</tupleExpression>
                                       </callArguments>
                                    </functionCall>
                                 </expression>]</expression>[<expression>
                                 <primaryExpression>
                                    <identifier>_lockSlotId</identifier>
                                 </primaryExpression>
                              </expression>]</expression>.<identifier>paidTokens</identifier>
                        </expression>=<expression>
                           <functionCall>
                              <functionName>
                                 <identifier>_combineArray</identifier>
                              </functionName>
                              <callArguments>
                                 <tupleExpression>(<expression>
                                       <expression>
                                          <expression>
                                             <expression>
                                                <primaryExpression>
                                                   <identifier>lockTokenStorage</identifier>
                                                </primaryExpression>
                                             </expression>[<expression>
                                                <functionCall>
                                                   <functionName>
                                                      <identifier>getAddressToId</identifier>
                                                   </functionName>
                                                   <callArguments>
                                                      <tupleExpression>(<expression>
                                                            <primaryExpression>
                                                               <identifier>_lockSlotId</identifier>
                                                            </primaryExpression>
                                                         </expression>)</tupleExpression>
                                                   </callArguments>
                                                </functionCall>
                                             </expression>]</expression>[<expression>
                                             <primaryExpression>
                                                <identifier>_lockSlotId</identifier>
                                             </primaryExpression>
                                          </expression>]</expression>.<identifier>tokens</identifier>
                                    </expression>)</tupleExpression>
                              </callArguments>
                           </functionCall>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>_finalizeLock</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <functionCall>
                                       <functionName>
                                          <identifier>getAddressToId</identifier>
                                       </functionName>
                                       <callArguments>
                                          <tupleExpression>(<expression>
                                                <primaryExpression>
                                                   <identifier>_lockSlotId</identifier>
                                                </primaryExpression>
                                             </expression>)</tupleExpression>
                                       </callArguments>
                                    </functionCall>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <identifier>_lockSlotId</identifier>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>token_</identifier>
                           </primaryExpression>
                        </expression>.<functionCall>
                           <functionName>
                              <identifier>transfer</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <primaryExpression>
                                       <identifier>owner</identifier>
                                    </primaryExpression>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <identifier>tokensForWithdraw</identifier>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>getDateAndReleaseToCounter</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>_lockSlotId</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>_i</identifier>
               </parameter>)</parameterList>
            <visibleType>public</visibleType>
            <stateMutability>
               <viewType>view</viewType>
            </stateMutability>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>uint256</elementaryTypeName>
                     </typeName>
                     <identifier>_nextDate</identifier>
                  </parameter>,<parameter>
                     <typeName>
                        <elementaryTypeName>uint256</elementaryTypeName>
                     </typeName>
                     <identifier>_nextRelease</identifier>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>_i</identifier>
                                       </primaryExpression>
                                    </expression>&lt;<expression>
                                       <expression>
                                          <expression>
                                             <expression>
                                                <expression>
                                                   <primaryExpression>
                                                      <identifier>lockTokenStorage</identifier>
                                                   </primaryExpression>
                                                </expression>[<expression>
                                                   <functionCall>
                                                      <functionName>
                                                         <identifier>getAddressToId</identifier>
                                                      </functionName>
                                                      <callArguments>
                                                         <tupleExpression>(<expression>
                                                               <primaryExpression>
                                                                  <identifier>_lockSlotId</identifier>
                                                               </primaryExpression>
                                                            </expression>)</tupleExpression>
                                                      </callArguments>
                                                   </functionCall>
                                                </expression>]</expression>[<expression>
                                                <primaryExpression>
                                                   <identifier>_lockSlotId</identifier>
                                                </primaryExpression>
                                             </expression>]</expression>.<identifier>periods</identifier>
                                       </expression>.length</expression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>_nextRelease</identifier>
                           </primaryExpression>
                        </expression>=<expression>
                           <expression>
                              <expression>
                                 <expression>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>lockTokenStorage</identifier>
                                       </primaryExpression>
                                    </expression>[<expression>
                                       <functionCall>
                                          <functionName>
                                             <identifier>getAddressToId</identifier>
                                          </functionName>
                                          <callArguments>
                                             <tupleExpression>(<expression>
                                                   <primaryExpression>
                                                      <identifier>_lockSlotId</identifier>
                                                   </primaryExpression>
                                                </expression>)</tupleExpression>
                                          </callArguments>
                                       </functionCall>
                                    </expression>]</expression>[<expression>
                                    <primaryExpression>
                                       <identifier>_lockSlotId</identifier>
                                    </primaryExpression>
                                 </expression>]</expression>.<identifier>tokens</identifier>
                           </expression>[<expression>
                              <primaryExpression>
                                 <identifier>_i</identifier>
                              </primaryExpression>
                           </expression>]</expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>_nextDate</identifier>
                           </primaryExpression>
                        </expression>=<expression>
                           <expression>
                              <expression>
                                 <expression>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>lockTokenStorage</identifier>
                                       </primaryExpression>
                                    </expression>[<expression>
                                       <functionCall>
                                          <functionName>
                                             <identifier>getAddressToId</identifier>
                                          </functionName>
                                          <callArguments>
                                             <tupleExpression>(<expression>
                                                   <primaryExpression>
                                                      <identifier>_lockSlotId</identifier>
                                                   </primaryExpression>
                                                </expression>)</tupleExpression>
                                          </callArguments>
                                       </functionCall>
                                    </expression>]</expression>[<expression>
                                    <primaryExpression>
                                       <identifier>_lockSlotId</identifier>
                                    </primaryExpression>
                                 </expression>]</expression>.<identifier>periods</identifier>
                           </expression>[<expression>
                              <primaryExpression>
                                 <identifier>_i</identifier>
                              </primaryExpression>
                           </expression>]</expression>
                     </expression>
                  </expressionStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>getNextDateWithdraw</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>_lockSlotId</identifier>
               </parameter>)</parameterList>
            <visibleType>public</visibleType>
            <stateMutability>
               <viewType>view</viewType>
            </stateMutability>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>uint256</elementaryTypeName>
                     </typeName>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <variableDeclaration>
                           <typeName>
                              <elementaryTypeName>uint256</elementaryTypeName>
                           </typeName>
                           <identifier>nextDate</identifier>
                        </variableDeclaration>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <ifStatement>if(<condition>
                        <expression>
                           <expression>
                              <environmentalVariable>now</environmentalVariable>
                           </expression>&gt;<expression>
                              <expression>
                                 <expression>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>lockTokenStorage</identifier>
                                          </primaryExpression>
                                       </expression>[<expression>
                                          <functionCall>
                                             <functionName>
                                                <identifier>getAddressToId</identifier>
                                             </functionName>
                                             <callArguments>
                                                <tupleExpression>(<expression>
                                                      <primaryExpression>
                                                         <identifier>_lockSlotId</identifier>
                                                      </primaryExpression>
                                                   </expression>)</tupleExpression>
                                             </callArguments>
                                          </functionCall>
                                       </expression>]</expression>[<expression>
                                       <primaryExpression>
                                          <identifier>_lockSlotId</identifier>
                                       </primaryExpression>
                                    </expression>]</expression>.<identifier>periods</identifier>
                              </expression>[<expression>
                                 <expression>
                                    <expression>
                                       <expression>
                                          <expression>
                                             <expression>
                                                <primaryExpression>
                                                   <identifier>lockTokenStorage</identifier>
                                                </primaryExpression>
                                             </expression>[<expression>
                                                <functionCall>
                                                   <functionName>
                                                      <identifier>getAddressToId</identifier>
                                                   </functionName>
                                                   <callArguments>
                                                      <tupleExpression>(<expression>
                                                            <primaryExpression>
                                                               <identifier>_lockSlotId</identifier>
                                                            </primaryExpression>
                                                         </expression>)</tupleExpression>
                                                   </callArguments>
                                                </functionCall>
                                             </expression>]</expression>[<expression>
                                             <primaryExpression>
                                                <identifier>_lockSlotId</identifier>
                                             </primaryExpression>
                                          </expression>]</expression>.<identifier>periods</identifier>
                                    </expression>.length</expression>
                                 <plusminusOperator>
                                    <minusOperator>-</minusOperator>
                                 </plusminusOperator>
                                 <expression>
                                    <primaryExpression>
                                       <numberLiteral>
                                          <decimalNumber>1</decimalNumber>
                                       </numberLiteral>
                                    </primaryExpression>
                                 </expression>
                              </expression>]</expression>
                        </expression>
                     </condition>)<statement>
                        <block>{<statement>
                              <expressionStatement>
                                 <expression>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>nextDate</identifier>
                                       </primaryExpression>
                                    </expression>=<expression>
                                       <primaryExpression>
                                          <numberLiteral>
                                             <decimalNumber>0</decimalNumber>
                                          </numberLiteral>
                                       </primaryExpression>
                                    </expression>
                                 </expression>
                              </expressionStatement>;</statement>}</block>
                     </statement>else<statement>
                        <block>{<statement>
                              <forStatement>for(<expression>
                                    <expression>
                                       <variableDeclaration>
                                          <typeName>
                                             <elementaryTypeName>uint256</elementaryTypeName>
                                          </typeName>
                                          <identifier>i</identifier>
                                       </variableDeclaration>
                                    </expression>=<expression>
                                       <primaryExpression>
                                          <numberLiteral>
                                             <decimalNumber>0</decimalNumber>
                                          </numberLiteral>
                                       </primaryExpression>
                                    </expression>
                                 </expression>;<condition>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>i</identifier>
                                          </primaryExpression>
                                       </expression>&lt;<expression>
                                          <expression>
                                             <expression>
                                                <expression>
                                                   <expression>
                                                      <primaryExpression>
                                                         <identifier>lockTokenStorage</identifier>
                                                      </primaryExpression>
                                                   </expression>[<expression>
                                                      <functionCall>
                                                         <functionName>
                                                            <identifier>getAddressToId</identifier>
                                                         </functionName>
                                                         <callArguments>
                                                            <tupleExpression>(<expression>
                                                                  <primaryExpression>
                                                                     <identifier>_lockSlotId</identifier>
                                                                  </primaryExpression>
                                                               </expression>)</tupleExpression>
                                                         </callArguments>
                                                      </functionCall>
                                                   </expression>]</expression>[<expression>
                                                   <primaryExpression>
                                                      <identifier>_lockSlotId</identifier>
                                                   </primaryExpression>
                                                </expression>]</expression>.<identifier>periods</identifier>
                                          </expression>.length</expression>
                                    </expression>
                                 </condition>;<expression>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>i</identifier>
                                       </primaryExpression>
                                    </expression>
                                    <twoPlusMinusOperator>
                                       <incrementOperator>++</incrementOperator>
                                    </twoPlusMinusOperator>
                                 </expression>)<statement>
                                    <block>{<statement>
                                          <ifStatement>if(<condition>
                                                <expression>
                                                   <expression>
                                                      <environmentalVariable>now</environmentalVariable>
                                                   </expression>&lt;<expression>
                                                      <expression>
                                                         <expression>
                                                            <expression>
                                                               <expression>
                                                                  <primaryExpression>
                                                                     <identifier>lockTokenStorage</identifier>
                                                                  </primaryExpression>
                                                               </expression>[<expression>
                                                                  <functionCall>
                                                                     <functionName>
                                                                        <identifier>getAddressToId</identifier>
                                                                     </functionName>
                                                                     <callArguments>
                                                                        <tupleExpression>(<expression>
                                                                              <primaryExpression>
                                                                                 <identifier>_lockSlotId</identifier>
                                                                              </primaryExpression>
                                                                           </expression>)</tupleExpression>
                                                                     </callArguments>
                                                                  </functionCall>
                                                               </expression>]</expression>[<expression>
                                                               <primaryExpression>
                                                                  <identifier>_lockSlotId</identifier>
                                                               </primaryExpression>
                                                            </expression>]</expression>.<identifier>periods</identifier>
                                                      </expression>[<expression>
                                                         <primaryExpression>
                                                            <identifier>i</identifier>
                                                         </primaryExpression>
                                                      </expression>]</expression>
                                                </expression>
                                             </condition>)<statement>
                                                <block>{<statement>
                                                      <expressionStatement>
                                                         <expression>
                                                            <expression>
                                                               <primaryExpression>
                                                                  <identifier>nextDate</identifier>
                                                               </primaryExpression>
                                                            </expression>=<expression>
                                                               <expression>
                                                                  <expression>
                                                                     <expression>
                                                                        <expression>
                                                                           <primaryExpression>
                                                                              <identifier>lockTokenStorage</identifier>
                                                                           </primaryExpression>
                                                                        </expression>[<expression>
                                                                           <functionCall>
                                                                              <functionName>
                                                                                 <identifier>getAddressToId</identifier>
                                                                              </functionName>
                                                                              <callArguments>
                                                                                 <tupleExpression>(<expression>
                                                                                       <primaryExpression>
                                                                                          <identifier>_lockSlotId</identifier>
                                                                                       </primaryExpression>
                                                                                    </expression>)</tupleExpression>
                                                                              </callArguments>
                                                                           </functionCall>
                                                                        </expression>]</expression>[<expression>
                                                                        <primaryExpression>
                                                                           <identifier>_lockSlotId</identifier>
                                                                        </primaryExpression>
                                                                     </expression>]</expression>.<identifier>periods</identifier>
                                                               </expression>[<expression>
                                                                  <primaryExpression>
                                                                     <identifier>i</identifier>
                                                                  </primaryExpression>
                                                               </expression>]</expression>
                                                         </expression>
                                                      </expressionStatement>;</statement>
                                                   <statement>
                                                      <breakStatement>break</breakStatement>;</statement>}</block>
                                             </statement>
                                          </ifStatement>
                                       </statement>}</block>
                                 </statement>
                              </forStatement>
                           </statement>}</block>
                     </statement>
                  </ifStatement>
               </statement>
               <statement>
                  <returnStatement>return<expression>
                        <primaryExpression>
                           <identifier>nextDate</identifier>
                        </primaryExpression>
                     </expression>
                  </returnStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>_finalizeLock</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>_who</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>_id</identifier>
               </parameter>)</parameterList>
            <visibleType>internal</visibleType>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <expression>
                              <expression>
                                 <expression>
                                    <primaryExpression>
                                       <identifier>lockTokenStorage</identifier>
                                    </primaryExpression>
                                 </expression>[<expression>
                                    <primaryExpression>
                                       <identifier>_who</identifier>
                                    </primaryExpression>
                                 </expression>]</expression>[<expression>
                                 <primaryExpression>
                                    <identifier>_id</identifier>
                                 </primaryExpression>
                              </expression>]</expression>.<identifier>finalized</identifier>
                        </expression>=<expression>
                           <primaryExpression>
                              <booleanLiteral>true</booleanLiteral>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>_validateWithdraw</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>_who</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>_id</identifier>
               </parameter>)</parameterList>
            <visibleType>internal</visibleType>
            <stateMutability>
               <viewType>view</viewType>
            </stateMutability>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>bool</elementaryTypeName>
                     </typeName>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>!<expression>
                                       <expression>
                                          <expression>
                                             <expression>
                                                <primaryExpression>
                                                   <identifier>lockTokenStorage</identifier>
                                                </primaryExpression>
                                             </expression>[<expression>
                                                <primaryExpression>
                                                   <identifier>_who</identifier>
                                                </primaryExpression>
                                             </expression>]</expression>[<expression>
                                             <primaryExpression>
                                                <identifier>_id</identifier>
                                             </primaryExpression>
                                          </expression>]</expression>.<identifier>finalized</identifier>
                                    </expression>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <stringLiteral>Full withdraw already exists</stringLiteral>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <functionCall>
                                          <functionName>
                                             <identifier>_combineArray</identifier>
                                          </functionName>
                                          <callArguments>
                                             <tupleExpression>(<expression>
                                                   <expression>
                                                      <expression>
                                                         <expression>
                                                            <primaryExpression>
                                                               <identifier>lockTokenStorage</identifier>
                                                            </primaryExpression>
                                                         </expression>[<expression>
                                                            <primaryExpression>
                                                               <identifier>_who</identifier>
                                                            </primaryExpression>
                                                         </expression>]</expression>[<expression>
                                                         <primaryExpression>
                                                            <identifier>_id</identifier>
                                                         </primaryExpression>
                                                      </expression>]</expression>.<identifier>tokens</identifier>
                                                </expression>)</tupleExpression>
                                          </callArguments>
                                       </functionCall>
                                    </expression>&gt;<expression>
                                       <primaryExpression>
                                          <numberLiteral>
                                             <decimalNumber>0</decimalNumber>
                                          </numberLiteral>
                                       </primaryExpression>
                                    </expression>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <stringLiteral>This lockStorage is not exists</stringLiteral>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <environmentalVariable>now</environmentalVariable>
                                    </expression>&gt;<expression>
                                       <expression>
                                          <expression>
                                             <expression>
                                                <expression>
                                                   <primaryExpression>
                                                      <identifier>lockTokenStorage</identifier>
                                                   </primaryExpression>
                                                </expression>[<expression>
                                                   <primaryExpression>
                                                      <identifier>_who</identifier>
                                                   </primaryExpression>
                                                </expression>]</expression>[<expression>
                                                <primaryExpression>
                                                   <identifier>_id</identifier>
                                                </primaryExpression>
                                             </expression>]</expression>.<identifier>periods</identifier>
                                       </expression>[<expression>
                                          <primaryExpression>
                                             <numberLiteral>
                                                <decimalNumber>0</decimalNumber>
                                             </numberLiteral>
                                          </primaryExpression>
                                       </expression>]</expression>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <stringLiteral>Unlock time has not come</stringLiteral>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <returnStatement>return<expression>
                        <primaryExpression>
                           <booleanLiteral>true</booleanLiteral>
                        </primaryExpression>
                     </expression>
                  </returnStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>_getAvailableTokens</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>_who</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>_id</identifier>
               </parameter>)</parameterList>
            <visibleType>internal</visibleType>
            <stateMutability>
               <viewType>view</viewType>
            </stateMutability>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>uint256</elementaryTypeName>
                     </typeName>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <variableDeclaration>
                           <typeName>
                              <elementaryTypeName>uint256</elementaryTypeName>
                           </typeName>
                           <identifier>tokensForWithdraw</identifier>
                        </variableDeclaration>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <variableDeclaration>
                              <typeName>
                                 <elementaryTypeName>uint256</elementaryTypeName>
                              </typeName>
                              <identifier>paidTokens</identifier>
                           </variableDeclaration>
                        </expression>=<expression>
                           <expression>
                              <expression>
                                 <expression>
                                    <primaryExpression>
                                       <identifier>lockTokenStorage</identifier>
                                    </primaryExpression>
                                 </expression>[<expression>
                                    <primaryExpression>
                                       <identifier>_who</identifier>
                                    </primaryExpression>
                                 </expression>]</expression>[<expression>
                                 <primaryExpression>
                                    <identifier>_id</identifier>
                                 </primaryExpression>
                              </expression>]</expression>.<identifier>paidTokens</identifier>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <forStatement>for(<expression>
                        <expression>
                           <variableDeclaration>
                              <typeName>
                                 <elementaryTypeName>uint256</elementaryTypeName>
                              </typeName>
                              <identifier>i</identifier>
                           </variableDeclaration>
                        </expression>=<expression>
                           <expression>
                              <expression>
                                 <expression>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>lockTokenStorage</identifier>
                                          </primaryExpression>
                                       </expression>[<expression>
                                          <primaryExpression>
                                             <identifier>_who</identifier>
                                          </primaryExpression>
                                       </expression>]</expression>[<expression>
                                       <primaryExpression>
                                          <identifier>_id</identifier>
                                       </primaryExpression>
                                    </expression>]</expression>.<identifier>periods</identifier>
                              </expression>.length</expression>
                           <plusminusOperator>
                              <minusOperator>-</minusOperator>
                           </plusminusOperator>
                           <expression>
                              <primaryExpression>
                                 <numberLiteral>
                                    <decimalNumber>1</decimalNumber>
                                 </numberLiteral>
                              </primaryExpression>
                           </expression>
                        </expression>
                     </expression>;<condition>
                        <expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>i</identifier>
                              </primaryExpression>
                           </expression>&gt;=<expression>
                              <primaryExpression>
                                 <numberLiteral>
                                    <decimalNumber>0</decimalNumber>
                                 </numberLiteral>
                              </primaryExpression>
                           </expression>
                        </expression>
                     </condition>;<expression>
                        <expression>
                           <primaryExpression>
                              <identifier>i</identifier>
                           </primaryExpression>
                        </expression>
                        <twoPlusMinusOperator>
                           <decrementOperator>--</decrementOperator>
                        </twoPlusMinusOperator>
                     </expression>)<statement>
                        <block>{<statement>
                              <ifStatement>if(<condition>
                                    <expression>
                                       <expression>
                                          <environmentalVariable>now</environmentalVariable>
                                       </expression>&gt;=<expression>
                                          <expression>
                                             <expression>
                                                <expression>
                                                   <expression>
                                                      <primaryExpression>
                                                         <identifier>lockTokenStorage</identifier>
                                                      </primaryExpression>
                                                   </expression>[<expression>
                                                      <primaryExpression>
                                                         <identifier>_who</identifier>
                                                      </primaryExpression>
                                                   </expression>]</expression>[<expression>
                                                   <primaryExpression>
                                                      <identifier>_id</identifier>
                                                   </primaryExpression>
                                                </expression>]</expression>.<identifier>periods</identifier>
                                          </expression>[<expression>
                                             <primaryExpression>
                                                <identifier>i</identifier>
                                             </primaryExpression>
                                          </expression>]</expression>
                                    </expression>
                                 </condition>)<statement>
                                    <block>{<statement>
                                          <forStatement>for(<expression>
                                                <expression>
                                                   <variableDeclaration>
                                                      <typeName>
                                                         <elementaryTypeName>uint256</elementaryTypeName>
                                                      </typeName>
                                                      <identifier>y</identifier>
                                                   </variableDeclaration>
                                                </expression>=<expression>
                                                   <primaryExpression>
                                                      <numberLiteral>
                                                         <decimalNumber>0</decimalNumber>
                                                      </numberLiteral>
                                                   </primaryExpression>
                                                </expression>
                                             </expression>;<condition>
                                                <expression>
                                                   <expression>
                                                      <primaryExpression>
                                                         <identifier>y</identifier>
                                                      </primaryExpression>
                                                   </expression>&lt;<expression>
                                                      <expression>
                                                         <primaryExpression>
                                                            <identifier>i</identifier>
                                                         </primaryExpression>
                                                      </expression>
                                                      <plusminusOperator>
                                                         <plusOperator>+</plusOperator>
                                                      </plusminusOperator>
                                                      <expression>
                                                         <primaryExpression>
                                                            <numberLiteral>
                                                               <decimalNumber>1</decimalNumber>
                                                            </numberLiteral>
                                                         </primaryExpression>
                                                      </expression>
                                                   </expression>
                                                </expression>
                                             </condition>;<expression>
                                                <expression>
                                                   <primaryExpression>
                                                      <identifier>y</identifier>
                                                   </primaryExpression>
                                                </expression>
                                                <twoPlusMinusOperator>
                                                   <incrementOperator>++</incrementOperator>
                                                </twoPlusMinusOperator>
                                             </expression>)<statement>
                                                <block>{<statement>
                                                      <expressionStatement>
                                                         <expression>
                                                            <expression>
                                                               <primaryExpression>
                                                                  <identifier>tokensForWithdraw</identifier>
                                                               </primaryExpression>
                                                            </expression>
                                                            <lvalueOperator>
                                                               <plusLvalueOperator>+=</plusLvalueOperator>
                                                            </lvalueOperator>
                                                            <expression>
                                                               <expression>
                                                                  <expression>
                                                                     <expression>
                                                                        <expression>
                                                                           <primaryExpression>
                                                                              <identifier>lockTokenStorage</identifier>
                                                                           </primaryExpression>
                                                                        </expression>[<expression>
                                                                           <primaryExpression>
                                                                              <identifier>_who</identifier>
                                                                           </primaryExpression>
                                                                        </expression>]</expression>[<expression>
                                                                        <primaryExpression>
                                                                           <identifier>_id</identifier>
                                                                        </primaryExpression>
                                                                     </expression>]</expression>.<identifier>tokens</identifier>
                                                               </expression>[<expression>
                                                                  <primaryExpression>
                                                                     <identifier>y</identifier>
                                                                  </primaryExpression>
                                                               </expression>]</expression>
                                                         </expression>
                                                      </expressionStatement>;</statement>}</block>
                                             </statement>
                                          </forStatement>
                                       </statement>
                                       <statement>
                                          <expressionStatement>
                                             <expression>
                                                <expression>
                                                   <primaryExpression>
                                                      <identifier>tokensForWithdraw</identifier>
                                                   </primaryExpression>
                                                </expression>
                                                <lvalueOperator>
                                                   <minusLvalueOperator>-=</minusLvalueOperator>
                                                </lvalueOperator>
                                                <expression>
                                                   <primaryExpression>
                                                      <identifier>paidTokens</identifier>
                                                   </primaryExpression>
                                                </expression>
                                             </expression>
                                          </expressionStatement>;</statement>
                                       <statement>
                                          <breakStatement>break</breakStatement>;</statement>}</block>
                                 </statement>
                              </ifStatement>
                           </statement>}</block>
                     </statement>
                  </forStatement>
               </statement>
               <statement>
                  <returnStatement>return<expression>
                        <primaryExpression>
                           <identifier>tokensForWithdraw</identifier>
                        </primaryExpression>
                     </expression>
                  </returnStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>}</contractDefinition>
   <contractDefinition>contract<identifier>TimeLockedTokenStorage</identifier>is<inheritanceSpecifier>
         <userDefinedTypeName>
            <identifier>ReleaseLockToken</identifier>
         </userDefinedTypeName>
      </inheritanceSpecifier>{<contractPartDefinition>
         <functionDefinition>constructor<parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>_token</identifier>
               </parameter>)</parameterList>
            <visibleType>public</visibleType>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>token_</identifier>
                           </primaryExpression>
                        </expression>=<expression>
                           <functionCall>
                              <functionName>
                                 <identifier>IQDAO</identifier>
                              </functionName>
                              <callArguments>
                                 <tupleExpression>(<expression>
                                       <primaryExpression>
                                          <identifier>_token</identifier>
                                       </primaryExpression>
                                    </expression>)</tupleExpression>
                              </callArguments>
                           </functionCall>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>lostTime</identifier>
                           </primaryExpression>
                        </expression>=<expression>
                           <primaryExpression>
                              <numberLiteral>
                                 <decimalNumber>7862400</decimalNumber>
                              </numberLiteral>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>maximumDurationToFreeze</identifier>
                           </primaryExpression>
                        </expression>=<expression>
                           <primaryExpression>
                              <numberLiteral>
                                 <decimalNumber>94694400</decimalNumber>
                              </numberLiteral>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>getAvailableTokens</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>_lockSlotId</identifier>
               </parameter>)</parameterList>
            <visibleType>public</visibleType>
            <stateMutability>
               <viewType>view</viewType>
            </stateMutability>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>uint256</elementaryTypeName>
                     </typeName>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{<statement>
                  <ifStatement>if(<condition>
                        <expression>
                           <expression>
                              <environmentalVariable>now</environmentalVariable>
                           </expression>&lt;<expression>
                              <typeConversion>
                                 <typeName>
                                    <elementaryTypeName>uint256</elementaryTypeName>
                                 </typeName>(<expression>
                                    <expression>
                                       <expression>
                                          <expression>
                                             <expression>
                                                <primaryExpression>
                                                   <identifier>lockTokenStorage</identifier>
                                                </primaryExpression>
                                             </expression>[<expression>
                                                <functionCall>
                                                   <functionName>
                                                      <identifier>getAddressToId</identifier>
                                                   </functionName>
                                                   <callArguments>
                                                      <tupleExpression>(<expression>
                                                            <primaryExpression>
                                                               <identifier>_lockSlotId</identifier>
                                                            </primaryExpression>
                                                         </expression>)</tupleExpression>
                                                   </callArguments>
                                                </functionCall>
                                             </expression>]</expression>[<expression>
                                             <primaryExpression>
                                                <identifier>_lockSlotId</identifier>
                                             </primaryExpression>
                                          </expression>]</expression>.<identifier>periods</identifier>
                                    </expression>[<expression>
                                       <primaryExpression>
                                          <numberLiteral>
                                             <decimalNumber>0</decimalNumber>
                                          </numberLiteral>
                                       </primaryExpression>
                                    </expression>]</expression>)</typeConversion>
                           </expression>
                        </expression>
                     </condition>)<statement>
                        <block>{<statement>
                              <returnStatement>return<expression>
                                    <primaryExpression>
                                       <numberLiteral>
                                          <decimalNumber>0</decimalNumber>
                                       </numberLiteral>
                                    </primaryExpression>
                                 </expression>
                              </returnStatement>;</statement>}</block>
                     </statement>else<statement>
                        <block>{<statement>
                              <returnStatement>return<expression>
                                    <functionCall>
                                       <functionName>
                                          <identifier>_getAvailableTokens</identifier>
                                       </functionName>
                                       <callArguments>
                                          <tupleExpression>(<expression>
                                                <functionCall>
                                                   <functionName>
                                                      <identifier>getAddressToId</identifier>
                                                   </functionName>
                                                   <callArguments>
                                                      <tupleExpression>(<expression>
                                                            <primaryExpression>
                                                               <identifier>_lockSlotId</identifier>
                                                            </primaryExpression>
                                                         </expression>)</tupleExpression>
                                                   </callArguments>
                                                </functionCall>
                                             </expression>,<expression>
                                                <primaryExpression>
                                                   <identifier>_lockSlotId</identifier>
                                                </primaryExpression>
                                             </expression>)</tupleExpression>
                                       </callArguments>
                                    </functionCall>
                                 </expression>
                              </returnStatement>;</statement>}</block>
                     </statement>
                  </ifStatement>
               </statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>getHoldersQuantity</identifier>
            <parameterList>()</parameterList>
            <visibleType>public</visibleType>
            <stateMutability>
               <viewType>view</viewType>
            </stateMutability>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>uint256</elementaryTypeName>
                     </typeName>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{<statement>
                  <returnStatement>return<expression>
                        <expression>
                           <primaryExpression>
                              <identifier>holdersList</identifier>
                           </primaryExpression>
                        </expression>.length</expression>
                  </returnStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>getSlotsQuantity</identifier>
            <parameterList>()</parameterList>
            <visibleType>public</visibleType>
            <stateMutability>
               <viewType>view</viewType>
            </stateMutability>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>uint256</elementaryTypeName>
                     </typeName>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{<statement>
                  <returnStatement>return<expression>
                        <expression>
                           <primaryExpression>
                              <identifier>totalSlot</identifier>
                           </primaryExpression>
                        </expression>.length</expression>
                  </returnStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>getTotalLockedTokens</identifier>
            <parameterList>()</parameterList>
            <visibleType>public</visibleType>
            <stateMutability>
               <viewType>view</viewType>
            </stateMutability>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>uint256</elementaryTypeName>
                     </typeName>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{<statement>
                  <returnStatement>return<expression>
                        <primaryExpression>
                           <identifier>totalLockedTokens</identifier>
                        </primaryExpression>
                     </expression>
                  </returnStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>getLock</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>_lockSlotId</identifier>
               </parameter>)</parameterList>
            <visibleType>public</visibleType>
            <stateMutability>
               <viewType>view</viewType>
            </stateMutability>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>uint256</elementaryTypeName>
                     </typeName>
                     <identifier>_amountTokens</identifier>
                  </parameter>,<parameter>
                     <typeName>
                        <typeName>
                           <elementaryTypeName>uint256</elementaryTypeName>
                        </typeName>[]</typeName>
                     <identifier>_periods</identifier>
                  </parameter>,<parameter>
                     <typeName>
                        <typeName>
                           <elementaryTypeName>uint256</elementaryTypeName>
                        </typeName>[]</typeName>
                     <identifier>_tokens</identifier>
                  </parameter>,<parameter>
                     <typeName>
                        <elementaryTypeName>uint256</elementaryTypeName>
                     </typeName>
                     <identifier>_paidTokens</identifier>
                  </parameter>,<parameter>
                     <typeName>
                        <elementaryTypeName>bool</elementaryTypeName>
                     </typeName>
                     <identifier>_finalize</identifier>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>_amountTokens</identifier>
                           </primaryExpression>
                        </expression>=<expression>
                           <functionCall>
                              <functionName>
                                 <identifier>_combineArray</identifier>
                              </functionName>
                              <callArguments>
                                 <tupleExpression>(<expression>
                                       <expression>
                                          <expression>
                                             <expression>
                                                <primaryExpression>
                                                   <identifier>lockTokenStorage</identifier>
                                                </primaryExpression>
                                             </expression>[<expression>
                                                <functionCall>
                                                   <functionName>
                                                      <identifier>getAddressToId</identifier>
                                                   </functionName>
                                                   <callArguments>
                                                      <tupleExpression>(<expression>
                                                            <primaryExpression>
                                                               <identifier>_lockSlotId</identifier>
                                                            </primaryExpression>
                                                         </expression>)</tupleExpression>
                                                   </callArguments>
                                                </functionCall>
                                             </expression>]</expression>[<expression>
                                             <primaryExpression>
                                                <identifier>_lockSlotId</identifier>
                                             </primaryExpression>
                                          </expression>]</expression>.<identifier>tokens</identifier>
                                    </expression>)</tupleExpression>
                              </callArguments>
                           </functionCall>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>_periods</identifier>
                           </primaryExpression>
                        </expression>=<expression>
                           <expression>
                              <expression>
                                 <expression>
                                    <primaryExpression>
                                       <identifier>lockTokenStorage</identifier>
                                    </primaryExpression>
                                 </expression>[<expression>
                                    <functionCall>
                                       <functionName>
                                          <identifier>getAddressToId</identifier>
                                       </functionName>
                                       <callArguments>
                                          <tupleExpression>(<expression>
                                                <primaryExpression>
                                                   <identifier>_lockSlotId</identifier>
                                                </primaryExpression>
                                             </expression>)</tupleExpression>
                                       </callArguments>
                                    </functionCall>
                                 </expression>]</expression>[<expression>
                                 <primaryExpression>
                                    <identifier>_lockSlotId</identifier>
                                 </primaryExpression>
                              </expression>]</expression>.<identifier>periods</identifier>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>_tokens</identifier>
                           </primaryExpression>
                        </expression>=<expression>
                           <expression>
                              <expression>
                                 <expression>
                                    <primaryExpression>
                                       <identifier>lockTokenStorage</identifier>
                                    </primaryExpression>
                                 </expression>[<expression>
                                    <functionCall>
                                       <functionName>
                                          <identifier>getAddressToId</identifier>
                                       </functionName>
                                       <callArguments>
                                          <tupleExpression>(<expression>
                                                <primaryExpression>
                                                   <identifier>_lockSlotId</identifier>
                                                </primaryExpression>
                                             </expression>)</tupleExpression>
                                       </callArguments>
                                    </functionCall>
                                 </expression>]</expression>[<expression>
                                 <primaryExpression>
                                    <identifier>_lockSlotId</identifier>
                                 </primaryExpression>
                              </expression>]</expression>.<identifier>tokens</identifier>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>_paidTokens</identifier>
                           </primaryExpression>
                        </expression>=<expression>
                           <expression>
                              <expression>
                                 <expression>
                                    <primaryExpression>
                                       <identifier>lockTokenStorage</identifier>
                                    </primaryExpression>
                                 </expression>[<expression>
                                    <functionCall>
                                       <functionName>
                                          <identifier>getAddressToId</identifier>
                                       </functionName>
                                       <callArguments>
                                          <tupleExpression>(<expression>
                                                <primaryExpression>
                                                   <identifier>_lockSlotId</identifier>
                                                </primaryExpression>
                                             </expression>)</tupleExpression>
                                       </callArguments>
                                    </functionCall>
                                 </expression>]</expression>[<expression>
                                 <primaryExpression>
                                    <identifier>_lockSlotId</identifier>
                                 </primaryExpression>
                              </expression>]</expression>.<identifier>paidTokens</identifier>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>_finalize</identifier>
                           </primaryExpression>
                        </expression>=<expression>
                           <expression>
                              <expression>
                                 <expression>
                                    <primaryExpression>
                                       <identifier>lockTokenStorage</identifier>
                                    </primaryExpression>
                                 </expression>[<expression>
                                    <functionCall>
                                       <functionName>
                                          <identifier>getAddressToId</identifier>
                                       </functionName>
                                       <callArguments>
                                          <tupleExpression>(<expression>
                                                <primaryExpression>
                                                   <identifier>_lockSlotId</identifier>
                                                </primaryExpression>
                                             </expression>)</tupleExpression>
                                       </callArguments>
                                    </functionCall>
                                 </expression>]</expression>[<expression>
                                 <primaryExpression>
                                    <identifier>_lockSlotId</identifier>
                                 </primaryExpression>
                              </expression>]</expression>.<identifier>finalized</identifier>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>}</contractDefinition>&lt;EOF&gt;</sourceUnit>