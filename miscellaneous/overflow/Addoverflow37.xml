<?xml version="1.0" encoding="UTF-8"?>
<sourceUnit>
   <pragmaDirective>pragma<pragmaSolidity>solidity<version>
            <versionLiteral>0.4.22</versionLiteral>
         </version>
      </pragmaSolidity>;</pragmaDirective>
   <contractDefinition>contract<identifier>Addoverflow37</identifier>{<contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>uint</elementaryTypeName>
            </typeName>
            <visibleType>public</visibleType>
            <identifier>presaleSoldTokens</identifier>=<expression>
               <primaryExpression>
                  <numberLiteral>
                     <decimalNumber>0</decimalNumber>
                  </numberLiteral>
               </primaryExpression>
            </expression>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>uint</elementaryTypeName>
            </typeName>
            <visibleType>public</visibleType>
            <identifier>icoSoldTokens</identifier>=<expression>
               <primaryExpression>
                  <numberLiteral>
                     <decimalNumber>0</decimalNumber>
                  </numberLiteral>
               </primaryExpression>
            </expression>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>uint</elementaryTypeName>
            </typeName>
            <visibleType>public</visibleType>
            <identifier>totalSoldTokens</identifier>=<expression>
               <primaryExpression>
                  <numberLiteral>
                     <decimalNumber>0</decimalNumber>
                  </numberLiteral>
               </primaryExpression>
            </expression>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>uint</elementaryTypeName>
            </typeName>
            <visibleType>public</visibleType>
            <constantType>constant</constantType>
            <identifier>PRESALE_PRICE</identifier>=<expression>
               <primaryExpression>
                  <numberLiteral>
                     <decimalNumber>30000</decimalNumber>
                  </numberLiteral>
               </primaryExpression>
            </expression>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>uint</elementaryTypeName>
            </typeName>
            <visibleType>public</visibleType>
            <constantType>constant</constantType>
            <identifier>ICO_PRICE1</identifier>=<expression>
               <primaryExpression>
                  <numberLiteral>
                     <decimalNumber>40000</decimalNumber>
                  </numberLiteral>
               </primaryExpression>
            </expression>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>uint</elementaryTypeName>
            </typeName>
            <visibleType>public</visibleType>
            <constantType>constant</constantType>
            <identifier>TOTAL_LIMIT</identifier>=<expression>
               <primaryExpression>
                  <numberLiteral>
                     <decimalNumber>50000</decimalNumber>
                  </numberLiteral>
               </primaryExpression>
            </expression>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>buyTokensPresale</identifier>
            <parameterList>()</parameterList>
            <visibleType>public</visibleType>
            <stateMutability>
               <payableType>payable</payableType>
            </stateMutability>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <expression>
                                          <expression>
                                             <environmentalVariable>msg.value</environmentalVariable>
                                          </expression>
                                          <muldivOperator>
                                             <mulOperator>*</mulOperator>
                                          </muldivOperator>
                                          <expression>
                                             <primaryExpression>
                                                <identifier>PRESALE_PRICE</identifier>
                                             </primaryExpression>
                                          </expression>
                                       </expression>
                                       <muldivOperator>
                                          <divOperator>/</divOperator>
                                       </muldivOperator>
                                       <expression>
                                          <environmentalVariable>msg.value</environmentalVariable>
                                       </expression>
                                    </expression>
                                    <comparison>==</comparison>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>PRESALE_PRICE</identifier>
                                       </primaryExpression>
                                    </expression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <variableDeclaration>
                              <typeName>
                                 <elementaryTypeName>uint</elementaryTypeName>
                              </typeName>
                              <identifier>newTokens</identifier>
                           </variableDeclaration>
                        </expression>=<expression>
                           <expression>
                              <environmentalVariable>msg.value</environmentalVariable>
                           </expression>
                           <muldivOperator>
                              <mulOperator>*</mulOperator>
                           </muldivOperator>
                           <expression>
                              <primaryExpression>
                                 <identifier>PRESALE_PRICE</identifier>
                              </primaryExpression>
                           </expression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>presaleSoldTokens</identifier>
                                          </primaryExpression>
                                       </expression>
                                       <plusminusOperator>
                                          <plusOperator>+</plusOperator>
                                       </plusminusOperator>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>newTokens</identifier>
                                          </primaryExpression>
                                       </expression>
                                    </expression>&lt;=<expression>
                                       <expression>
                                          <environmentalVariable>this</environmentalVariable>
                                       </expression>.balance</expression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>presaleSoldTokens</identifier>
                           </primaryExpression>
                        </expression>
                        <lvalueOperator>
                           <plusLvalueOperator>+=</plusLvalueOperator>
                        </lvalueOperator>
                        <expression>
                           <primaryExpression>
                              <identifier>newTokens</identifier>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>buyTokensICO</identifier>
            <parameterList>()</parameterList>
            <visibleType>public</visibleType>
            <stateMutability>
               <payableType>payable</payableType>
            </stateMutability>
            <functionCall>
               <functionName>
                  <identifier>onlyInState</identifier>
               </functionName>
               <callArguments>
                  <tupleExpression>(<expression>
                        <expression>
                           <primaryExpression>
                              <identifier>State</identifier>
                           </primaryExpression>
                        </expression>.<identifier>ICORunning</identifier>
                     </expression>)</tupleExpression>
               </callArguments>
            </functionCall>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <variableDeclaration>
                              <typeName>
                                 <elementaryTypeName>uint</elementaryTypeName>
                              </typeName>
                              <identifier>newTokens1</identifier>
                           </variableDeclaration>
                        </expression>=<expression>
                           <expression>
                              <environmentalVariable>msg.value</environmentalVariable>
                           </expression>
                           <muldivOperator>
                              <mulOperator>*</mulOperator>
                           </muldivOperator>
                           <expression>
                              <functionCall>
                                 <functionName>
                                    <identifier>getPrice</identifier>
                                 </functionName>
                                 <callArguments>
                                    <tupleExpression>()</tupleExpression>
                                 </callArguments>
                              </functionCall>
                           </expression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>newTokens1</identifier>
                                          </primaryExpression>
                                       </expression>
                                       <muldivOperator>
                                          <divOperator>/</divOperator>
                                       </muldivOperator>
                                       <expression>
                                          <environmentalVariable>msg.value</environmentalVariable>
                                       </expression>
                                    </expression>
                                    <comparison>==</comparison>
                                    <expression>
                                       <functionCall>
                                          <functionName>
                                             <identifier>getPrice</identifier>
                                          </functionName>
                                          <callArguments>
                                             <tupleExpression>()</tupleExpression>
                                          </callArguments>
                                       </functionCall>
                                    </expression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>newTokens1</identifier>
                                       </primaryExpression>
                                    </expression>&lt;=<expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>totalSoldTokens</identifier>
                                          </primaryExpression>
                                       </expression>
                                       <plusminusOperator>
                                          <plusOperator>+</plusOperator>
                                       </plusminusOperator>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>newTokens1</identifier>
                                          </primaryExpression>
                                       </expression>
                                    </expression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>totalSoldTokens</identifier>
                                          </primaryExpression>
                                       </expression>
                                       <plusminusOperator>
                                          <plusOperator>+</plusOperator>
                                       </plusminusOperator>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>newTokens1</identifier>
                                          </primaryExpression>
                                       </expression>
                                    </expression>&lt;=<expression>
                                       <expression>
                                          <environmentalVariable>this</environmentalVariable>
                                       </expression>.balance</expression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>totalSoldTokens</identifier>
                           </primaryExpression>
                        </expression>
                        <lvalueOperator>
                           <plusLvalueOperator>+=</plusLvalueOperator>
                        </lvalueOperator>
                        <expression>
                           <primaryExpression>
                              <identifier>newTokens1</identifier>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>getPrice</identifier>
            <parameterList>()</parameterList>
            <stateMutability>
               <constantType>constant</constantType>
            </stateMutability>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>uint</elementaryTypeName>
                     </typeName>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{<statement>
                  <ifStatement>if(<condition>
                        <expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>currentState</identifier>
                              </primaryExpression>
                           </expression>
                           <comparison>==</comparison>
                           <expression>
                              <expression>
                                 <primaryExpression>
                                    <identifier>State</identifier>
                                 </primaryExpression>
                              </expression>.<identifier>ICORunning</identifier>
                           </expression>
                        </expression>
                     </condition>)<statement>
                        <block>{<statement>
                              <ifStatement>if(<condition>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>icoSoldTokens</identifier>
                                          </primaryExpression>
                                       </expression>&lt;<expression>
                                          <tupleExpression>(<expression>
                                                <expression>
                                                   <primaryExpression>
                                                      <numberLiteral>
                                                         <decimalNumber>200000000</decimalNumber>
                                                      </numberLiteral>
                                                   </primaryExpression>
                                                </expression>
                                                <muldivOperator>
                                                   <mulOperator>*</mulOperator>
                                                </muldivOperator>
                                                <expression>
                                                   <tupleExpression>(<expression>
                                                         <expression>
                                                            <primaryExpression>
                                                               <numberLiteral>
                                                                  <decimalNumber>1</decimalNumber>
                                                                  <numberUnit>ether</numberUnit>
                                                               </numberLiteral>
                                                            </primaryExpression>
                                                         </expression>
                                                         <muldivOperator>
                                                            <divOperator>/</divOperator>
                                                         </muldivOperator>
                                                         <expression>
                                                            <primaryExpression>
                                                               <numberLiteral>
                                                                  <decimalNumber>1</decimalNumber>
                                                                  <numberUnit>wei</numberUnit>
                                                               </numberLiteral>
                                                            </primaryExpression>
                                                         </expression>
                                                      </expression>)</tupleExpression>
                                                </expression>
                                             </expression>)</tupleExpression>
                                       </expression>
                                    </expression>
                                 </condition>)<statement>
                                    <block>{<statement>
                                          <returnStatement>return<expression>
                                                <primaryExpression>
                                                   <identifier>ICO_PRICE1</identifier>
                                                </primaryExpression>
                                             </expression>
                                          </returnStatement>;</statement>}</block>
                                 </statement>else<statement>
                                    <returnStatement>return<expression>
                                          <primaryExpression>
                                             <identifier>PRESALE_PRICE</identifier>
                                          </primaryExpression>
                                       </expression>
                                    </returnStatement>;</statement>
                              </ifStatement>
                           </statement>}</block>
                     </statement>
                  </ifStatement>
               </statement>}</block>
         </functionDefinition>
      </contractPartDefinition>}</contractDefinition>
   <contractDefinition>contract<identifier>Addoverflow38</identifier>is<inheritanceSpecifier>
         <userDefinedTypeName>
            <identifier>Addoverflow37</identifier>
         </userDefinedTypeName>
      </inheritanceSpecifier>{<contractPartDefinition>
         <functionDefinition>function<identifier>buyICO</identifier>
            <parameterList>()</parameterList>
            <visibleType>public</visibleType>
            <stateMutability>
               <payableType>payable</payableType>
            </stateMutability>
            <functionCall>
               <functionName>
                  <identifier>onlyInState</identifier>
               </functionName>
               <callArguments>
                  <tupleExpression>(<expression>
                        <expression>
                           <primaryExpression>
                              <identifier>State</identifier>
                           </primaryExpression>
                        </expression>.<identifier>ICORunning</identifier>
                     </expression>)</tupleExpression>
               </callArguments>
            </functionCall>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <variableDeclaration>
                              <typeName>
                                 <elementaryTypeName>uint</elementaryTypeName>
                              </typeName>
                              <identifier>newTokens2</identifier>
                           </variableDeclaration>
                        </expression>=<expression>
                           <expression>
                              <environmentalVariable>msg.value</environmentalVariable>
                           </expression>
                           <muldivOperator>
                              <mulOperator>*</mulOperator>
                           </muldivOperator>
                           <expression>
                              <functionCall>
                                 <functionName>
                                    <identifier>getPrice</identifier>
                                 </functionName>
                                 <callArguments>
                                    <tupleExpression>()</tupleExpression>
                                 </callArguments>
                              </functionCall>
                           </expression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>newTokens2</identifier>
                                          </primaryExpression>
                                       </expression>
                                       <muldivOperator>
                                          <divOperator>/</divOperator>
                                       </muldivOperator>
                                       <expression>
                                          <environmentalVariable>msg.value</environmentalVariable>
                                       </expression>
                                    </expression>
                                    <comparison>==</comparison>
                                    <expression>
                                       <functionCall>
                                          <functionName>
                                             <identifier>getPrice</identifier>
                                          </functionName>
                                          <callArguments>
                                             <tupleExpression>()</tupleExpression>
                                          </callArguments>
                                       </functionCall>
                                    </expression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <expression>
                                          <environmentalVariable>this</environmentalVariable>
                                       </expression>.balance</expression>&gt;=<expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>totalSoldTokens</identifier>
                                          </primaryExpression>
                                       </expression>
                                       <plusminusOperator>
                                          <plusOperator>+</plusOperator>
                                       </plusminusOperator>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>newTokens2</identifier>
                                          </primaryExpression>
                                       </expression>
                                    </expression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>totalSoldTokens</identifier>
                           </primaryExpression>
                        </expression>
                        <lvalueOperator>
                           <plusLvalueOperator>+=</plusLvalueOperator>
                        </lvalueOperator>
                        <expression>
                           <primaryExpression>
                              <identifier>newTokens2</identifier>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>}</contractDefinition>&lt;EOF&gt;</sourceUnit>