<?xml version="1.0" encoding="UTF-8"?>
<sourceUnit>
   <pragmaDirective>pragma<pragmaSolidity>solidity<version>
            <versionLiteral>0.4.25</versionLiteral>
         </version>
      </pragmaSolidity>;</pragmaDirective>
   <libraryDefinition>library<identifier>CappedMath</identifier>{<contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>uint</elementaryTypeName>
            </typeName>
            <constantType>constant</constantType>
            <visibleType>private</visibleType>
            <identifier>UINT_MAX</identifier>=<expression>
               <expression>
                  <expression>
                     <primaryExpression>
                        <numberLiteral>
                           <decimalNumber>2</decimalNumber>
                        </numberLiteral>
                     </primaryExpression>
                  </expression>
                  <powerOperator>**</powerOperator>
                  <expression>
                     <primaryExpression>
                        <numberLiteral>
                           <decimalNumber>256</decimalNumber>
                        </numberLiteral>
                     </primaryExpression>
                  </expression>
               </expression>
               <plusminusOperator>
                  <minusOperator>-</minusOperator>
               </plusminusOperator>
               <expression>
                  <primaryExpression>
                     <numberLiteral>
                        <decimalNumber>1</decimalNumber>
                     </numberLiteral>
                  </primaryExpression>
               </expression>
            </expression>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>addCap</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>uint</elementaryTypeName>
                  </typeName>
                  <identifier>_a</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint</elementaryTypeName>
                  </typeName>
                  <identifier>_b</identifier>
               </parameter>)</parameterList>
            <visibleType>internal</visibleType>
            <stateMutability>
               <pureType>pure</pureType>
            </stateMutability>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>uint</elementaryTypeName>
                     </typeName>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <variableDeclaration>
                              <typeName>
                                 <elementaryTypeName>uint</elementaryTypeName>
                              </typeName>
                              <identifier>c</identifier>
                           </variableDeclaration>
                        </expression>=<expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>_a</identifier>
                              </primaryExpression>
                           </expression>
                           <plusminusOperator>
                              <plusOperator>+</plusOperator>
                           </plusminusOperator>
                           <expression>
                              <primaryExpression>
                                 <identifier>_b</identifier>
                              </primaryExpression>
                           </expression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <returnStatement>return<expression>
                        <expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>c</identifier>
                              </primaryExpression>
                           </expression>&gt;=<expression>
                              <primaryExpression>
                                 <identifier>_a</identifier>
                              </primaryExpression>
                           </expression>
                        </expression>?<expression>
                           <primaryExpression>
                              <identifier>c</identifier>
                           </primaryExpression>
                        </expression>:<expression>
                           <primaryExpression>
                              <identifier>UINT_MAX</identifier>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </returnStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>subCap</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>uint</elementaryTypeName>
                  </typeName>
                  <identifier>_a</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint</elementaryTypeName>
                  </typeName>
                  <identifier>_b</identifier>
               </parameter>)</parameterList>
            <visibleType>internal</visibleType>
            <stateMutability>
               <pureType>pure</pureType>
            </stateMutability>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>uint</elementaryTypeName>
                     </typeName>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{<statement>
                  <ifStatement>if(<condition>
                        <expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>_b</identifier>
                              </primaryExpression>
                           </expression>&gt;<expression>
                              <primaryExpression>
                                 <identifier>_a</identifier>
                              </primaryExpression>
                           </expression>
                        </expression>
                     </condition>)<statement>
                        <returnStatement>return<expression>
                              <primaryExpression>
                                 <numberLiteral>
                                    <decimalNumber>0</decimalNumber>
                                 </numberLiteral>
                              </primaryExpression>
                           </expression>
                        </returnStatement>;</statement>else<statement>
                        <returnStatement>return<expression>
                              <expression>
                                 <primaryExpression>
                                    <identifier>_a</identifier>
                                 </primaryExpression>
                              </expression>
                              <plusminusOperator>
                                 <minusOperator>-</minusOperator>
                              </plusminusOperator>
                              <expression>
                                 <primaryExpression>
                                    <identifier>_b</identifier>
                                 </primaryExpression>
                              </expression>
                           </expression>
                        </returnStatement>;</statement>
                  </ifStatement>
               </statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>mulCap</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>uint</elementaryTypeName>
                  </typeName>
                  <identifier>_a</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint</elementaryTypeName>
                  </typeName>
                  <identifier>_b</identifier>
               </parameter>)</parameterList>
            <visibleType>internal</visibleType>
            <stateMutability>
               <pureType>pure</pureType>
            </stateMutability>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>uint</elementaryTypeName>
                     </typeName>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{<statement>
                  <ifStatement>if(<condition>
                        <expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>_a</identifier>
                              </primaryExpression>
                           </expression>
                           <comparison>==</comparison>
                           <expression>
                              <primaryExpression>
                                 <numberLiteral>
                                    <decimalNumber>0</decimalNumber>
                                 </numberLiteral>
                              </primaryExpression>
                           </expression>
                        </expression>
                     </condition>)<statement>
                        <returnStatement>return<expression>
                              <primaryExpression>
                                 <numberLiteral>
                                    <decimalNumber>0</decimalNumber>
                                 </numberLiteral>
                              </primaryExpression>
                           </expression>
                        </returnStatement>;</statement>
                  </ifStatement>
               </statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <variableDeclaration>
                              <typeName>
                                 <elementaryTypeName>uint</elementaryTypeName>
                              </typeName>
                              <identifier>c</identifier>
                           </variableDeclaration>
                        </expression>=<expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>_a</identifier>
                              </primaryExpression>
                           </expression>
                           <muldivOperator>
                              <mulOperator>*</mulOperator>
                           </muldivOperator>
                           <expression>
                              <primaryExpression>
                                 <identifier>_b</identifier>
                              </primaryExpression>
                           </expression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <returnStatement>return<expression>
                        <expression>
                           <expression>
                              <expression>
                                 <primaryExpression>
                                    <identifier>c</identifier>
                                 </primaryExpression>
                              </expression>
                              <muldivOperator>
                                 <divOperator>/</divOperator>
                              </muldivOperator>
                              <expression>
                                 <primaryExpression>
                                    <identifier>_a</identifier>
                                 </primaryExpression>
                              </expression>
                           </expression>
                           <comparison>==</comparison>
                           <expression>
                              <primaryExpression>
                                 <identifier>_b</identifier>
                              </primaryExpression>
                           </expression>
                        </expression>?<expression>
                           <primaryExpression>
                              <identifier>c</identifier>
                           </primaryExpression>
                        </expression>:<expression>
                           <primaryExpression>
                              <identifier>UINT_MAX</identifier>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </returnStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>}</libraryDefinition>
   <contractDefinition>contract<identifier>Arbitrator</identifier>{<contractPartDefinition>
         <enumDefinition>enum<identifier>DisputeStatus</identifier>{<enumValue>
               <identifier>Waiting</identifier>
            </enumValue>,<enumValue>
               <identifier>Appealable</identifier>
            </enumValue>,<enumValue>
               <identifier>Solved</identifier>
            </enumValue>}</enumDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <modifierDefinition>modifier<identifier>requireArbitrationFee</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>bytes</elementaryTypeName>
                  </typeName>
                  <identifier>_extraData</identifier>
               </parameter>)</parameterList>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <environmentalVariable>msg.value</environmentalVariable>
                                    </expression>&gt;=<expression>
                                       <functionCall>
                                          <functionName>
                                             <identifier>arbitrationCost</identifier>
                                          </functionName>
                                          <callArguments>
                                             <tupleExpression>(<expression>
                                                   <primaryExpression>
                                                      <identifier>_extraData</identifier>
                                                   </primaryExpression>
                                                </expression>)</tupleExpression>
                                          </callArguments>
                                       </functionCall>
                                    </expression>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <stringLiteral>Not enough ETH to cover arbitration costs.</stringLiteral>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <placeholderStatement>_</placeholderStatement>;</statement>}</block>
         </modifierDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <modifierDefinition>modifier<identifier>requireAppealFee</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>uint</elementaryTypeName>
                  </typeName>
                  <identifier>_disputeID</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>bytes</elementaryTypeName>
                  </typeName>
                  <identifier>_extraData</identifier>
               </parameter>)</parameterList>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <environmentalVariable>msg.value</environmentalVariable>
                                    </expression>&gt;=<expression>
                                       <functionCall>
                                          <functionName>
                                             <identifier>appealCost</identifier>
                                          </functionName>
                                          <callArguments>
                                             <tupleExpression>(<expression>
                                                   <primaryExpression>
                                                      <identifier>_disputeID</identifier>
                                                   </primaryExpression>
                                                </expression>,<expression>
                                                   <primaryExpression>
                                                      <identifier>_extraData</identifier>
                                                   </primaryExpression>
                                                </expression>)</tupleExpression>
                                          </callArguments>
                                       </functionCall>
                                    </expression>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <stringLiteral>Not enough ETH to cover appeal costs.</stringLiteral>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <placeholderStatement>_</placeholderStatement>;</statement>}</block>
         </modifierDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <eventDefinition>event<identifier>DisputeCreation</identifier>
            <indexedParameterList>(<indexedParameter>
                  <typeName>
                     <elementaryTypeName>uint</elementaryTypeName>
                  </typeName>indexed<identifier>_disputeID</identifier>
               </indexedParameter>,<indexedParameter>
                  <typeName>
                     <userDefinedTypeName>
                        <identifier>Arbitrable</identifier>
                     </userDefinedTypeName>
                  </typeName>indexed<identifier>_arbitrable</identifier>
               </indexedParameter>)</indexedParameterList>;</eventDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <eventDefinition>event<identifier>AppealPossible</identifier>
            <indexedParameterList>(<indexedParameter>
                  <typeName>
                     <elementaryTypeName>uint</elementaryTypeName>
                  </typeName>indexed<identifier>_disputeID</identifier>
               </indexedParameter>,<indexedParameter>
                  <typeName>
                     <userDefinedTypeName>
                        <identifier>Arbitrable</identifier>
                     </userDefinedTypeName>
                  </typeName>indexed<identifier>_arbitrable</identifier>
               </indexedParameter>)</indexedParameterList>;</eventDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <eventDefinition>event<identifier>AppealDecision</identifier>
            <indexedParameterList>(<indexedParameter>
                  <typeName>
                     <elementaryTypeName>uint</elementaryTypeName>
                  </typeName>indexed<identifier>_disputeID</identifier>
               </indexedParameter>,<indexedParameter>
                  <typeName>
                     <userDefinedTypeName>
                        <identifier>Arbitrable</identifier>
                     </userDefinedTypeName>
                  </typeName>indexed<identifier>_arbitrable</identifier>
               </indexedParameter>)</indexedParameterList>;</eventDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>createDispute</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>uint</elementaryTypeName>
                  </typeName>
                  <identifier>_choices</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>bytes</elementaryTypeName>
                  </typeName>
                  <identifier>_extraData</identifier>
               </parameter>)</parameterList>
            <visibleType>public</visibleType>
            <functionCall>
               <functionName>
                  <identifier>requireArbitrationFee</identifier>
               </functionName>
               <callArguments>
                  <tupleExpression>(<expression>
                        <primaryExpression>
                           <identifier>_extraData</identifier>
                        </primaryExpression>
                     </expression>)</tupleExpression>
               </callArguments>
            </functionCall>
            <stateMutability>
               <payableType>payable</payableType>
            </stateMutability>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>uint</elementaryTypeName>
                     </typeName>
                     <identifier>disputeID</identifier>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>arbitrationCost</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>bytes</elementaryTypeName>
                  </typeName>
                  <identifier>_extraData</identifier>
               </parameter>)</parameterList>
            <visibleType>public</visibleType>
            <stateMutability>
               <viewType>view</viewType>
            </stateMutability>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>uint</elementaryTypeName>
                     </typeName>
                     <identifier>fee</identifier>
                  </parameter>)</parameterList>
            </returnsParameters>;</functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>appeal</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>uint</elementaryTypeName>
                  </typeName>
                  <identifier>_disputeID</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>bytes</elementaryTypeName>
                  </typeName>
                  <identifier>_extraData</identifier>
               </parameter>)</parameterList>
            <visibleType>public</visibleType>
            <functionCall>
               <functionName>
                  <identifier>requireAppealFee</identifier>
               </functionName>
               <callArguments>
                  <tupleExpression>(<expression>
                        <primaryExpression>
                           <identifier>_disputeID</identifier>
                        </primaryExpression>
                     </expression>,<expression>
                        <primaryExpression>
                           <identifier>_extraData</identifier>
                        </primaryExpression>
                     </expression>)</tupleExpression>
               </callArguments>
            </functionCall>
            <stateMutability>
               <payableType>payable</payableType>
            </stateMutability>
            <block>{<statement>
                  <emitEventStatement>emit<identifier>AppealDecision</identifier>
                     <callArguments>
                        <tupleExpression>(<expression>
                              <primaryExpression>
                                 <identifier>_disputeID</identifier>
                              </primaryExpression>
                           </expression>,<expression>
                              <functionCall>
                                 <functionName>
                                    <identifier>Arbitrable</identifier>
                                 </functionName>
                                 <callArguments>
                                    <tupleExpression>(<expression>
                                          <environmentalVariable>msg.sender</environmentalVariable>
                                       </expression>)</tupleExpression>
                                 </callArguments>
                              </functionCall>
                           </expression>)</tupleExpression>
                     </callArguments>
                  </emitEventStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>appealCost</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>uint</elementaryTypeName>
                  </typeName>
                  <identifier>_disputeID</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>bytes</elementaryTypeName>
                  </typeName>
                  <identifier>_extraData</identifier>
               </parameter>)</parameterList>
            <visibleType>public</visibleType>
            <stateMutability>
               <viewType>view</viewType>
            </stateMutability>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>uint</elementaryTypeName>
                     </typeName>
                     <identifier>fee</identifier>
                  </parameter>)</parameterList>
            </returnsParameters>;</functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>appealPeriod</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>uint</elementaryTypeName>
                  </typeName>
                  <identifier>_disputeID</identifier>
               </parameter>)</parameterList>
            <visibleType>public</visibleType>
            <stateMutability>
               <viewType>view</viewType>
            </stateMutability>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>uint</elementaryTypeName>
                     </typeName>
                     <identifier>start</identifier>
                  </parameter>,<parameter>
                     <typeName>
                        <elementaryTypeName>uint</elementaryTypeName>
                     </typeName>
                     <identifier>end</identifier>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>disputeStatus</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>uint</elementaryTypeName>
                  </typeName>
                  <identifier>_disputeID</identifier>
               </parameter>)</parameterList>
            <visibleType>public</visibleType>
            <stateMutability>
               <viewType>view</viewType>
            </stateMutability>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <userDefinedTypeName>
                           <identifier>DisputeStatus</identifier>
                        </userDefinedTypeName>
                     </typeName>
                     <identifier>status</identifier>
                  </parameter>)</parameterList>
            </returnsParameters>;</functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>currentRuling</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>uint</elementaryTypeName>
                  </typeName>
                  <identifier>_disputeID</identifier>
               </parameter>)</parameterList>
            <visibleType>public</visibleType>
            <stateMutability>
               <viewType>view</viewType>
            </stateMutability>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>uint</elementaryTypeName>
                     </typeName>
                     <identifier>ruling</identifier>
                  </parameter>)</parameterList>
            </returnsParameters>;</functionDefinition>
      </contractPartDefinition>}</contractDefinition>
   <interfaceDefinition>interface<identifier>IArbitrable</identifier>{<contractPartDefinition>
         <eventDefinition>event<identifier>MetaEvidence</identifier>
            <indexedParameterList>(<indexedParameter>
                  <typeName>
                     <elementaryTypeName>uint</elementaryTypeName>
                  </typeName>indexed<identifier>_metaEvidenceID</identifier>
               </indexedParameter>,<indexedParameter>
                  <typeName>
                     <elementaryTypeName>string</elementaryTypeName>
                  </typeName>
                  <identifier>_evidence</identifier>
               </indexedParameter>)</indexedParameterList>;</eventDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <eventDefinition>event<identifier>Dispute</identifier>
            <indexedParameterList>(<indexedParameter>
                  <typeName>
                     <userDefinedTypeName>
                        <identifier>Arbitrator</identifier>
                     </userDefinedTypeName>
                  </typeName>indexed<identifier>_arbitrator</identifier>
               </indexedParameter>,<indexedParameter>
                  <typeName>
                     <elementaryTypeName>uint</elementaryTypeName>
                  </typeName>indexed<identifier>_disputeID</identifier>
               </indexedParameter>,<indexedParameter>
                  <typeName>
                     <elementaryTypeName>uint</elementaryTypeName>
                  </typeName>
                  <identifier>_metaEvidenceID</identifier>
               </indexedParameter>,<indexedParameter>
                  <typeName>
                     <elementaryTypeName>uint</elementaryTypeName>
                  </typeName>
                  <identifier>_evidenceGroupID</identifier>
               </indexedParameter>)</indexedParameterList>;</eventDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <eventDefinition>event<identifier>Evidence</identifier>
            <indexedParameterList>(<indexedParameter>
                  <typeName>
                     <userDefinedTypeName>
                        <identifier>Arbitrator</identifier>
                     </userDefinedTypeName>
                  </typeName>indexed<identifier>_arbitrator</identifier>
               </indexedParameter>,<indexedParameter>
                  <typeName>
                     <elementaryTypeName>uint</elementaryTypeName>
                  </typeName>indexed<identifier>_evidenceGroupID</identifier>
               </indexedParameter>,<indexedParameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>indexed<identifier>_party</identifier>
               </indexedParameter>,<indexedParameter>
                  <typeName>
                     <elementaryTypeName>string</elementaryTypeName>
                  </typeName>
                  <identifier>_evidence</identifier>
               </indexedParameter>)</indexedParameterList>;</eventDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <eventDefinition>event<identifier>Ruling</identifier>
            <indexedParameterList>(<indexedParameter>
                  <typeName>
                     <userDefinedTypeName>
                        <identifier>Arbitrator</identifier>
                     </userDefinedTypeName>
                  </typeName>indexed<identifier>_arbitrator</identifier>
               </indexedParameter>,<indexedParameter>
                  <typeName>
                     <elementaryTypeName>uint</elementaryTypeName>
                  </typeName>indexed<identifier>_disputeID</identifier>
               </indexedParameter>,<indexedParameter>
                  <typeName>
                     <elementaryTypeName>uint</elementaryTypeName>
                  </typeName>
                  <identifier>_ruling</identifier>
               </indexedParameter>)</indexedParameterList>;</eventDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>rule</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>uint</elementaryTypeName>
                  </typeName>
                  <identifier>_disputeID</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint</elementaryTypeName>
                  </typeName>
                  <identifier>_ruling</identifier>
               </parameter>)</parameterList>
            <visibleType>public</visibleType>;</functionDefinition>
      </contractPartDefinition>}</interfaceDefinition>
   <contractDefinition>contract<identifier>Arbitrable</identifier>is<inheritanceSpecifier>
         <userDefinedTypeName>
            <identifier>IArbitrable</identifier>
         </userDefinedTypeName>
      </inheritanceSpecifier>{<contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <userDefinedTypeName>
                  <identifier>Arbitrator</identifier>
               </userDefinedTypeName>
            </typeName>
            <visibleType>public</visibleType>
            <identifier>arbitrator</identifier>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>bytes</elementaryTypeName>
            </typeName>
            <visibleType>public</visibleType>
            <identifier>arbitratorExtraData</identifier>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <modifierDefinition>modifier<identifier>onlyArbitrator</identifier>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <environmentalVariable>msg.sender</environmentalVariable>
                                    </expression>
                                    <comparison>==</comparison>
                                    <expression>
                                       <typeConversion>
                                          <typeName>
                                             <elementaryTypeName>address</elementaryTypeName>
                                          </typeName>(<expression>
                                             <primaryExpression>
                                                <identifier>arbitrator</identifier>
                                             </primaryExpression>
                                          </expression>)</typeConversion>
                                    </expression>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <stringLiteral>Can only be called by the arbitrator.</stringLiteral>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <placeholderStatement>_</placeholderStatement>;</statement>}</block>
         </modifierDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>constructor<parameterList>(<parameter>
                  <typeName>
                     <userDefinedTypeName>
                        <identifier>Arbitrator</identifier>
                     </userDefinedTypeName>
                  </typeName>
                  <identifier>_arbitrator</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>bytes</elementaryTypeName>
                  </typeName>
                  <identifier>_arbitratorExtraData</identifier>
               </parameter>)</parameterList>
            <visibleType>public</visibleType>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>arbitrator</identifier>
                           </primaryExpression>
                        </expression>=<expression>
                           <primaryExpression>
                              <identifier>_arbitrator</identifier>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>arbitratorExtraData</identifier>
                           </primaryExpression>
                        </expression>=<expression>
                           <primaryExpression>
                              <identifier>_arbitratorExtraData</identifier>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>rule</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>uint</elementaryTypeName>
                  </typeName>
                  <identifier>_disputeID</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint</elementaryTypeName>
                  </typeName>
                  <identifier>_ruling</identifier>
               </parameter>)</parameterList>
            <visibleType>public</visibleType>
            <identifier>onlyArbitrator</identifier>
            <block>{<statement>
                  <emitEventStatement>emit<identifier>Ruling</identifier>
                     <callArguments>
                        <tupleExpression>(<expression>
                              <functionCall>
                                 <functionName>
                                    <identifier>Arbitrator</identifier>
                                 </functionName>
                                 <callArguments>
                                    <tupleExpression>(<expression>
                                          <environmentalVariable>msg.sender</environmentalVariable>
                                       </expression>)</tupleExpression>
                                 </callArguments>
                              </functionCall>
                           </expression>,<expression>
                              <primaryExpression>
                                 <identifier>_disputeID</identifier>
                              </primaryExpression>
                           </expression>,<expression>
                              <primaryExpression>
                                 <identifier>_ruling</identifier>
                              </primaryExpression>
                           </expression>)</tupleExpression>
                     </callArguments>
                  </emitEventStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>executeRuling</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <primaryExpression>
                                       <identifier>_disputeID</identifier>
                                    </primaryExpression>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <identifier>_ruling</identifier>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>executeRuling</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>uint</elementaryTypeName>
                  </typeName>
                  <identifier>_disputeID</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint</elementaryTypeName>
                  </typeName>
                  <identifier>_ruling</identifier>
               </parameter>)</parameterList>
            <visibleType>internal</visibleType>;</functionDefinition>
      </contractPartDefinition>}</contractDefinition>
   <interfaceDefinition>interface<identifier>PermissionInterface</identifier>{<contractPartDefinition>
         <functionDefinition>function<identifier>isPermitted</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>bytes32</elementaryTypeName>
                  </typeName>
                  <identifier>_value</identifier>
               </parameter>)</parameterList>
            <visibleType>external</visibleType>
            <stateMutability>
               <viewType>view</viewType>
            </stateMutability>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>bool</elementaryTypeName>
                     </typeName>
                     <identifier>allowed</identifier>
                  </parameter>)</parameterList>
            </returnsParameters>;</functionDefinition>
      </contractPartDefinition>}</interfaceDefinition>
   <interfaceDefinition>interface<identifier>IERC20</identifier>{<contractPartDefinition>
         <functionDefinition>function<identifier>totalSupply</identifier>
            <parameterList>()</parameterList>
            <visibleType>external</visibleType>
            <stateMutability>
               <viewType>view</viewType>
            </stateMutability>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>uint256</elementaryTypeName>
                     </typeName>
                  </parameter>)</parameterList>
            </returnsParameters>;</functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>balanceOf</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>account</identifier>
               </parameter>)</parameterList>
            <visibleType>external</visibleType>
            <stateMutability>
               <viewType>view</viewType>
            </stateMutability>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>uint256</elementaryTypeName>
                     </typeName>
                  </parameter>)</parameterList>
            </returnsParameters>;</functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>transfer</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>recipient</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>amount</identifier>
               </parameter>)</parameterList>
            <visibleType>external</visibleType>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>bool</elementaryTypeName>
                     </typeName>
                  </parameter>)</parameterList>
            </returnsParameters>;</functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>allowance</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>owner</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>spender</identifier>
               </parameter>)</parameterList>
            <visibleType>external</visibleType>
            <stateMutability>
               <viewType>view</viewType>
            </stateMutability>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>uint256</elementaryTypeName>
                     </typeName>
                  </parameter>)</parameterList>
            </returnsParameters>;</functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>approve</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>spender</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>amount</identifier>
               </parameter>)</parameterList>
            <visibleType>external</visibleType>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>bool</elementaryTypeName>
                     </typeName>
                  </parameter>)</parameterList>
            </returnsParameters>;</functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>transferFrom</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>sender</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>recipient</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>amount</identifier>
               </parameter>)</parameterList>
            <visibleType>external</visibleType>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>bool</elementaryTypeName>
                     </typeName>
                  </parameter>)</parameterList>
            </returnsParameters>;</functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <eventDefinition>event<identifier>Transfer</identifier>
            <indexedParameterList>(<indexedParameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>indexed<identifier>from</identifier>
               </indexedParameter>,<indexedParameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>indexed<identifier>to</identifier>
               </indexedParameter>,<indexedParameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>value</identifier>
               </indexedParameter>)</indexedParameterList>;</eventDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <eventDefinition>event<identifier>Approval</identifier>
            <indexedParameterList>(<indexedParameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>indexed<identifier>owner</identifier>
               </indexedParameter>,<indexedParameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>indexed<identifier>spender</identifier>
               </indexedParameter>,<indexedParameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>value</identifier>
               </indexedParameter>)</indexedParameterList>;</eventDefinition>
      </contractPartDefinition>}</interfaceDefinition>
   <libraryDefinition>library<identifier>SafeMath</identifier>{<contractPartDefinition>
         <functionDefinition>function<identifier>add</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>a</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>b</identifier>
               </parameter>)</parameterList>
            <visibleType>internal</visibleType>
            <stateMutability>
               <pureType>pure</pureType>
            </stateMutability>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>uint256</elementaryTypeName>
                     </typeName>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <variableDeclaration>
                              <typeName>
                                 <elementaryTypeName>uint256</elementaryTypeName>
                              </typeName>
                              <identifier>c</identifier>
                           </variableDeclaration>
                        </expression>=<expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>a</identifier>
                              </primaryExpression>
                           </expression>
                           <plusminusOperator>
                              <plusOperator>+</plusOperator>
                           </plusminusOperator>
                           <expression>
                              <primaryExpression>
                                 <identifier>b</identifier>
                              </primaryExpression>
                           </expression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>c</identifier>
                                       </primaryExpression>
                                    </expression>&gt;=<expression>
                                       <primaryExpression>
                                          <identifier>a</identifier>
                                       </primaryExpression>
                                    </expression>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <stringLiteral>SafeMath: addition overflow</stringLiteral>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <returnStatement>return<expression>
                        <primaryExpression>
                           <identifier>c</identifier>
                        </primaryExpression>
                     </expression>
                  </returnStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>sub</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>a</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>b</identifier>
               </parameter>)</parameterList>
            <visibleType>internal</visibleType>
            <stateMutability>
               <pureType>pure</pureType>
            </stateMutability>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>uint256</elementaryTypeName>
                     </typeName>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>b</identifier>
                                       </primaryExpression>
                                    </expression>&lt;=<expression>
                                       <primaryExpression>
                                          <identifier>a</identifier>
                                       </primaryExpression>
                                    </expression>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <stringLiteral>SafeMath: subtraction overflow</stringLiteral>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <variableDeclaration>
                              <typeName>
                                 <elementaryTypeName>uint256</elementaryTypeName>
                              </typeName>
                              <identifier>c</identifier>
                           </variableDeclaration>
                        </expression>=<expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>a</identifier>
                              </primaryExpression>
                           </expression>
                           <plusminusOperator>
                              <minusOperator>-</minusOperator>
                           </plusminusOperator>
                           <expression>
                              <primaryExpression>
                                 <identifier>b</identifier>
                              </primaryExpression>
                           </expression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <returnStatement>return<expression>
                        <primaryExpression>
                           <identifier>c</identifier>
                        </primaryExpression>
                     </expression>
                  </returnStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>mul</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>a</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>b</identifier>
               </parameter>)</parameterList>
            <visibleType>internal</visibleType>
            <stateMutability>
               <pureType>pure</pureType>
            </stateMutability>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>uint256</elementaryTypeName>
                     </typeName>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{<statement>
                  <ifStatement>if(<condition>
                        <expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>a</identifier>
                              </primaryExpression>
                           </expression>
                           <comparison>==</comparison>
                           <expression>
                              <primaryExpression>
                                 <numberLiteral>
                                    <decimalNumber>0</decimalNumber>
                                 </numberLiteral>
                              </primaryExpression>
                           </expression>
                        </expression>
                     </condition>)<statement>
                        <block>{<statement>
                              <returnStatement>return<expression>
                                    <primaryExpression>
                                       <numberLiteral>
                                          <decimalNumber>0</decimalNumber>
                                       </numberLiteral>
                                    </primaryExpression>
                                 </expression>
                              </returnStatement>;</statement>}</block>
                     </statement>
                  </ifStatement>
               </statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <variableDeclaration>
                              <typeName>
                                 <elementaryTypeName>uint256</elementaryTypeName>
                              </typeName>
                              <identifier>c</identifier>
                           </variableDeclaration>
                        </expression>=<expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>a</identifier>
                              </primaryExpression>
                           </expression>
                           <muldivOperator>
                              <mulOperator>*</mulOperator>
                           </muldivOperator>
                           <expression>
                              <primaryExpression>
                                 <identifier>b</identifier>
                              </primaryExpression>
                           </expression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>c</identifier>
                                          </primaryExpression>
                                       </expression>
                                       <muldivOperator>
                                          <divOperator>/</divOperator>
                                       </muldivOperator>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>a</identifier>
                                          </primaryExpression>
                                       </expression>
                                    </expression>
                                    <comparison>==</comparison>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>b</identifier>
                                       </primaryExpression>
                                    </expression>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <stringLiteral>SafeMath: multiplication overflow</stringLiteral>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <returnStatement>return<expression>
                        <primaryExpression>
                           <identifier>c</identifier>
                        </primaryExpression>
                     </expression>
                  </returnStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>div</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>a</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>b</identifier>
               </parameter>)</parameterList>
            <visibleType>internal</visibleType>
            <stateMutability>
               <pureType>pure</pureType>
            </stateMutability>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>uint256</elementaryTypeName>
                     </typeName>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>b</identifier>
                                       </primaryExpression>
                                    </expression>&gt;<expression>
                                       <primaryExpression>
                                          <numberLiteral>
                                             <decimalNumber>0</decimalNumber>
                                          </numberLiteral>
                                       </primaryExpression>
                                    </expression>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <stringLiteral>SafeMath: division by zero</stringLiteral>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <variableDeclaration>
                              <typeName>
                                 <elementaryTypeName>uint256</elementaryTypeName>
                              </typeName>
                              <identifier>c</identifier>
                           </variableDeclaration>
                        </expression>=<expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>a</identifier>
                              </primaryExpression>
                           </expression>
                           <muldivOperator>
                              <divOperator>/</divOperator>
                           </muldivOperator>
                           <expression>
                              <primaryExpression>
                                 <identifier>b</identifier>
                              </primaryExpression>
                           </expression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <returnStatement>return<expression>
                        <primaryExpression>
                           <identifier>c</identifier>
                        </primaryExpression>
                     </expression>
                  </returnStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>mod</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>a</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>b</identifier>
               </parameter>)</parameterList>
            <visibleType>internal</visibleType>
            <stateMutability>
               <pureType>pure</pureType>
            </stateMutability>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>uint256</elementaryTypeName>
                     </typeName>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>b</identifier>
                                       </primaryExpression>
                                    </expression>
                                    <comparison>!=</comparison>
                                    <expression>
                                       <primaryExpression>
                                          <numberLiteral>
                                             <decimalNumber>0</decimalNumber>
                                          </numberLiteral>
                                       </primaryExpression>
                                    </expression>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <stringLiteral>SafeMath: modulo by zero</stringLiteral>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <returnStatement>return<expression>
                        <expression>
                           <primaryExpression>
                              <identifier>a</identifier>
                           </primaryExpression>
                        </expression>
                        <muldivOperator>
                           <divRemOperator>%</divRemOperator>
                        </muldivOperator>
                        <expression>
                           <primaryExpression>
                              <identifier>b</identifier>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </returnStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>}</libraryDefinition>
   <contractDefinition>contract<identifier>ERC20</identifier>is<inheritanceSpecifier>
         <userDefinedTypeName>
            <identifier>IERC20</identifier>
         </userDefinedTypeName>
      </inheritanceSpecifier>{<contractPartDefinition>
         <usingForDeclaration>using<identifier>SafeMath</identifier>for<typeName>
               <elementaryTypeName>uint256</elementaryTypeName>
            </typeName>;</usingForDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <mappingSt>mapping(<typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>=&gt;<typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>)</mappingSt>
            </typeName>
            <visibleType>private</visibleType>
            <identifier>_balances</identifier>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <mappingSt>mapping(<typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>=&gt;<typeName>
                     <mappingSt>mapping(<typeName>
                           <elementaryTypeName>address</elementaryTypeName>
                        </typeName>=&gt;<typeName>
                           <elementaryTypeName>uint256</elementaryTypeName>
                        </typeName>)</mappingSt>
                  </typeName>)</mappingSt>
            </typeName>
            <visibleType>private</visibleType>
            <identifier>_allowances</identifier>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>uint256</elementaryTypeName>
            </typeName>
            <visibleType>private</visibleType>
            <identifier>_totalSupply</identifier>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>totalSupply</identifier>
            <parameterList>()</parameterList>
            <visibleType>public</visibleType>
            <stateMutability>
               <viewType>view</viewType>
            </stateMutability>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>uint256</elementaryTypeName>
                     </typeName>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{<statement>
                  <returnStatement>return<expression>
                        <primaryExpression>
                           <identifier>_totalSupply</identifier>
                        </primaryExpression>
                     </expression>
                  </returnStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>balanceOf</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>account</identifier>
               </parameter>)</parameterList>
            <visibleType>public</visibleType>
            <stateMutability>
               <viewType>view</viewType>
            </stateMutability>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>uint256</elementaryTypeName>
                     </typeName>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{<statement>
                  <returnStatement>return<expression>
                        <expression>
                           <primaryExpression>
                              <identifier>_balances</identifier>
                           </primaryExpression>
                        </expression>[<expression>
                           <primaryExpression>
                              <identifier>account</identifier>
                           </primaryExpression>
                        </expression>]</expression>
                  </returnStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>transfer</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>recipient</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>amount</identifier>
               </parameter>)</parameterList>
            <visibleType>public</visibleType>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>bool</elementaryTypeName>
                     </typeName>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>_transfer</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <environmentalVariable>msg.sender</environmentalVariable>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <identifier>recipient</identifier>
                                    </primaryExpression>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <identifier>amount</identifier>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <returnStatement>return<expression>
                        <primaryExpression>
                           <booleanLiteral>true</booleanLiteral>
                        </primaryExpression>
                     </expression>
                  </returnStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>allowance</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>owner</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>spender</identifier>
               </parameter>)</parameterList>
            <visibleType>public</visibleType>
            <stateMutability>
               <viewType>view</viewType>
            </stateMutability>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>uint256</elementaryTypeName>
                     </typeName>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{<statement>
                  <returnStatement>return<expression>
                        <expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>_allowances</identifier>
                              </primaryExpression>
                           </expression>[<expression>
                              <primaryExpression>
                                 <identifier>owner</identifier>
                              </primaryExpression>
                           </expression>]</expression>[<expression>
                           <primaryExpression>
                              <identifier>spender</identifier>
                           </primaryExpression>
                        </expression>]</expression>
                  </returnStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>approve</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>spender</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>value</identifier>
               </parameter>)</parameterList>
            <visibleType>public</visibleType>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>bool</elementaryTypeName>
                     </typeName>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>_approve</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <environmentalVariable>msg.sender</environmentalVariable>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <identifier>spender</identifier>
                                    </primaryExpression>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <identifier>value</identifier>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <returnStatement>return<expression>
                        <primaryExpression>
                           <booleanLiteral>true</booleanLiteral>
                        </primaryExpression>
                     </expression>
                  </returnStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>transferFrom</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>sender</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>recipient</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>amount</identifier>
               </parameter>)</parameterList>
            <visibleType>public</visibleType>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>bool</elementaryTypeName>
                     </typeName>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>_transfer</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <primaryExpression>
                                       <identifier>sender</identifier>
                                    </primaryExpression>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <identifier>recipient</identifier>
                                    </primaryExpression>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <identifier>amount</identifier>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>_approve</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <primaryExpression>
                                       <identifier>sender</identifier>
                                    </primaryExpression>
                                 </expression>,<expression>
                                    <environmentalVariable>msg.sender</environmentalVariable>
                                 </expression>,<expression>
                                    <expression>
                                       <expression>
                                          <expression>
                                             <primaryExpression>
                                                <identifier>_allowances</identifier>
                                             </primaryExpression>
                                          </expression>[<expression>
                                             <primaryExpression>
                                                <identifier>sender</identifier>
                                             </primaryExpression>
                                          </expression>]</expression>[<expression>
                                          <environmentalVariable>msg.sender</environmentalVariable>
                                       </expression>]</expression>.<functionCall>
                                       <functionName>
                                          <identifier>sub</identifier>
                                       </functionName>
                                       <callArguments>
                                          <tupleExpression>(<expression>
                                                <primaryExpression>
                                                   <identifier>amount</identifier>
                                                </primaryExpression>
                                             </expression>)</tupleExpression>
                                       </callArguments>
                                    </functionCall>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <returnStatement>return<expression>
                        <primaryExpression>
                           <booleanLiteral>true</booleanLiteral>
                        </primaryExpression>
                     </expression>
                  </returnStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>increaseAllowance</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>spender</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>addedValue</identifier>
               </parameter>)</parameterList>
            <visibleType>public</visibleType>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>bool</elementaryTypeName>
                     </typeName>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>_approve</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <environmentalVariable>msg.sender</environmentalVariable>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <identifier>spender</identifier>
                                    </primaryExpression>
                                 </expression>,<expression>
                                    <expression>
                                       <expression>
                                          <expression>
                                             <primaryExpression>
                                                <identifier>_allowances</identifier>
                                             </primaryExpression>
                                          </expression>[<expression>
                                             <environmentalVariable>msg.sender</environmentalVariable>
                                          </expression>]</expression>[<expression>
                                          <primaryExpression>
                                             <identifier>spender</identifier>
                                          </primaryExpression>
                                       </expression>]</expression>.<functionCall>
                                       <functionName>
                                          <identifier>add</identifier>
                                       </functionName>
                                       <callArguments>
                                          <tupleExpression>(<expression>
                                                <primaryExpression>
                                                   <identifier>addedValue</identifier>
                                                </primaryExpression>
                                             </expression>)</tupleExpression>
                                       </callArguments>
                                    </functionCall>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <returnStatement>return<expression>
                        <primaryExpression>
                           <booleanLiteral>true</booleanLiteral>
                        </primaryExpression>
                     </expression>
                  </returnStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>decreaseAllowance</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>spender</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>subtractedValue</identifier>
               </parameter>)</parameterList>
            <visibleType>public</visibleType>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>bool</elementaryTypeName>
                     </typeName>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>_approve</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <environmentalVariable>msg.sender</environmentalVariable>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <identifier>spender</identifier>
                                    </primaryExpression>
                                 </expression>,<expression>
                                    <expression>
                                       <expression>
                                          <expression>
                                             <primaryExpression>
                                                <identifier>_allowances</identifier>
                                             </primaryExpression>
                                          </expression>[<expression>
                                             <environmentalVariable>msg.sender</environmentalVariable>
                                          </expression>]</expression>[<expression>
                                          <primaryExpression>
                                             <identifier>spender</identifier>
                                          </primaryExpression>
                                       </expression>]</expression>.<functionCall>
                                       <functionName>
                                          <identifier>sub</identifier>
                                       </functionName>
                                       <callArguments>
                                          <tupleExpression>(<expression>
                                                <primaryExpression>
                                                   <identifier>subtractedValue</identifier>
                                                </primaryExpression>
                                             </expression>)</tupleExpression>
                                       </callArguments>
                                    </functionCall>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <returnStatement>return<expression>
                        <primaryExpression>
                           <booleanLiteral>true</booleanLiteral>
                        </primaryExpression>
                     </expression>
                  </returnStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>_transfer</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>sender</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>recipient</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>amount</identifier>
               </parameter>)</parameterList>
            <visibleType>internal</visibleType>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>sender</identifier>
                                       </primaryExpression>
                                    </expression>
                                    <comparison>!=</comparison>
                                    <expression>
                                       <typeConversion>
                                          <typeName>
                                             <elementaryTypeName>address</elementaryTypeName>
                                          </typeName>(<expression>
                                             <primaryExpression>
                                                <numberLiteral>
                                                   <decimalNumber>0</decimalNumber>
                                                </numberLiteral>
                                             </primaryExpression>
                                          </expression>)</typeConversion>
                                    </expression>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <stringLiteral>ERC20: transfer from the zero address</stringLiteral>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>recipient</identifier>
                                       </primaryExpression>
                                    </expression>
                                    <comparison>!=</comparison>
                                    <expression>
                                       <typeConversion>
                                          <typeName>
                                             <elementaryTypeName>address</elementaryTypeName>
                                          </typeName>(<expression>
                                             <primaryExpression>
                                                <numberLiteral>
                                                   <decimalNumber>0</decimalNumber>
                                                </numberLiteral>
                                             </primaryExpression>
                                          </expression>)</typeConversion>
                                    </expression>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <stringLiteral>ERC20: transfer to the zero address</stringLiteral>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>_balances</identifier>
                              </primaryExpression>
                           </expression>[<expression>
                              <primaryExpression>
                                 <identifier>sender</identifier>
                              </primaryExpression>
                           </expression>]</expression>=<expression>
                           <expression>
                              <expression>
                                 <primaryExpression>
                                    <identifier>_balances</identifier>
                                 </primaryExpression>
                              </expression>[<expression>
                                 <primaryExpression>
                                    <identifier>sender</identifier>
                                 </primaryExpression>
                              </expression>]</expression>.<functionCall>
                              <functionName>
                                 <identifier>sub</identifier>
                              </functionName>
                              <callArguments>
                                 <tupleExpression>(<expression>
                                       <primaryExpression>
                                          <identifier>amount</identifier>
                                       </primaryExpression>
                                    </expression>)</tupleExpression>
                              </callArguments>
                           </functionCall>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>_balances</identifier>
                              </primaryExpression>
                           </expression>[<expression>
                              <primaryExpression>
                                 <identifier>recipient</identifier>
                              </primaryExpression>
                           </expression>]</expression>=<expression>
                           <expression>
                              <expression>
                                 <primaryExpression>
                                    <identifier>_balances</identifier>
                                 </primaryExpression>
                              </expression>[<expression>
                                 <primaryExpression>
                                    <identifier>recipient</identifier>
                                 </primaryExpression>
                              </expression>]</expression>.<functionCall>
                              <functionName>
                                 <identifier>add</identifier>
                              </functionName>
                              <callArguments>
                                 <tupleExpression>(<expression>
                                       <primaryExpression>
                                          <identifier>amount</identifier>
                                       </primaryExpression>
                                    </expression>)</tupleExpression>
                              </callArguments>
                           </functionCall>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <emitEventStatement>emit<identifier>Transfer</identifier>
                     <callArguments>
                        <tupleExpression>(<expression>
                              <primaryExpression>
                                 <identifier>sender</identifier>
                              </primaryExpression>
                           </expression>,<expression>
                              <primaryExpression>
                                 <identifier>recipient</identifier>
                              </primaryExpression>
                           </expression>,<expression>
                              <primaryExpression>
                                 <identifier>amount</identifier>
                              </primaryExpression>
                           </expression>)</tupleExpression>
                     </callArguments>
                  </emitEventStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>_mint</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>account</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>amount</identifier>
               </parameter>)</parameterList>
            <visibleType>internal</visibleType>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>account</identifier>
                                       </primaryExpression>
                                    </expression>
                                    <comparison>!=</comparison>
                                    <expression>
                                       <typeConversion>
                                          <typeName>
                                             <elementaryTypeName>address</elementaryTypeName>
                                          </typeName>(<expression>
                                             <primaryExpression>
                                                <numberLiteral>
                                                   <decimalNumber>0</decimalNumber>
                                                </numberLiteral>
                                             </primaryExpression>
                                          </expression>)</typeConversion>
                                    </expression>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <stringLiteral>ERC20: mint to the zero address</stringLiteral>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>_totalSupply</identifier>
                           </primaryExpression>
                        </expression>=<expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>_totalSupply</identifier>
                              </primaryExpression>
                           </expression>.<functionCall>
                              <functionName>
                                 <identifier>add</identifier>
                              </functionName>
                              <callArguments>
                                 <tupleExpression>(<expression>
                                       <primaryExpression>
                                          <identifier>amount</identifier>
                                       </primaryExpression>
                                    </expression>)</tupleExpression>
                              </callArguments>
                           </functionCall>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>_balances</identifier>
                              </primaryExpression>
                           </expression>[<expression>
                              <primaryExpression>
                                 <identifier>account</identifier>
                              </primaryExpression>
                           </expression>]</expression>=<expression>
                           <expression>
                              <expression>
                                 <primaryExpression>
                                    <identifier>_balances</identifier>
                                 </primaryExpression>
                              </expression>[<expression>
                                 <primaryExpression>
                                    <identifier>account</identifier>
                                 </primaryExpression>
                              </expression>]</expression>.<functionCall>
                              <functionName>
                                 <identifier>add</identifier>
                              </functionName>
                              <callArguments>
                                 <tupleExpression>(<expression>
                                       <primaryExpression>
                                          <identifier>amount</identifier>
                                       </primaryExpression>
                                    </expression>)</tupleExpression>
                              </callArguments>
                           </functionCall>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <emitEventStatement>emit<identifier>Transfer</identifier>
                     <callArguments>
                        <tupleExpression>(<expression>
                              <typeConversion>
                                 <typeName>
                                    <elementaryTypeName>address</elementaryTypeName>
                                 </typeName>(<expression>
                                    <primaryExpression>
                                       <numberLiteral>
                                          <decimalNumber>0</decimalNumber>
                                       </numberLiteral>
                                    </primaryExpression>
                                 </expression>)</typeConversion>
                           </expression>,<expression>
                              <primaryExpression>
                                 <identifier>account</identifier>
                              </primaryExpression>
                           </expression>,<expression>
                              <primaryExpression>
                                 <identifier>amount</identifier>
                              </primaryExpression>
                           </expression>)</tupleExpression>
                     </callArguments>
                  </emitEventStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>_burn</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>account</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>value</identifier>
               </parameter>)</parameterList>
            <visibleType>internal</visibleType>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>account</identifier>
                                       </primaryExpression>
                                    </expression>
                                    <comparison>!=</comparison>
                                    <expression>
                                       <typeConversion>
                                          <typeName>
                                             <elementaryTypeName>address</elementaryTypeName>
                                          </typeName>(<expression>
                                             <primaryExpression>
                                                <numberLiteral>
                                                   <decimalNumber>0</decimalNumber>
                                                </numberLiteral>
                                             </primaryExpression>
                                          </expression>)</typeConversion>
                                    </expression>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <stringLiteral>ERC20: burn from the zero address</stringLiteral>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>_totalSupply</identifier>
                           </primaryExpression>
                        </expression>=<expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>_totalSupply</identifier>
                              </primaryExpression>
                           </expression>.<functionCall>
                              <functionName>
                                 <identifier>sub</identifier>
                              </functionName>
                              <callArguments>
                                 <tupleExpression>(<expression>
                                       <primaryExpression>
                                          <identifier>value</identifier>
                                       </primaryExpression>
                                    </expression>)</tupleExpression>
                              </callArguments>
                           </functionCall>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>_balances</identifier>
                              </primaryExpression>
                           </expression>[<expression>
                              <primaryExpression>
                                 <identifier>account</identifier>
                              </primaryExpression>
                           </expression>]</expression>=<expression>
                           <expression>
                              <expression>
                                 <primaryExpression>
                                    <identifier>_balances</identifier>
                                 </primaryExpression>
                              </expression>[<expression>
                                 <primaryExpression>
                                    <identifier>account</identifier>
                                 </primaryExpression>
                              </expression>]</expression>.<functionCall>
                              <functionName>
                                 <identifier>sub</identifier>
                              </functionName>
                              <callArguments>
                                 <tupleExpression>(<expression>
                                       <primaryExpression>
                                          <identifier>value</identifier>
                                       </primaryExpression>
                                    </expression>)</tupleExpression>
                              </callArguments>
                           </functionCall>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <emitEventStatement>emit<identifier>Transfer</identifier>
                     <callArguments>
                        <tupleExpression>(<expression>
                              <primaryExpression>
                                 <identifier>account</identifier>
                              </primaryExpression>
                           </expression>,<expression>
                              <typeConversion>
                                 <typeName>
                                    <elementaryTypeName>address</elementaryTypeName>
                                 </typeName>(<expression>
                                    <primaryExpression>
                                       <numberLiteral>
                                          <decimalNumber>0</decimalNumber>
                                       </numberLiteral>
                                    </primaryExpression>
                                 </expression>)</typeConversion>
                           </expression>,<expression>
                              <primaryExpression>
                                 <identifier>value</identifier>
                              </primaryExpression>
                           </expression>)</tupleExpression>
                     </callArguments>
                  </emitEventStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>_approve</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>owner</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>spender</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>value</identifier>
               </parameter>)</parameterList>
            <visibleType>internal</visibleType>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>owner</identifier>
                                       </primaryExpression>
                                    </expression>
                                    <comparison>!=</comparison>
                                    <expression>
                                       <typeConversion>
                                          <typeName>
                                             <elementaryTypeName>address</elementaryTypeName>
                                          </typeName>(<expression>
                                             <primaryExpression>
                                                <numberLiteral>
                                                   <decimalNumber>0</decimalNumber>
                                                </numberLiteral>
                                             </primaryExpression>
                                          </expression>)</typeConversion>
                                    </expression>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <stringLiteral>ERC20: approve from the zero address</stringLiteral>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>spender</identifier>
                                       </primaryExpression>
                                    </expression>
                                    <comparison>!=</comparison>
                                    <expression>
                                       <typeConversion>
                                          <typeName>
                                             <elementaryTypeName>address</elementaryTypeName>
                                          </typeName>(<expression>
                                             <primaryExpression>
                                                <numberLiteral>
                                                   <decimalNumber>0</decimalNumber>
                                                </numberLiteral>
                                             </primaryExpression>
                                          </expression>)</typeConversion>
                                    </expression>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <stringLiteral>ERC20: approve to the zero address</stringLiteral>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <expression>
                              <expression>
                                 <primaryExpression>
                                    <identifier>_allowances</identifier>
                                 </primaryExpression>
                              </expression>[<expression>
                                 <primaryExpression>
                                    <identifier>owner</identifier>
                                 </primaryExpression>
                              </expression>]</expression>[<expression>
                              <primaryExpression>
                                 <identifier>spender</identifier>
                              </primaryExpression>
                           </expression>]</expression>=<expression>
                           <primaryExpression>
                              <identifier>value</identifier>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <emitEventStatement>emit<identifier>Approval</identifier>
                     <callArguments>
                        <tupleExpression>(<expression>
                              <primaryExpression>
                                 <identifier>owner</identifier>
                              </primaryExpression>
                           </expression>,<expression>
                              <primaryExpression>
                                 <identifier>spender</identifier>
                              </primaryExpression>
                           </expression>,<expression>
                              <primaryExpression>
                                 <identifier>value</identifier>
                              </primaryExpression>
                           </expression>)</tupleExpression>
                     </callArguments>
                  </emitEventStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>_burnFrom</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>account</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>amount</identifier>
               </parameter>)</parameterList>
            <visibleType>internal</visibleType>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>_burn</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <primaryExpression>
                                       <identifier>account</identifier>
                                    </primaryExpression>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <identifier>amount</identifier>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>_approve</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <primaryExpression>
                                       <identifier>account</identifier>
                                    </primaryExpression>
                                 </expression>,<expression>
                                    <environmentalVariable>msg.sender</environmentalVariable>
                                 </expression>,<expression>
                                    <expression>
                                       <expression>
                                          <expression>
                                             <primaryExpression>
                                                <identifier>_allowances</identifier>
                                             </primaryExpression>
                                          </expression>[<expression>
                                             <primaryExpression>
                                                <identifier>account</identifier>
                                             </primaryExpression>
                                          </expression>]</expression>[<expression>
                                          <environmentalVariable>msg.sender</environmentalVariable>
                                       </expression>]</expression>.<functionCall>
                                       <functionName>
                                          <identifier>sub</identifier>
                                       </functionName>
                                       <callArguments>
                                          <tupleExpression>(<expression>
                                                <primaryExpression>
                                                   <identifier>amount</identifier>
                                                </primaryExpression>
                                             </expression>)</tupleExpression>
                                       </callArguments>
                                    </functionCall>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>}</contractDefinition>
   <contractDefinition>contract<identifier>MultipleArbitrableTokenTransaction</identifier>is<inheritanceSpecifier>
         <userDefinedTypeName>
            <identifier>IArbitrable</identifier>
         </userDefinedTypeName>
      </inheritanceSpecifier>{<contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>uint8</elementaryTypeName>
            </typeName>
            <constantType>constant</constantType>
            <identifier>AMOUNT_OF_CHOICES</identifier>=<expression>
               <primaryExpression>
                  <numberLiteral>
                     <decimalNumber>2</decimalNumber>
                  </numberLiteral>
               </primaryExpression>
            </expression>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <enumDefinition>enum<identifier>Party</identifier>{<enumValue>
               <identifier>Sender</identifier>
            </enumValue>,<enumValue>
               <identifier>Receiver</identifier>
            </enumValue>}</enumDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <enumDefinition>enum<identifier>Status</identifier>{<enumValue>
               <identifier>NoDispute</identifier>
            </enumValue>,<enumValue>
               <identifier>WaitingSender</identifier>
            </enumValue>,<enumValue>
               <identifier>WaitingReceiver</identifier>
            </enumValue>,<enumValue>
               <identifier>DisputeCreated</identifier>
            </enumValue>,<enumValue>
               <identifier>Resolved</identifier>
            </enumValue>}</enumDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <enumDefinition>enum<identifier>RulingOptions</identifier>{<enumValue>
               <identifier>NoRuling</identifier>
            </enumValue>,<enumValue>
               <identifier>SenderWins</identifier>
            </enumValue>,<enumValue>
               <identifier>ReceiverWins</identifier>
            </enumValue>}</enumDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <structDefinition>struct<identifier>Transaction</identifier>{<variableDeclaration>
               <typeName>
                  <elementaryTypeName>address</elementaryTypeName>
               </typeName>
               <identifier>sender</identifier>
            </variableDeclaration>;<variableDeclaration>
               <typeName>
                  <elementaryTypeName>address</elementaryTypeName>
               </typeName>
               <identifier>receiver</identifier>
            </variableDeclaration>;<variableDeclaration>
               <typeName>
                  <elementaryTypeName>uint</elementaryTypeName>
               </typeName>
               <identifier>amount</identifier>
            </variableDeclaration>;<variableDeclaration>
               <typeName>
                  <userDefinedTypeName>
                     <identifier>ERC20</identifier>
                  </userDefinedTypeName>
               </typeName>
               <identifier>token</identifier>
            </variableDeclaration>;<variableDeclaration>
               <typeName>
                  <elementaryTypeName>uint</elementaryTypeName>
               </typeName>
               <identifier>timeoutPayment</identifier>
            </variableDeclaration>;<variableDeclaration>
               <typeName>
                  <elementaryTypeName>uint</elementaryTypeName>
               </typeName>
               <identifier>disputeId</identifier>
            </variableDeclaration>;<variableDeclaration>
               <typeName>
                  <elementaryTypeName>uint</elementaryTypeName>
               </typeName>
               <identifier>senderFee</identifier>
            </variableDeclaration>;<variableDeclaration>
               <typeName>
                  <elementaryTypeName>uint</elementaryTypeName>
               </typeName>
               <identifier>receiverFee</identifier>
            </variableDeclaration>;<variableDeclaration>
               <typeName>
                  <elementaryTypeName>uint</elementaryTypeName>
               </typeName>
               <identifier>lastInteraction</identifier>
            </variableDeclaration>;<variableDeclaration>
               <typeName>
                  <userDefinedTypeName>
                     <identifier>Status</identifier>
                  </userDefinedTypeName>
               </typeName>
               <identifier>status</identifier>
            </variableDeclaration>;}</structDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <typeName>
                  <userDefinedTypeName>
                     <identifier>Transaction</identifier>
                  </userDefinedTypeName>
               </typeName>[]</typeName>
            <visibleType>public</visibleType>
            <identifier>transactions</identifier>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <userDefinedTypeName>
                  <identifier>Arbitrator</identifier>
               </userDefinedTypeName>
            </typeName>
            <visibleType>public</visibleType>
            <identifier>arbitrator</identifier>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>bytes</elementaryTypeName>
            </typeName>
            <visibleType>public</visibleType>
            <identifier>arbitratorExtraData</identifier>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>uint</elementaryTypeName>
            </typeName>
            <visibleType>public</visibleType>
            <identifier>feeTimeout</identifier>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <mappingSt>mapping(<typeName>
                     <elementaryTypeName>uint</elementaryTypeName>
                  </typeName>=&gt;<typeName>
                     <elementaryTypeName>uint</elementaryTypeName>
                  </typeName>)</mappingSt>
            </typeName>
            <visibleType>public</visibleType>
            <identifier>disputeIDtoTransactionID</identifier>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <eventDefinition>event<identifier>Payment</identifier>
            <indexedParameterList>(<indexedParameter>
                  <typeName>
                     <elementaryTypeName>uint</elementaryTypeName>
                  </typeName>indexed<identifier>_transactionID</identifier>
               </indexedParameter>,<indexedParameter>
                  <typeName>
                     <elementaryTypeName>uint</elementaryTypeName>
                  </typeName>
                  <identifier>_amount</identifier>
               </indexedParameter>,<indexedParameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>_party</identifier>
               </indexedParameter>)</indexedParameterList>;</eventDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <eventDefinition>event<identifier>HasToPayFee</identifier>
            <indexedParameterList>(<indexedParameter>
                  <typeName>
                     <elementaryTypeName>uint</elementaryTypeName>
                  </typeName>indexed<identifier>_transactionID</identifier>
               </indexedParameter>,<indexedParameter>
                  <typeName>
                     <userDefinedTypeName>
                        <identifier>Party</identifier>
                     </userDefinedTypeName>
                  </typeName>
                  <identifier>_party</identifier>
               </indexedParameter>)</indexedParameterList>;</eventDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <eventDefinition>event<identifier>Ruling</identifier>
            <indexedParameterList>(<indexedParameter>
                  <typeName>
                     <userDefinedTypeName>
                        <identifier>Arbitrator</identifier>
                     </userDefinedTypeName>
                  </typeName>indexed<identifier>_arbitrator</identifier>
               </indexedParameter>,<indexedParameter>
                  <typeName>
                     <elementaryTypeName>uint</elementaryTypeName>
                  </typeName>indexed<identifier>_disputeID</identifier>
               </indexedParameter>,<indexedParameter>
                  <typeName>
                     <elementaryTypeName>uint</elementaryTypeName>
                  </typeName>
                  <identifier>_ruling</identifier>
               </indexedParameter>)</indexedParameterList>;</eventDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <eventDefinition>event<identifier>TransactionCreated</identifier>
            <indexedParameterList>(<indexedParameter>
                  <typeName>
                     <elementaryTypeName>uint</elementaryTypeName>
                  </typeName>
                  <identifier>_transactionID</identifier>
               </indexedParameter>,<indexedParameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>indexed<identifier>_sender</identifier>
               </indexedParameter>,<indexedParameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>indexed<identifier>_receiver</identifier>
               </indexedParameter>,<indexedParameter>
                  <typeName>
                     <userDefinedTypeName>
                        <identifier>ERC20</identifier>
                     </userDefinedTypeName>
                  </typeName>
                  <identifier>_token</identifier>
               </indexedParameter>,<indexedParameter>
                  <typeName>
                     <elementaryTypeName>uint</elementaryTypeName>
                  </typeName>
                  <identifier>_amount</identifier>
               </indexedParameter>)</indexedParameterList>;</eventDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>constructor<parameterList>(<parameter>
                  <typeName>
                     <userDefinedTypeName>
                        <identifier>Arbitrator</identifier>
                     </userDefinedTypeName>
                  </typeName>
                  <identifier>_arbitrator</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>bytes</elementaryTypeName>
                  </typeName>
                  <identifier>_arbitratorExtraData</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint</elementaryTypeName>
                  </typeName>
                  <identifier>_feeTimeout</identifier>
               </parameter>)</parameterList>
            <visibleType>public</visibleType>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>arbitrator</identifier>
                           </primaryExpression>
                        </expression>=<expression>
                           <primaryExpression>
                              <identifier>_arbitrator</identifier>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>arbitratorExtraData</identifier>
                           </primaryExpression>
                        </expression>=<expression>
                           <primaryExpression>
                              <identifier>_arbitratorExtraData</identifier>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>feeTimeout</identifier>
                           </primaryExpression>
                        </expression>=<expression>
                           <primaryExpression>
                              <identifier>_feeTimeout</identifier>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>createTransaction</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>uint</elementaryTypeName>
                  </typeName>
                  <identifier>_amount</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <userDefinedTypeName>
                        <identifier>ERC20</identifier>
                     </userDefinedTypeName>
                  </typeName>
                  <identifier>_token</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint</elementaryTypeName>
                  </typeName>
                  <identifier>_timeoutPayment</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>_receiver</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>string</elementaryTypeName>
                  </typeName>
                  <identifier>_metaEvidence</identifier>
               </parameter>)</parameterList>
            <visibleType>public</visibleType>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>uint</elementaryTypeName>
                     </typeName>
                     <identifier>transactionIndex</identifier>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>_token</identifier>
                                       </primaryExpression>
                                    </expression>.<functionCall>
                                       <functionName>
                                          <identifier>transferFrom</identifier>
                                       </functionName>
                                       <callArguments>
                                          <tupleExpression>(<expression>
                                                <environmentalVariable>msg.sender</environmentalVariable>
                                             </expression>,<expression>
                                                <typeConversion>
                                                   <typeName>
                                                      <elementaryTypeName>address</elementaryTypeName>
                                                   </typeName>(<expression>
                                                      <environmentalVariable>this</environmentalVariable>
                                                   </expression>)</typeConversion>
                                             </expression>,<expression>
                                                <primaryExpression>
                                                   <identifier>_amount</identifier>
                                                </primaryExpression>
                                             </expression>)</tupleExpression>
                                       </callArguments>
                                    </functionCall>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <stringLiteral>Sender does not have enough approved funds.</stringLiteral>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>transactions</identifier>
                           </primaryExpression>
                        </expression>.<functionCall>
                           <functionName>
                              <identifier>push</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <functionCall>
                                       <functionName>
                                          <identifier>Transaction</identifier>
                                       </functionName>
                                       <callArguments>(<nameValueList>{<identifier>sender</identifier>:<expression>
                                                <environmentalVariable>msg.sender</environmentalVariable>
                                             </expression>,<identifier>receiver</identifier>:<expression>
                                                <primaryExpression>
                                                   <identifier>_receiver</identifier>
                                                </primaryExpression>
                                             </expression>,<identifier>amount</identifier>:<expression>
                                                <primaryExpression>
                                                   <identifier>_amount</identifier>
                                                </primaryExpression>
                                             </expression>,<identifier>token</identifier>:<expression>
                                                <primaryExpression>
                                                   <identifier>_token</identifier>
                                                </primaryExpression>
                                             </expression>,<identifier>timeoutPayment</identifier>:<expression>
                                                <primaryExpression>
                                                   <identifier>_timeoutPayment</identifier>
                                                </primaryExpression>
                                             </expression>,<identifier>disputeId</identifier>:<expression>
                                                <primaryExpression>
                                                   <numberLiteral>
                                                      <decimalNumber>0</decimalNumber>
                                                   </numberLiteral>
                                                </primaryExpression>
                                             </expression>,<identifier>senderFee</identifier>:<expression>
                                                <primaryExpression>
                                                   <numberLiteral>
                                                      <decimalNumber>0</decimalNumber>
                                                   </numberLiteral>
                                                </primaryExpression>
                                             </expression>,<identifier>receiverFee</identifier>:<expression>
                                                <primaryExpression>
                                                   <numberLiteral>
                                                      <decimalNumber>0</decimalNumber>
                                                   </numberLiteral>
                                                </primaryExpression>
                                             </expression>,<identifier>lastInteraction</identifier>:<expression>
                                                <environmentalVariable>now</environmentalVariable>
                                             </expression>,<identifier>status</identifier>:<expression>
                                                <expression>
                                                   <primaryExpression>
                                                      <identifier>Status</identifier>
                                                   </primaryExpression>
                                                </expression>.<identifier>NoDispute</identifier>
                                             </expression>}</nameValueList>)</callArguments>
                                    </functionCall>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <emitEventStatement>emit<identifier>MetaEvidence</identifier>
                     <callArguments>
                        <tupleExpression>(<expression>
                              <expression>
                                 <expression>
                                    <primaryExpression>
                                       <identifier>transactions</identifier>
                                    </primaryExpression>
                                 </expression>.length</expression>
                              <plusminusOperator>
                                 <minusOperator>-</minusOperator>
                              </plusminusOperator>
                              <expression>
                                 <primaryExpression>
                                    <numberLiteral>
                                       <decimalNumber>1</decimalNumber>
                                    </numberLiteral>
                                 </primaryExpression>
                              </expression>
                           </expression>,<expression>
                              <primaryExpression>
                                 <identifier>_metaEvidence</identifier>
                              </primaryExpression>
                           </expression>)</tupleExpression>
                     </callArguments>
                  </emitEventStatement>;</statement>
               <statement>
                  <emitEventStatement>emit<identifier>TransactionCreated</identifier>
                     <callArguments>
                        <tupleExpression>(<expression>
                              <expression>
                                 <expression>
                                    <primaryExpression>
                                       <identifier>transactions</identifier>
                                    </primaryExpression>
                                 </expression>.length</expression>
                              <plusminusOperator>
                                 <minusOperator>-</minusOperator>
                              </plusminusOperator>
                              <expression>
                                 <primaryExpression>
                                    <numberLiteral>
                                       <decimalNumber>1</decimalNumber>
                                    </numberLiteral>
                                 </primaryExpression>
                              </expression>
                           </expression>,<expression>
                              <environmentalVariable>msg.sender</environmentalVariable>
                           </expression>,<expression>
                              <primaryExpression>
                                 <identifier>_receiver</identifier>
                              </primaryExpression>
                           </expression>,<expression>
                              <primaryExpression>
                                 <identifier>_token</identifier>
                              </primaryExpression>
                           </expression>,<expression>
                              <primaryExpression>
                                 <identifier>_amount</identifier>
                              </primaryExpression>
                           </expression>)</tupleExpression>
                     </callArguments>
                  </emitEventStatement>;</statement>
               <statement>
                  <returnStatement>return<expression>
                        <expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>transactions</identifier>
                              </primaryExpression>
                           </expression>.length</expression>
                        <plusminusOperator>
                           <minusOperator>-</minusOperator>
                        </plusminusOperator>
                        <expression>
                           <primaryExpression>
                              <numberLiteral>
                                 <decimalNumber>1</decimalNumber>
                              </numberLiteral>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </returnStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>pay</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>uint</elementaryTypeName>
                  </typeName>
                  <identifier>_transactionID</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint</elementaryTypeName>
                  </typeName>
                  <identifier>_amount</identifier>
               </parameter>)</parameterList>
            <visibleType>public</visibleType>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <variableDeclaration>
                              <typeName>
                                 <userDefinedTypeName>
                                    <identifier>Transaction</identifier>
                                 </userDefinedTypeName>
                              </typeName>
                              <storageLocation>storage</storageLocation>
                              <identifier>transaction</identifier>
                           </variableDeclaration>
                        </expression>=<expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>transactions</identifier>
                              </primaryExpression>
                           </expression>[<expression>
                              <primaryExpression>
                                 <identifier>_transactionID</identifier>
                              </primaryExpression>
                           </expression>]</expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>transaction</identifier>
                                          </primaryExpression>
                                       </expression>.<identifier>sender</identifier>
                                    </expression>
                                    <comparison>==</comparison>
                                    <expression>
                                       <environmentalVariable>msg.sender</environmentalVariable>
                                    </expression>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <stringLiteral>The caller must be the sender.</stringLiteral>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>transaction</identifier>
                                          </primaryExpression>
                                       </expression>.<identifier>status</identifier>
                                    </expression>
                                    <comparison>==</comparison>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>Status</identifier>
                                          </primaryExpression>
                                       </expression>.<identifier>NoDispute</identifier>
                                    </expression>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <stringLiteral>The transaction shouldn't be disputed.</stringLiteral>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>_amount</identifier>
                                       </primaryExpression>
                                    </expression>&lt;=<expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>transaction</identifier>
                                          </primaryExpression>
                                       </expression>.<identifier>amount</identifier>
                                    </expression>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <stringLiteral>The amount paid has to be less or equal than the transaction.</stringLiteral>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>transaction</identifier>
                              </primaryExpression>
                           </expression>.<identifier>amount</identifier>
                        </expression>
                        <lvalueOperator>
                           <minusLvalueOperator>-=</minusLvalueOperator>
                        </lvalueOperator>
                        <expression>
                           <primaryExpression>
                              <identifier>_amount</identifier>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>transaction</identifier>
                                          </primaryExpression>
                                       </expression>.<identifier>token</identifier>
                                    </expression>.<functionCall>
                                       <functionName>
                                          <identifier>transfer</identifier>
                                       </functionName>
                                       <callArguments>
                                          <tupleExpression>(<expression>
                                                <expression>
                                                   <primaryExpression>
                                                      <identifier>transaction</identifier>
                                                   </primaryExpression>
                                                </expression>.<identifier>receiver</identifier>
                                             </expression>,<expression>
                                                <primaryExpression>
                                                   <identifier>_amount</identifier>
                                                </primaryExpression>
                                             </expression>)</tupleExpression>
                                       </callArguments>
                                    </functionCall>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <stringLiteral>The `transfer` function must not fail.</stringLiteral>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <emitEventStatement>emit<identifier>Payment</identifier>
                     <callArguments>
                        <tupleExpression>(<expression>
                              <primaryExpression>
                                 <identifier>_transactionID</identifier>
                              </primaryExpression>
                           </expression>,<expression>
                              <primaryExpression>
                                 <identifier>_amount</identifier>
                              </primaryExpression>
                           </expression>,<expression>
                              <environmentalVariable>msg.sender</environmentalVariable>
                           </expression>)</tupleExpression>
                     </callArguments>
                  </emitEventStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>reimburse</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>uint</elementaryTypeName>
                  </typeName>
                  <identifier>_transactionID</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint</elementaryTypeName>
                  </typeName>
                  <identifier>_amountReimbursed</identifier>
               </parameter>)</parameterList>
            <visibleType>public</visibleType>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <variableDeclaration>
                              <typeName>
                                 <userDefinedTypeName>
                                    <identifier>Transaction</identifier>
                                 </userDefinedTypeName>
                              </typeName>
                              <storageLocation>storage</storageLocation>
                              <identifier>transaction</identifier>
                           </variableDeclaration>
                        </expression>=<expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>transactions</identifier>
                              </primaryExpression>
                           </expression>[<expression>
                              <primaryExpression>
                                 <identifier>_transactionID</identifier>
                              </primaryExpression>
                           </expression>]</expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>transaction</identifier>
                                          </primaryExpression>
                                       </expression>.<identifier>receiver</identifier>
                                    </expression>
                                    <comparison>==</comparison>
                                    <expression>
                                       <environmentalVariable>msg.sender</environmentalVariable>
                                    </expression>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <stringLiteral>The caller must be the receiver.</stringLiteral>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>transaction</identifier>
                                          </primaryExpression>
                                       </expression>.<identifier>status</identifier>
                                    </expression>
                                    <comparison>==</comparison>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>Status</identifier>
                                          </primaryExpression>
                                       </expression>.<identifier>NoDispute</identifier>
                                    </expression>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <stringLiteral>The transaction shouldn't be disputed.</stringLiteral>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>_amountReimbursed</identifier>
                                       </primaryExpression>
                                    </expression>&lt;=<expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>transaction</identifier>
                                          </primaryExpression>
                                       </expression>.<identifier>amount</identifier>
                                    </expression>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <stringLiteral>The amount reimbursed has to be less or equal than the transaction.</stringLiteral>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>transaction</identifier>
                              </primaryExpression>
                           </expression>.<identifier>amount</identifier>
                        </expression>
                        <lvalueOperator>
                           <minusLvalueOperator>-=</minusLvalueOperator>
                        </lvalueOperator>
                        <expression>
                           <primaryExpression>
                              <identifier>_amountReimbursed</identifier>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>transaction</identifier>
                                          </primaryExpression>
                                       </expression>.<identifier>token</identifier>
                                    </expression>.<functionCall>
                                       <functionName>
                                          <identifier>transfer</identifier>
                                       </functionName>
                                       <callArguments>
                                          <tupleExpression>(<expression>
                                                <expression>
                                                   <primaryExpression>
                                                      <identifier>transaction</identifier>
                                                   </primaryExpression>
                                                </expression>.<identifier>sender</identifier>
                                             </expression>,<expression>
                                                <primaryExpression>
                                                   <identifier>_amountReimbursed</identifier>
                                                </primaryExpression>
                                             </expression>)</tupleExpression>
                                       </callArguments>
                                    </functionCall>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <stringLiteral>The `transfer` function must not fail.</stringLiteral>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <emitEventStatement>emit<identifier>Payment</identifier>
                     <callArguments>
                        <tupleExpression>(<expression>
                              <primaryExpression>
                                 <identifier>_transactionID</identifier>
                              </primaryExpression>
                           </expression>,<expression>
                              <primaryExpression>
                                 <identifier>_amountReimbursed</identifier>
                              </primaryExpression>
                           </expression>,<expression>
                              <environmentalVariable>msg.sender</environmentalVariable>
                           </expression>)</tupleExpression>
                     </callArguments>
                  </emitEventStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>executeTransaction</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>uint</elementaryTypeName>
                  </typeName>
                  <identifier>_transactionID</identifier>
               </parameter>)</parameterList>
            <visibleType>public</visibleType>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <variableDeclaration>
                              <typeName>
                                 <userDefinedTypeName>
                                    <identifier>Transaction</identifier>
                                 </userDefinedTypeName>
                              </typeName>
                              <storageLocation>storage</storageLocation>
                              <identifier>transaction</identifier>
                           </variableDeclaration>
                        </expression>=<expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>transactions</identifier>
                              </primaryExpression>
                           </expression>[<expression>
                              <primaryExpression>
                                 <identifier>_transactionID</identifier>
                              </primaryExpression>
                           </expression>]</expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <expression>
                                          <environmentalVariable>now</environmentalVariable>
                                       </expression>
                                       <plusminusOperator>
                                          <minusOperator>-</minusOperator>
                                       </plusminusOperator>
                                       <expression>
                                          <expression>
                                             <primaryExpression>
                                                <identifier>transaction</identifier>
                                             </primaryExpression>
                                          </expression>.<identifier>lastInteraction</identifier>
                                       </expression>
                                    </expression>&gt;=<expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>transaction</identifier>
                                          </primaryExpression>
                                       </expression>.<identifier>timeoutPayment</identifier>
                                    </expression>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <stringLiteral>The timeout has not passed yet.</stringLiteral>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>transaction</identifier>
                                          </primaryExpression>
                                       </expression>.<identifier>status</identifier>
                                    </expression>
                                    <comparison>==</comparison>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>Status</identifier>
                                          </primaryExpression>
                                       </expression>.<identifier>NoDispute</identifier>
                                    </expression>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <stringLiteral>The transaction shouldn't be disputed.</stringLiteral>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <variableDeclaration>
                              <typeName>
                                 <elementaryTypeName>uint</elementaryTypeName>
                              </typeName>
                              <identifier>amount</identifier>
                           </variableDeclaration>
                        </expression>=<expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>transaction</identifier>
                              </primaryExpression>
                           </expression>.<identifier>amount</identifier>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>transaction</identifier>
                              </primaryExpression>
                           </expression>.<identifier>amount</identifier>
                        </expression>=<expression>
                           <primaryExpression>
                              <numberLiteral>
                                 <decimalNumber>0</decimalNumber>
                              </numberLiteral>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>transaction</identifier>
                              </primaryExpression>
                           </expression>.<identifier>status</identifier>
                        </expression>=<expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>Status</identifier>
                              </primaryExpression>
                           </expression>.<identifier>Resolved</identifier>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>transaction</identifier>
                                          </primaryExpression>
                                       </expression>.<identifier>token</identifier>
                                    </expression>.<functionCall>
                                       <functionName>
                                          <identifier>transfer</identifier>
                                       </functionName>
                                       <callArguments>
                                          <tupleExpression>(<expression>
                                                <expression>
                                                   <primaryExpression>
                                                      <identifier>transaction</identifier>
                                                   </primaryExpression>
                                                </expression>.<identifier>receiver</identifier>
                                             </expression>,<expression>
                                                <primaryExpression>
                                                   <identifier>amount</identifier>
                                                </primaryExpression>
                                             </expression>)</tupleExpression>
                                       </callArguments>
                                    </functionCall>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <stringLiteral>The `transfer` function must not fail.</stringLiteral>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>timeOutBySender</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>uint</elementaryTypeName>
                  </typeName>
                  <identifier>_transactionID</identifier>
               </parameter>)</parameterList>
            <visibleType>public</visibleType>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <variableDeclaration>
                              <typeName>
                                 <userDefinedTypeName>
                                    <identifier>Transaction</identifier>
                                 </userDefinedTypeName>
                              </typeName>
                              <storageLocation>storage</storageLocation>
                              <identifier>transaction</identifier>
                           </variableDeclaration>
                        </expression>=<expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>transactions</identifier>
                              </primaryExpression>
                           </expression>[<expression>
                              <primaryExpression>
                                 <identifier>_transactionID</identifier>
                              </primaryExpression>
                           </expression>]</expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>transaction</identifier>
                                          </primaryExpression>
                                       </expression>.<identifier>status</identifier>
                                    </expression>
                                    <comparison>==</comparison>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>Status</identifier>
                                          </primaryExpression>
                                       </expression>.<identifier>WaitingReceiver</identifier>
                                    </expression>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <stringLiteral>The transaction is not waiting on the receiver.</stringLiteral>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <expression>
                                          <environmentalVariable>now</environmentalVariable>
                                       </expression>
                                       <plusminusOperator>
                                          <minusOperator>-</minusOperator>
                                       </plusminusOperator>
                                       <expression>
                                          <expression>
                                             <primaryExpression>
                                                <identifier>transaction</identifier>
                                             </primaryExpression>
                                          </expression>.<identifier>lastInteraction</identifier>
                                       </expression>
                                    </expression>&gt;=<expression>
                                       <primaryExpression>
                                          <identifier>feeTimeout</identifier>
                                       </primaryExpression>
                                    </expression>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <stringLiteral>Timeout time has not passed yet.</stringLiteral>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <ifStatement>if(<condition>
                        <expression>
                           <expression>
                              <expression>
                                 <primaryExpression>
                                    <identifier>transaction</identifier>
                                 </primaryExpression>
                              </expression>.<identifier>receiverFee</identifier>
                           </expression>
                           <comparison>!=</comparison>
                           <expression>
                              <primaryExpression>
                                 <numberLiteral>
                                    <decimalNumber>0</decimalNumber>
                                 </numberLiteral>
                              </primaryExpression>
                           </expression>
                        </expression>
                     </condition>)<statement>
                        <block>{<statement>
                              <expressionStatement>
                                 <expression>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>transaction</identifier>
                                          </primaryExpression>
                                       </expression>.<identifier>receiver</identifier>
                                    </expression>.<functionCall>
                                       <functionName>
                                          <identifier>send</identifier>
                                       </functionName>
                                       <callArguments>
                                          <tupleExpression>(<expression>
                                                <expression>
                                                   <primaryExpression>
                                                      <identifier>transaction</identifier>
                                                   </primaryExpression>
                                                </expression>.<identifier>receiverFee</identifier>
                                             </expression>)</tupleExpression>
                                       </callArguments>
                                    </functionCall>
                                 </expression>
                              </expressionStatement>;</statement>
                           <statement>
                              <expressionStatement>
                                 <expression>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>transaction</identifier>
                                          </primaryExpression>
                                       </expression>.<identifier>receiverFee</identifier>
                                    </expression>=<expression>
                                       <primaryExpression>
                                          <numberLiteral>
                                             <decimalNumber>0</decimalNumber>
                                          </numberLiteral>
                                       </primaryExpression>
                                    </expression>
                                 </expression>
                              </expressionStatement>;</statement>}</block>
                     </statement>
                  </ifStatement>
               </statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>executeRuling</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <primaryExpression>
                                       <identifier>_transactionID</identifier>
                                    </primaryExpression>
                                 </expression>,<expression>
                                    <typeConversion>
                                       <typeName>
                                          <elementaryTypeName>uint</elementaryTypeName>
                                       </typeName>(<expression>
                                          <expression>
                                             <primaryExpression>
                                                <identifier>RulingOptions</identifier>
                                             </primaryExpression>
                                          </expression>.<identifier>SenderWins</identifier>
                                       </expression>)</typeConversion>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>timeOutByReceiver</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>uint</elementaryTypeName>
                  </typeName>
                  <identifier>_transactionID</identifier>
               </parameter>)</parameterList>
            <visibleType>public</visibleType>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <variableDeclaration>
                              <typeName>
                                 <userDefinedTypeName>
                                    <identifier>Transaction</identifier>
                                 </userDefinedTypeName>
                              </typeName>
                              <storageLocation>storage</storageLocation>
                              <identifier>transaction</identifier>
                           </variableDeclaration>
                        </expression>=<expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>transactions</identifier>
                              </primaryExpression>
                           </expression>[<expression>
                              <primaryExpression>
                                 <identifier>_transactionID</identifier>
                              </primaryExpression>
                           </expression>]</expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>transaction</identifier>
                                          </primaryExpression>
                                       </expression>.<identifier>status</identifier>
                                    </expression>
                                    <comparison>==</comparison>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>Status</identifier>
                                          </primaryExpression>
                                       </expression>.<identifier>WaitingSender</identifier>
                                    </expression>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <stringLiteral>The transaction is not waiting on the sender.</stringLiteral>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <expression>
                                          <environmentalVariable>now</environmentalVariable>
                                       </expression>
                                       <plusminusOperator>
                                          <minusOperator>-</minusOperator>
                                       </plusminusOperator>
                                       <expression>
                                          <expression>
                                             <primaryExpression>
                                                <identifier>transaction</identifier>
                                             </primaryExpression>
                                          </expression>.<identifier>lastInteraction</identifier>
                                       </expression>
                                    </expression>&gt;=<expression>
                                       <primaryExpression>
                                          <identifier>feeTimeout</identifier>
                                       </primaryExpression>
                                    </expression>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <stringLiteral>Timeout time has not passed yet.</stringLiteral>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <ifStatement>if(<condition>
                        <expression>
                           <expression>
                              <expression>
                                 <primaryExpression>
                                    <identifier>transaction</identifier>
                                 </primaryExpression>
                              </expression>.<identifier>senderFee</identifier>
                           </expression>
                           <comparison>!=</comparison>
                           <expression>
                              <primaryExpression>
                                 <numberLiteral>
                                    <decimalNumber>0</decimalNumber>
                                 </numberLiteral>
                              </primaryExpression>
                           </expression>
                        </expression>
                     </condition>)<statement>
                        <block>{<statement>
                              <expressionStatement>
                                 <expression>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>transaction</identifier>
                                          </primaryExpression>
                                       </expression>.<identifier>sender</identifier>
                                    </expression>.<functionCall>
                                       <functionName>
                                          <identifier>send</identifier>
                                       </functionName>
                                       <callArguments>
                                          <tupleExpression>(<expression>
                                                <expression>
                                                   <primaryExpression>
                                                      <identifier>transaction</identifier>
                                                   </primaryExpression>
                                                </expression>.<identifier>senderFee</identifier>
                                             </expression>)</tupleExpression>
                                       </callArguments>
                                    </functionCall>
                                 </expression>
                              </expressionStatement>;</statement>
                           <statement>
                              <expressionStatement>
                                 <expression>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>transaction</identifier>
                                          </primaryExpression>
                                       </expression>.<identifier>senderFee</identifier>
                                    </expression>=<expression>
                                       <primaryExpression>
                                          <numberLiteral>
                                             <decimalNumber>0</decimalNumber>
                                          </numberLiteral>
                                       </primaryExpression>
                                    </expression>
                                 </expression>
                              </expressionStatement>;</statement>}</block>
                     </statement>
                  </ifStatement>
               </statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>executeRuling</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <primaryExpression>
                                       <identifier>_transactionID</identifier>
                                    </primaryExpression>
                                 </expression>,<expression>
                                    <typeConversion>
                                       <typeName>
                                          <elementaryTypeName>uint</elementaryTypeName>
                                       </typeName>(<expression>
                                          <expression>
                                             <primaryExpression>
                                                <identifier>RulingOptions</identifier>
                                             </primaryExpression>
                                          </expression>.<identifier>ReceiverWins</identifier>
                                       </expression>)</typeConversion>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>payArbitrationFeeBySender</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>uint</elementaryTypeName>
                  </typeName>
                  <identifier>_transactionID</identifier>
               </parameter>)</parameterList>
            <visibleType>public</visibleType>
            <stateMutability>
               <payableType>payable</payableType>
            </stateMutability>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <variableDeclaration>
                              <typeName>
                                 <userDefinedTypeName>
                                    <identifier>Transaction</identifier>
                                 </userDefinedTypeName>
                              </typeName>
                              <storageLocation>storage</storageLocation>
                              <identifier>transaction</identifier>
                           </variableDeclaration>
                        </expression>=<expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>transactions</identifier>
                              </primaryExpression>
                           </expression>[<expression>
                              <primaryExpression>
                                 <identifier>_transactionID</identifier>
                              </primaryExpression>
                           </expression>]</expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <variableDeclaration>
                              <typeName>
                                 <elementaryTypeName>uint</elementaryTypeName>
                              </typeName>
                              <identifier>arbitrationCost</identifier>
                           </variableDeclaration>
                        </expression>=<expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>arbitrator</identifier>
                              </primaryExpression>
                           </expression>.<functionCall>
                              <functionName>
                                 <identifier>arbitrationCost</identifier>
                              </functionName>
                              <callArguments>
                                 <tupleExpression>(<expression>
                                       <primaryExpression>
                                          <identifier>arbitratorExtraData</identifier>
                                       </primaryExpression>
                                    </expression>)</tupleExpression>
                              </callArguments>
                           </functionCall>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>transaction</identifier>
                                          </primaryExpression>
                                       </expression>.<identifier>status</identifier>
                                    </expression>&lt;<expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>Status</identifier>
                                          </primaryExpression>
                                       </expression>.<identifier>DisputeCreated</identifier>
                                    </expression>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <stringLiteral>Dispute has already been created.</stringLiteral>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <environmentalVariable>msg.sender</environmentalVariable>
                                    </expression>
                                    <comparison>==</comparison>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>transaction</identifier>
                                          </primaryExpression>
                                       </expression>.<identifier>sender</identifier>
                                    </expression>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <stringLiteral>The caller must be the sender.</stringLiteral>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>transaction</identifier>
                              </primaryExpression>
                           </expression>.<identifier>senderFee</identifier>
                        </expression>
                        <lvalueOperator>
                           <plusLvalueOperator>+=</plusLvalueOperator>
                        </lvalueOperator>
                        <expression>
                           <environmentalVariable>msg.value</environmentalVariable>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>transaction</identifier>
                                          </primaryExpression>
                                       </expression>.<identifier>senderFee</identifier>
                                    </expression>&gt;=<expression>
                                       <primaryExpression>
                                          <identifier>arbitrationCost</identifier>
                                       </primaryExpression>
                                    </expression>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <stringLiteral>The sender fee must cover arbitration costs.</stringLiteral>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>transaction</identifier>
                              </primaryExpression>
                           </expression>.<identifier>lastInteraction</identifier>
                        </expression>=<expression>
                           <environmentalVariable>now</environmentalVariable>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <ifStatement>if(<condition>
                        <expression>
                           <expression>
                              <expression>
                                 <primaryExpression>
                                    <identifier>transaction</identifier>
                                 </primaryExpression>
                              </expression>.<identifier>receiverFee</identifier>
                           </expression>&lt;<expression>
                              <primaryExpression>
                                 <identifier>arbitrationCost</identifier>
                              </primaryExpression>
                           </expression>
                        </expression>
                     </condition>)<statement>
                        <block>{<statement>
                              <expressionStatement>
                                 <expression>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>transaction</identifier>
                                          </primaryExpression>
                                       </expression>.<identifier>status</identifier>
                                    </expression>=<expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>Status</identifier>
                                          </primaryExpression>
                                       </expression>.<identifier>WaitingReceiver</identifier>
                                    </expression>
                                 </expression>
                              </expressionStatement>;</statement>
                           <statement>
                              <emitEventStatement>emit<identifier>HasToPayFee</identifier>
                                 <callArguments>
                                    <tupleExpression>(<expression>
                                          <primaryExpression>
                                             <identifier>_transactionID</identifier>
                                          </primaryExpression>
                                       </expression>,<expression>
                                          <expression>
                                             <primaryExpression>
                                                <identifier>Party</identifier>
                                             </primaryExpression>
                                          </expression>.<identifier>Receiver</identifier>
                                       </expression>)</tupleExpression>
                                 </callArguments>
                              </emitEventStatement>;</statement>}</block>
                     </statement>else<statement>
                        <block>{<statement>
                              <expressionStatement>
                                 <expression>
                                    <functionCall>
                                       <functionName>
                                          <identifier>raiseDispute</identifier>
                                       </functionName>
                                       <callArguments>
                                          <tupleExpression>(<expression>
                                                <primaryExpression>
                                                   <identifier>_transactionID</identifier>
                                                </primaryExpression>
                                             </expression>,<expression>
                                                <primaryExpression>
                                                   <identifier>arbitrationCost</identifier>
                                                </primaryExpression>
                                             </expression>)</tupleExpression>
                                       </callArguments>
                                    </functionCall>
                                 </expression>
                              </expressionStatement>;</statement>}</block>
                     </statement>
                  </ifStatement>
               </statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>payArbitrationFeeByReceiver</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>uint</elementaryTypeName>
                  </typeName>
                  <identifier>_transactionID</identifier>
               </parameter>)</parameterList>
            <visibleType>public</visibleType>
            <stateMutability>
               <payableType>payable</payableType>
            </stateMutability>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <variableDeclaration>
                              <typeName>
                                 <userDefinedTypeName>
                                    <identifier>Transaction</identifier>
                                 </userDefinedTypeName>
                              </typeName>
                              <storageLocation>storage</storageLocation>
                              <identifier>transaction</identifier>
                           </variableDeclaration>
                        </expression>=<expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>transactions</identifier>
                              </primaryExpression>
                           </expression>[<expression>
                              <primaryExpression>
                                 <identifier>_transactionID</identifier>
                              </primaryExpression>
                           </expression>]</expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <variableDeclaration>
                              <typeName>
                                 <elementaryTypeName>uint</elementaryTypeName>
                              </typeName>
                              <identifier>arbitrationCost</identifier>
                           </variableDeclaration>
                        </expression>=<expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>arbitrator</identifier>
                              </primaryExpression>
                           </expression>.<functionCall>
                              <functionName>
                                 <identifier>arbitrationCost</identifier>
                              </functionName>
                              <callArguments>
                                 <tupleExpression>(<expression>
                                       <primaryExpression>
                                          <identifier>arbitratorExtraData</identifier>
                                       </primaryExpression>
                                    </expression>)</tupleExpression>
                              </callArguments>
                           </functionCall>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>transaction</identifier>
                                          </primaryExpression>
                                       </expression>.<identifier>status</identifier>
                                    </expression>&lt;<expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>Status</identifier>
                                          </primaryExpression>
                                       </expression>.<identifier>DisputeCreated</identifier>
                                    </expression>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <stringLiteral>Dispute has already been created.</stringLiteral>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <environmentalVariable>msg.sender</environmentalVariable>
                                    </expression>
                                    <comparison>==</comparison>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>transaction</identifier>
                                          </primaryExpression>
                                       </expression>.<identifier>receiver</identifier>
                                    </expression>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <stringLiteral>The caller must be the receiver.</stringLiteral>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>transaction</identifier>
                              </primaryExpression>
                           </expression>.<identifier>receiverFee</identifier>
                        </expression>
                        <lvalueOperator>
                           <plusLvalueOperator>+=</plusLvalueOperator>
                        </lvalueOperator>
                        <expression>
                           <environmentalVariable>msg.value</environmentalVariable>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>transaction</identifier>
                                          </primaryExpression>
                                       </expression>.<identifier>receiverFee</identifier>
                                    </expression>&gt;=<expression>
                                       <primaryExpression>
                                          <identifier>arbitrationCost</identifier>
                                       </primaryExpression>
                                    </expression>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <stringLiteral>The receiver fee must cover arbitration costs.</stringLiteral>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>transaction</identifier>
                              </primaryExpression>
                           </expression>.<identifier>lastInteraction</identifier>
                        </expression>=<expression>
                           <environmentalVariable>now</environmentalVariable>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <ifStatement>if(<condition>
                        <expression>
                           <expression>
                              <expression>
                                 <primaryExpression>
                                    <identifier>transaction</identifier>
                                 </primaryExpression>
                              </expression>.<identifier>senderFee</identifier>
                           </expression>&lt;<expression>
                              <primaryExpression>
                                 <identifier>arbitrationCost</identifier>
                              </primaryExpression>
                           </expression>
                        </expression>
                     </condition>)<statement>
                        <block>{<statement>
                              <expressionStatement>
                                 <expression>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>transaction</identifier>
                                          </primaryExpression>
                                       </expression>.<identifier>status</identifier>
                                    </expression>=<expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>Status</identifier>
                                          </primaryExpression>
                                       </expression>.<identifier>WaitingSender</identifier>
                                    </expression>
                                 </expression>
                              </expressionStatement>;</statement>
                           <statement>
                              <emitEventStatement>emit<identifier>HasToPayFee</identifier>
                                 <callArguments>
                                    <tupleExpression>(<expression>
                                          <primaryExpression>
                                             <identifier>_transactionID</identifier>
                                          </primaryExpression>
                                       </expression>,<expression>
                                          <expression>
                                             <primaryExpression>
                                                <identifier>Party</identifier>
                                             </primaryExpression>
                                          </expression>.<identifier>Sender</identifier>
                                       </expression>)</tupleExpression>
                                 </callArguments>
                              </emitEventStatement>;</statement>}</block>
                     </statement>else<statement>
                        <block>{<statement>
                              <expressionStatement>
                                 <expression>
                                    <functionCall>
                                       <functionName>
                                          <identifier>raiseDispute</identifier>
                                       </functionName>
                                       <callArguments>
                                          <tupleExpression>(<expression>
                                                <primaryExpression>
                                                   <identifier>_transactionID</identifier>
                                                </primaryExpression>
                                             </expression>,<expression>
                                                <primaryExpression>
                                                   <identifier>arbitrationCost</identifier>
                                                </primaryExpression>
                                             </expression>)</tupleExpression>
                                       </callArguments>
                                    </functionCall>
                                 </expression>
                              </expressionStatement>;</statement>}</block>
                     </statement>
                  </ifStatement>
               </statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>raiseDispute</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>uint</elementaryTypeName>
                  </typeName>
                  <identifier>_transactionID</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint</elementaryTypeName>
                  </typeName>
                  <identifier>_arbitrationCost</identifier>
               </parameter>)</parameterList>
            <visibleType>internal</visibleType>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <variableDeclaration>
                              <typeName>
                                 <userDefinedTypeName>
                                    <identifier>Transaction</identifier>
                                 </userDefinedTypeName>
                              </typeName>
                              <storageLocation>storage</storageLocation>
                              <identifier>transaction</identifier>
                           </variableDeclaration>
                        </expression>=<expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>transactions</identifier>
                              </primaryExpression>
                           </expression>[<expression>
                              <primaryExpression>
                                 <identifier>_transactionID</identifier>
                              </primaryExpression>
                           </expression>]</expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>transaction</identifier>
                              </primaryExpression>
                           </expression>.<identifier>status</identifier>
                        </expression>=<expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>Status</identifier>
                              </primaryExpression>
                           </expression>.<identifier>DisputeCreated</identifier>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>transaction</identifier>
                              </primaryExpression>
                           </expression>.<identifier>disputeId</identifier>
                        </expression>=<expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>arbitrator</identifier>
                              </primaryExpression>
                           </expression>.<functionCall>
                              <functionName>
                                 <identifier>createDispute</identifier>
                              </functionName>
                              <value>.value(<expression>
                                    <primaryExpression>
                                       <identifier>_arbitrationCost</identifier>
                                    </primaryExpression>
                                 </expression>)</value>
                              <callArguments>
                                 <tupleExpression>(<expression>
                                       <primaryExpression>
                                          <identifier>AMOUNT_OF_CHOICES</identifier>
                                       </primaryExpression>
                                    </expression>,<expression>
                                       <primaryExpression>
                                          <identifier>arbitratorExtraData</identifier>
                                       </primaryExpression>
                                    </expression>)</tupleExpression>
                              </callArguments>
                           </functionCall>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>disputeIDtoTransactionID</identifier>
                              </primaryExpression>
                           </expression>[<expression>
                              <expression>
                                 <primaryExpression>
                                    <identifier>transaction</identifier>
                                 </primaryExpression>
                              </expression>.<identifier>disputeId</identifier>
                           </expression>]</expression>=<expression>
                           <primaryExpression>
                              <identifier>_transactionID</identifier>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <emitEventStatement>emit<identifier>Dispute</identifier>
                     <callArguments>
                        <tupleExpression>(<expression>
                              <primaryExpression>
                                 <identifier>arbitrator</identifier>
                              </primaryExpression>
                           </expression>,<expression>
                              <expression>
                                 <primaryExpression>
                                    <identifier>transaction</identifier>
                                 </primaryExpression>
                              </expression>.<identifier>disputeId</identifier>
                           </expression>,<expression>
                              <primaryExpression>
                                 <identifier>_transactionID</identifier>
                              </primaryExpression>
                           </expression>,<expression>
                              <primaryExpression>
                                 <identifier>_transactionID</identifier>
                              </primaryExpression>
                           </expression>)</tupleExpression>
                     </callArguments>
                  </emitEventStatement>;</statement>
               <statement>
                  <ifStatement>if(<condition>
                        <expression>
                           <expression>
                              <expression>
                                 <primaryExpression>
                                    <identifier>transaction</identifier>
                                 </primaryExpression>
                              </expression>.<identifier>senderFee</identifier>
                           </expression>&gt;<expression>
                              <primaryExpression>
                                 <identifier>_arbitrationCost</identifier>
                              </primaryExpression>
                           </expression>
                        </expression>
                     </condition>)<statement>
                        <block>{<statement>
                              <expressionStatement>
                                 <expression>
                                    <expression>
                                       <variableDeclaration>
                                          <typeName>
                                             <elementaryTypeName>uint</elementaryTypeName>
                                          </typeName>
                                          <identifier>extraFeeSender</identifier>
                                       </variableDeclaration>
                                    </expression>=<expression>
                                       <expression>
                                          <expression>
                                             <primaryExpression>
                                                <identifier>transaction</identifier>
                                             </primaryExpression>
                                          </expression>.<identifier>senderFee</identifier>
                                       </expression>
                                       <plusminusOperator>
                                          <minusOperator>-</minusOperator>
                                       </plusminusOperator>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>_arbitrationCost</identifier>
                                          </primaryExpression>
                                       </expression>
                                    </expression>
                                 </expression>
                              </expressionStatement>;</statement>
                           <statement>
                              <expressionStatement>
                                 <expression>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>transaction</identifier>
                                          </primaryExpression>
                                       </expression>.<identifier>senderFee</identifier>
                                    </expression>=<expression>
                                       <primaryExpression>
                                          <identifier>_arbitrationCost</identifier>
                                       </primaryExpression>
                                    </expression>
                                 </expression>
                              </expressionStatement>;</statement>
                           <statement>
                              <expressionStatement>
                                 <expression>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>transaction</identifier>
                                          </primaryExpression>
                                       </expression>.<identifier>sender</identifier>
                                    </expression>.<functionCall>
                                       <functionName>
                                          <identifier>send</identifier>
                                       </functionName>
                                       <callArguments>
                                          <tupleExpression>(<expression>
                                                <primaryExpression>
                                                   <identifier>extraFeeSender</identifier>
                                                </primaryExpression>
                                             </expression>)</tupleExpression>
                                       </callArguments>
                                    </functionCall>
                                 </expression>
                              </expressionStatement>;</statement>}</block>
                     </statement>
                  </ifStatement>
               </statement>
               <statement>
                  <ifStatement>if(<condition>
                        <expression>
                           <expression>
                              <expression>
                                 <primaryExpression>
                                    <identifier>transaction</identifier>
                                 </primaryExpression>
                              </expression>.<identifier>receiverFee</identifier>
                           </expression>&gt;<expression>
                              <primaryExpression>
                                 <identifier>_arbitrationCost</identifier>
                              </primaryExpression>
                           </expression>
                        </expression>
                     </condition>)<statement>
                        <block>{<statement>
                              <expressionStatement>
                                 <expression>
                                    <expression>
                                       <variableDeclaration>
                                          <typeName>
                                             <elementaryTypeName>uint</elementaryTypeName>
                                          </typeName>
                                          <identifier>extraFeeReceiver</identifier>
                                       </variableDeclaration>
                                    </expression>=<expression>
                                       <expression>
                                          <expression>
                                             <primaryExpression>
                                                <identifier>transaction</identifier>
                                             </primaryExpression>
                                          </expression>.<identifier>receiverFee</identifier>
                                       </expression>
                                       <plusminusOperator>
                                          <minusOperator>-</minusOperator>
                                       </plusminusOperator>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>_arbitrationCost</identifier>
                                          </primaryExpression>
                                       </expression>
                                    </expression>
                                 </expression>
                              </expressionStatement>;</statement>
                           <statement>
                              <expressionStatement>
                                 <expression>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>transaction</identifier>
                                          </primaryExpression>
                                       </expression>.<identifier>receiverFee</identifier>
                                    </expression>=<expression>
                                       <primaryExpression>
                                          <identifier>_arbitrationCost</identifier>
                                       </primaryExpression>
                                    </expression>
                                 </expression>
                              </expressionStatement>;</statement>
                           <statement>
                              <expressionStatement>
                                 <expression>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>transaction</identifier>
                                          </primaryExpression>
                                       </expression>.<identifier>receiver</identifier>
                                    </expression>.<functionCall>
                                       <functionName>
                                          <identifier>send</identifier>
                                       </functionName>
                                       <callArguments>
                                          <tupleExpression>(<expression>
                                                <primaryExpression>
                                                   <identifier>extraFeeReceiver</identifier>
                                                </primaryExpression>
                                             </expression>)</tupleExpression>
                                       </callArguments>
                                    </functionCall>
                                 </expression>
                              </expressionStatement>;</statement>}</block>
                     </statement>
                  </ifStatement>
               </statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>submitEvidence</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>uint</elementaryTypeName>
                  </typeName>
                  <identifier>_transactionID</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>string</elementaryTypeName>
                  </typeName>
                  <identifier>_evidence</identifier>
               </parameter>)</parameterList>
            <visibleType>public</visibleType>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <variableDeclaration>
                              <typeName>
                                 <userDefinedTypeName>
                                    <identifier>Transaction</identifier>
                                 </userDefinedTypeName>
                              </typeName>
                              <storageLocation>storage</storageLocation>
                              <identifier>transaction</identifier>
                           </variableDeclaration>
                        </expression>=<expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>transactions</identifier>
                              </primaryExpression>
                           </expression>[<expression>
                              <primaryExpression>
                                 <identifier>_transactionID</identifier>
                              </primaryExpression>
                           </expression>]</expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <expression>
                                          <environmentalVariable>msg.sender</environmentalVariable>
                                       </expression>
                                       <comparison>==</comparison>
                                       <expression>
                                          <expression>
                                             <primaryExpression>
                                                <identifier>transaction</identifier>
                                             </primaryExpression>
                                          </expression>.<identifier>receiver</identifier>
                                       </expression>
                                    </expression>||<expression>
                                       <expression>
                                          <environmentalVariable>msg.sender</environmentalVariable>
                                       </expression>
                                       <comparison>==</comparison>
                                       <expression>
                                          <expression>
                                             <primaryExpression>
                                                <identifier>transaction</identifier>
                                             </primaryExpression>
                                          </expression>.<identifier>sender</identifier>
                                       </expression>
                                    </expression>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <stringLiteral>The caller must be the receiver or the sender.</stringLiteral>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>transaction</identifier>
                                          </primaryExpression>
                                       </expression>.<identifier>status</identifier>
                                    </expression>&lt;<expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>Status</identifier>
                                          </primaryExpression>
                                       </expression>.<identifier>Resolved</identifier>
                                    </expression>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <stringLiteral>Must not send evidence if the dispute is resolved.</stringLiteral>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <emitEventStatement>emit<identifier>Evidence</identifier>
                     <callArguments>
                        <tupleExpression>(<expression>
                              <primaryExpression>
                                 <identifier>arbitrator</identifier>
                              </primaryExpression>
                           </expression>,<expression>
                              <primaryExpression>
                                 <identifier>_transactionID</identifier>
                              </primaryExpression>
                           </expression>,<expression>
                              <environmentalVariable>msg.sender</environmentalVariable>
                           </expression>,<expression>
                              <primaryExpression>
                                 <identifier>_evidence</identifier>
                              </primaryExpression>
                           </expression>)</tupleExpression>
                     </callArguments>
                  </emitEventStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>appeal</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>uint</elementaryTypeName>
                  </typeName>
                  <identifier>_transactionID</identifier>
               </parameter>)</parameterList>
            <visibleType>public</visibleType>
            <stateMutability>
               <payableType>payable</payableType>
            </stateMutability>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <variableDeclaration>
                              <typeName>
                                 <userDefinedTypeName>
                                    <identifier>Transaction</identifier>
                                 </userDefinedTypeName>
                              </typeName>
                              <storageLocation>storage</storageLocation>
                              <identifier>transaction</identifier>
                           </variableDeclaration>
                        </expression>=<expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>transactions</identifier>
                              </primaryExpression>
                           </expression>[<expression>
                              <primaryExpression>
                                 <identifier>_transactionID</identifier>
                              </primaryExpression>
                           </expression>]</expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>arbitrator</identifier>
                           </primaryExpression>
                        </expression>.<functionCall>
                           <functionName>
                              <identifier>appeal</identifier>
                           </functionName>
                           <value>.value(<expression>
                                 <environmentalVariable>msg.value</environmentalVariable>
                              </expression>)</value>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>transaction</identifier>
                                       </primaryExpression>
                                    </expression>.<identifier>disputeId</identifier>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <identifier>arbitratorExtraData</identifier>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>rule</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>uint</elementaryTypeName>
                  </typeName>
                  <identifier>_disputeID</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint</elementaryTypeName>
                  </typeName>
                  <identifier>_ruling</identifier>
               </parameter>)</parameterList>
            <visibleType>public</visibleType>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <variableDeclaration>
                              <typeName>
                                 <elementaryTypeName>uint</elementaryTypeName>
                              </typeName>
                              <identifier>transactionID</identifier>
                           </variableDeclaration>
                        </expression>=<expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>disputeIDtoTransactionID</identifier>
                              </primaryExpression>
                           </expression>[<expression>
                              <primaryExpression>
                                 <identifier>_disputeID</identifier>
                              </primaryExpression>
                           </expression>]</expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <variableDeclaration>
                              <typeName>
                                 <userDefinedTypeName>
                                    <identifier>Transaction</identifier>
                                 </userDefinedTypeName>
                              </typeName>
                              <storageLocation>storage</storageLocation>
                              <identifier>transaction</identifier>
                           </variableDeclaration>
                        </expression>=<expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>transactions</identifier>
                              </primaryExpression>
                           </expression>[<expression>
                              <primaryExpression>
                                 <identifier>transactionID</identifier>
                              </primaryExpression>
                           </expression>]</expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <environmentalVariable>msg.sender</environmentalVariable>
                                    </expression>
                                    <comparison>==</comparison>
                                    <expression>
                                       <typeConversion>
                                          <typeName>
                                             <elementaryTypeName>address</elementaryTypeName>
                                          </typeName>(<expression>
                                             <primaryExpression>
                                                <identifier>arbitrator</identifier>
                                             </primaryExpression>
                                          </expression>)</typeConversion>
                                    </expression>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <stringLiteral>The caller must be the arbitrator.</stringLiteral>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>transaction</identifier>
                                          </primaryExpression>
                                       </expression>.<identifier>status</identifier>
                                    </expression>
                                    <comparison>==</comparison>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>Status</identifier>
                                          </primaryExpression>
                                       </expression>.<identifier>DisputeCreated</identifier>
                                    </expression>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <stringLiteral>The dispute has already been resolved.</stringLiteral>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <emitEventStatement>emit<identifier>Ruling</identifier>
                     <callArguments>
                        <tupleExpression>(<expression>
                              <functionCall>
                                 <functionName>
                                    <identifier>Arbitrator</identifier>
                                 </functionName>
                                 <callArguments>
                                    <tupleExpression>(<expression>
                                          <environmentalVariable>msg.sender</environmentalVariable>
                                       </expression>)</tupleExpression>
                                 </callArguments>
                              </functionCall>
                           </expression>,<expression>
                              <primaryExpression>
                                 <identifier>_disputeID</identifier>
                              </primaryExpression>
                           </expression>,<expression>
                              <primaryExpression>
                                 <identifier>_ruling</identifier>
                              </primaryExpression>
                           </expression>)</tupleExpression>
                     </callArguments>
                  </emitEventStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>executeRuling</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <primaryExpression>
                                       <identifier>transactionID</identifier>
                                    </primaryExpression>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <identifier>_ruling</identifier>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>executeRuling</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>uint</elementaryTypeName>
                  </typeName>
                  <identifier>_transactionID</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint</elementaryTypeName>
                  </typeName>
                  <identifier>_ruling</identifier>
               </parameter>)</parameterList>
            <visibleType>internal</visibleType>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <variableDeclaration>
                              <typeName>
                                 <userDefinedTypeName>
                                    <identifier>Transaction</identifier>
                                 </userDefinedTypeName>
                              </typeName>
                              <storageLocation>storage</storageLocation>
                              <identifier>transaction</identifier>
                           </variableDeclaration>
                        </expression>=<expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>transactions</identifier>
                              </primaryExpression>
                           </expression>[<expression>
                              <primaryExpression>
                                 <identifier>_transactionID</identifier>
                              </primaryExpression>
                           </expression>]</expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>_ruling</identifier>
                                       </primaryExpression>
                                    </expression>&lt;=<expression>
                                       <primaryExpression>
                                          <identifier>AMOUNT_OF_CHOICES</identifier>
                                       </primaryExpression>
                                    </expression>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <stringLiteral>Invalid ruling.</stringLiteral>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <variableDeclaration>
                              <typeName>
                                 <elementaryTypeName>uint</elementaryTypeName>
                              </typeName>
                              <identifier>amount</identifier>
                           </variableDeclaration>
                        </expression>=<expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>transaction</identifier>
                              </primaryExpression>
                           </expression>.<identifier>amount</identifier>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <variableDeclaration>
                              <typeName>
                                 <elementaryTypeName>uint</elementaryTypeName>
                              </typeName>
                              <identifier>senderFee</identifier>
                           </variableDeclaration>
                        </expression>=<expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>transaction</identifier>
                              </primaryExpression>
                           </expression>.<identifier>senderFee</identifier>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <variableDeclaration>
                              <typeName>
                                 <elementaryTypeName>uint</elementaryTypeName>
                              </typeName>
                              <identifier>receiverFee</identifier>
                           </variableDeclaration>
                        </expression>=<expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>transaction</identifier>
                              </primaryExpression>
                           </expression>.<identifier>receiverFee</identifier>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>transaction</identifier>
                              </primaryExpression>
                           </expression>.<identifier>amount</identifier>
                        </expression>=<expression>
                           <primaryExpression>
                              <numberLiteral>
                                 <decimalNumber>0</decimalNumber>
                              </numberLiteral>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>transaction</identifier>
                              </primaryExpression>
                           </expression>.<identifier>senderFee</identifier>
                        </expression>=<expression>
                           <primaryExpression>
                              <numberLiteral>
                                 <decimalNumber>0</decimalNumber>
                              </numberLiteral>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>transaction</identifier>
                              </primaryExpression>
                           </expression>.<identifier>receiverFee</identifier>
                        </expression>=<expression>
                           <primaryExpression>
                              <numberLiteral>
                                 <decimalNumber>0</decimalNumber>
                              </numberLiteral>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>transaction</identifier>
                              </primaryExpression>
                           </expression>.<identifier>status</identifier>
                        </expression>=<expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>Status</identifier>
                              </primaryExpression>
                           </expression>.<identifier>Resolved</identifier>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <ifStatement>if(<condition>
                        <expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>_ruling</identifier>
                              </primaryExpression>
                           </expression>
                           <comparison>==</comparison>
                           <expression>
                              <typeConversion>
                                 <typeName>
                                    <elementaryTypeName>uint</elementaryTypeName>
                                 </typeName>(<expression>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>RulingOptions</identifier>
                                       </primaryExpression>
                                    </expression>.<identifier>SenderWins</identifier>
                                 </expression>)</typeConversion>
                           </expression>
                        </expression>
                     </condition>)<statement>
                        <block>{<statement>
                              <expressionStatement>
                                 <expression>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>transaction</identifier>
                                          </primaryExpression>
                                       </expression>.<identifier>sender</identifier>
                                    </expression>.<functionCall>
                                       <functionName>
                                          <identifier>send</identifier>
                                       </functionName>
                                       <callArguments>
                                          <tupleExpression>(<expression>
                                                <primaryExpression>
                                                   <identifier>senderFee</identifier>
                                                </primaryExpression>
                                             </expression>)</tupleExpression>
                                       </callArguments>
                                    </functionCall>
                                 </expression>
                              </expressionStatement>;</statement>
                           <statement>
                              <expressionStatement>
                                 <expression>
                                    <functionCall>
                                       <functionName>
                                          <identifier>require</identifier>
                                       </functionName>
                                       <callArguments>
                                          <tupleExpression>(<expression>
                                                <expression>
                                                   <expression>
                                                      <primaryExpression>
                                                         <identifier>transaction</identifier>
                                                      </primaryExpression>
                                                   </expression>.<identifier>token</identifier>
                                                </expression>.<functionCall>
                                                   <functionName>
                                                      <identifier>transfer</identifier>
                                                   </functionName>
                                                   <callArguments>
                                                      <tupleExpression>(<expression>
                                                            <expression>
                                                               <primaryExpression>
                                                                  <identifier>transaction</identifier>
                                                               </primaryExpression>
                                                            </expression>.<identifier>sender</identifier>
                                                         </expression>,<expression>
                                                            <primaryExpression>
                                                               <identifier>amount</identifier>
                                                            </primaryExpression>
                                                         </expression>)</tupleExpression>
                                                   </callArguments>
                                                </functionCall>
                                             </expression>,<expression>
                                                <primaryExpression>
                                                   <stringLiteral>The `transfer` function must not fail.</stringLiteral>
                                                </primaryExpression>
                                             </expression>)</tupleExpression>
                                       </callArguments>
                                    </functionCall>
                                 </expression>
                              </expressionStatement>;</statement>}</block>
                     </statement>else<statement>
                        <ifStatement>if(<condition>
                              <expression>
                                 <expression>
                                    <primaryExpression>
                                       <identifier>_ruling</identifier>
                                    </primaryExpression>
                                 </expression>
                                 <comparison>==</comparison>
                                 <expression>
                                    <typeConversion>
                                       <typeName>
                                          <elementaryTypeName>uint</elementaryTypeName>
                                       </typeName>(<expression>
                                          <expression>
                                             <primaryExpression>
                                                <identifier>RulingOptions</identifier>
                                             </primaryExpression>
                                          </expression>.<identifier>ReceiverWins</identifier>
                                       </expression>)</typeConversion>
                                 </expression>
                              </expression>
                           </condition>)<statement>
                              <block>{<statement>
                                    <expressionStatement>
                                       <expression>
                                          <expression>
                                             <expression>
                                                <primaryExpression>
                                                   <identifier>transaction</identifier>
                                                </primaryExpression>
                                             </expression>.<identifier>receiver</identifier>
                                          </expression>.<functionCall>
                                             <functionName>
                                                <identifier>send</identifier>
                                             </functionName>
                                             <callArguments>
                                                <tupleExpression>(<expression>
                                                      <primaryExpression>
                                                         <identifier>receiverFee</identifier>
                                                      </primaryExpression>
                                                   </expression>)</tupleExpression>
                                             </callArguments>
                                          </functionCall>
                                       </expression>
                                    </expressionStatement>;</statement>
                                 <statement>
                                    <expressionStatement>
                                       <expression>
                                          <functionCall>
                                             <functionName>
                                                <identifier>require</identifier>
                                             </functionName>
                                             <callArguments>
                                                <tupleExpression>(<expression>
                                                      <expression>
                                                         <expression>
                                                            <primaryExpression>
                                                               <identifier>transaction</identifier>
                                                            </primaryExpression>
                                                         </expression>.<identifier>token</identifier>
                                                      </expression>.<functionCall>
                                                         <functionName>
                                                            <identifier>transfer</identifier>
                                                         </functionName>
                                                         <callArguments>
                                                            <tupleExpression>(<expression>
                                                                  <expression>
                                                                     <primaryExpression>
                                                                        <identifier>transaction</identifier>
                                                                     </primaryExpression>
                                                                  </expression>.<identifier>receiver</identifier>
                                                               </expression>,<expression>
                                                                  <primaryExpression>
                                                                     <identifier>amount</identifier>
                                                                  </primaryExpression>
                                                               </expression>)</tupleExpression>
                                                         </callArguments>
                                                      </functionCall>
                                                   </expression>,<expression>
                                                      <primaryExpression>
                                                         <stringLiteral>The `transfer` function must not fail.</stringLiteral>
                                                      </primaryExpression>
                                                   </expression>)</tupleExpression>
                                             </callArguments>
                                          </functionCall>
                                       </expression>
                                    </expressionStatement>;</statement>}</block>
                           </statement>else<statement>
                              <block>{<statement>
                                    <expressionStatement>
                                       <expression>
                                          <expression>
                                             <variableDeclaration>
                                                <typeName>
                                                   <elementaryTypeName>uint</elementaryTypeName>
                                                </typeName>
                                                <identifier>splitArbitrationFee</identifier>
                                             </variableDeclaration>
                                          </expression>=<expression>
                                             <expression>
                                                <primaryExpression>
                                                   <identifier>senderFee</identifier>
                                                </primaryExpression>
                                             </expression>
                                             <muldivOperator>
                                                <divOperator>/</divOperator>
                                             </muldivOperator>
                                             <expression>
                                                <primaryExpression>
                                                   <numberLiteral>
                                                      <decimalNumber>2</decimalNumber>
                                                   </numberLiteral>
                                                </primaryExpression>
                                             </expression>
                                          </expression>
                                       </expression>
                                    </expressionStatement>;</statement>
                                 <statement>
                                    <expressionStatement>
                                       <expression>
                                          <expression>
                                             <expression>
                                                <primaryExpression>
                                                   <identifier>transaction</identifier>
                                                </primaryExpression>
                                             </expression>.<identifier>receiver</identifier>
                                          </expression>.<functionCall>
                                             <functionName>
                                                <identifier>send</identifier>
                                             </functionName>
                                             <callArguments>
                                                <tupleExpression>(<expression>
                                                      <primaryExpression>
                                                         <identifier>splitArbitrationFee</identifier>
                                                      </primaryExpression>
                                                   </expression>)</tupleExpression>
                                             </callArguments>
                                          </functionCall>
                                       </expression>
                                    </expressionStatement>;</statement>
                                 <statement>
                                    <expressionStatement>
                                       <expression>
                                          <expression>
                                             <expression>
                                                <primaryExpression>
                                                   <identifier>transaction</identifier>
                                                </primaryExpression>
                                             </expression>.<identifier>sender</identifier>
                                          </expression>.<functionCall>
                                             <functionName>
                                                <identifier>send</identifier>
                                             </functionName>
                                             <callArguments>
                                                <tupleExpression>(<expression>
                                                      <primaryExpression>
                                                         <identifier>splitArbitrationFee</identifier>
                                                      </primaryExpression>
                                                   </expression>)</tupleExpression>
                                             </callArguments>
                                          </functionCall>
                                       </expression>
                                    </expressionStatement>;</statement>
                                 <statement>
                                    <expressionStatement>
                                       <expression>
                                          <functionCall>
                                             <functionName>
                                                <identifier>require</identifier>
                                             </functionName>
                                             <callArguments>
                                                <tupleExpression>(<expression>
                                                      <expression>
                                                         <expression>
                                                            <primaryExpression>
                                                               <identifier>transaction</identifier>
                                                            </primaryExpression>
                                                         </expression>.<identifier>token</identifier>
                                                      </expression>.<functionCall>
                                                         <functionName>
                                                            <identifier>transfer</identifier>
                                                         </functionName>
                                                         <callArguments>
                                                            <tupleExpression>(<expression>
                                                                  <expression>
                                                                     <primaryExpression>
                                                                        <identifier>transaction</identifier>
                                                                     </primaryExpression>
                                                                  </expression>.<identifier>receiver</identifier>
                                                               </expression>,<expression>
                                                                  <expression>
                                                                     <primaryExpression>
                                                                        <identifier>amount</identifier>
                                                                     </primaryExpression>
                                                                  </expression>
                                                                  <muldivOperator>
                                                                     <divOperator>/</divOperator>
                                                                  </muldivOperator>
                                                                  <expression>
                                                                     <primaryExpression>
                                                                        <numberLiteral>
                                                                           <decimalNumber>2</decimalNumber>
                                                                        </numberLiteral>
                                                                     </primaryExpression>
                                                                  </expression>
                                                               </expression>)</tupleExpression>
                                                         </callArguments>
                                                      </functionCall>
                                                   </expression>,<expression>
                                                      <primaryExpression>
                                                         <stringLiteral>The `transfer` function must not fail.</stringLiteral>
                                                      </primaryExpression>
                                                   </expression>)</tupleExpression>
                                             </callArguments>
                                          </functionCall>
                                       </expression>
                                    </expressionStatement>;</statement>
                                 <statement>
                                    <expressionStatement>
                                       <expression>
                                          <functionCall>
                                             <functionName>
                                                <identifier>require</identifier>
                                             </functionName>
                                             <callArguments>
                                                <tupleExpression>(<expression>
                                                      <expression>
                                                         <expression>
                                                            <primaryExpression>
                                                               <identifier>transaction</identifier>
                                                            </primaryExpression>
                                                         </expression>.<identifier>token</identifier>
                                                      </expression>.<functionCall>
                                                         <functionName>
                                                            <identifier>transfer</identifier>
                                                         </functionName>
                                                         <callArguments>
                                                            <tupleExpression>(<expression>
                                                                  <expression>
                                                                     <primaryExpression>
                                                                        <identifier>transaction</identifier>
                                                                     </primaryExpression>
                                                                  </expression>.<identifier>sender</identifier>
                                                               </expression>,<expression>
                                                                  <expression>
                                                                     <primaryExpression>
                                                                        <identifier>amount</identifier>
                                                                     </primaryExpression>
                                                                  </expression>
                                                                  <muldivOperator>
                                                                     <divOperator>/</divOperator>
                                                                  </muldivOperator>
                                                                  <expression>
                                                                     <primaryExpression>
                                                                        <numberLiteral>
                                                                           <decimalNumber>2</decimalNumber>
                                                                        </numberLiteral>
                                                                     </primaryExpression>
                                                                  </expression>
                                                               </expression>)</tupleExpression>
                                                         </callArguments>
                                                      </functionCall>
                                                   </expression>,<expression>
                                                      <primaryExpression>
                                                         <stringLiteral>The `transfer` function must not fail.</stringLiteral>
                                                      </primaryExpression>
                                                   </expression>)</tupleExpression>
                                             </callArguments>
                                          </functionCall>
                                       </expression>
                                    </expressionStatement>;</statement>}</block>
                           </statement>
                        </ifStatement>
                     </statement>
                  </ifStatement>
               </statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>getCountTransactions</identifier>
            <parameterList>()</parameterList>
            <visibleType>public</visibleType>
            <stateMutability>
               <viewType>view</viewType>
            </stateMutability>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>uint</elementaryTypeName>
                     </typeName>
                     <identifier>countTransactions</identifier>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{<statement>
                  <returnStatement>return<expression>
                        <expression>
                           <primaryExpression>
                              <identifier>transactions</identifier>
                           </primaryExpression>
                        </expression>.length</expression>
                  </returnStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>getTransactionIDsByAddress</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>_address</identifier>
               </parameter>)</parameterList>
            <visibleType>public</visibleType>
            <stateMutability>
               <viewType>view</viewType>
            </stateMutability>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <typeName>
                           <elementaryTypeName>uint</elementaryTypeName>
                        </typeName>[]</typeName>
                     <identifier>transactionIDs</identifier>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <variableDeclaration>
                              <typeName>
                                 <elementaryTypeName>uint</elementaryTypeName>
                              </typeName>
                              <identifier>count</identifier>
                           </variableDeclaration>
                        </expression>=<expression>
                           <primaryExpression>
                              <numberLiteral>
                                 <decimalNumber>0</decimalNumber>
                              </numberLiteral>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <forStatement>for(<expression>
                        <expression>
                           <variableDeclaration>
                              <typeName>
                                 <elementaryTypeName>uint</elementaryTypeName>
                              </typeName>
                              <identifier>i</identifier>
                           </variableDeclaration>
                        </expression>=<expression>
                           <primaryExpression>
                              <numberLiteral>
                                 <decimalNumber>0</decimalNumber>
                              </numberLiteral>
                           </primaryExpression>
                        </expression>
                     </expression>;<condition>
                        <expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>i</identifier>
                              </primaryExpression>
                           </expression>&lt;<expression>
                              <expression>
                                 <primaryExpression>
                                    <identifier>transactions</identifier>
                                 </primaryExpression>
                              </expression>.length</expression>
                        </expression>
                     </condition>;<expression>
                        <expression>
                           <primaryExpression>
                              <identifier>i</identifier>
                           </primaryExpression>
                        </expression>
                        <twoPlusMinusOperator>
                           <incrementOperator>++</incrementOperator>
                        </twoPlusMinusOperator>
                     </expression>)<statement>
                        <block>{<statement>
                              <ifStatement>if(<condition>
                                    <expression>
                                       <expression>
                                          <expression>
                                             <expression>
                                                <expression>
                                                   <primaryExpression>
                                                      <identifier>transactions</identifier>
                                                   </primaryExpression>
                                                </expression>[<expression>
                                                   <primaryExpression>
                                                      <identifier>i</identifier>
                                                   </primaryExpression>
                                                </expression>]</expression>.<identifier>sender</identifier>
                                          </expression>
                                          <comparison>==</comparison>
                                          <expression>
                                             <primaryExpression>
                                                <identifier>_address</identifier>
                                             </primaryExpression>
                                          </expression>
                                       </expression>||<expression>
                                          <expression>
                                             <expression>
                                                <expression>
                                                   <primaryExpression>
                                                      <identifier>transactions</identifier>
                                                   </primaryExpression>
                                                </expression>[<expression>
                                                   <primaryExpression>
                                                      <identifier>i</identifier>
                                                   </primaryExpression>
                                                </expression>]</expression>.<identifier>receiver</identifier>
                                          </expression>
                                          <comparison>==</comparison>
                                          <expression>
                                             <primaryExpression>
                                                <identifier>_address</identifier>
                                             </primaryExpression>
                                          </expression>
                                       </expression>
                                    </expression>
                                 </condition>)<statement>
                                    <expressionStatement>
                                       <expression>
                                          <expression>
                                             <primaryExpression>
                                                <identifier>count</identifier>
                                             </primaryExpression>
                                          </expression>
                                          <twoPlusMinusOperator>
                                             <incrementOperator>++</incrementOperator>
                                          </twoPlusMinusOperator>
                                       </expression>
                                    </expressionStatement>;</statement>
                              </ifStatement>
                           </statement>}</block>
                     </statement>
                  </forStatement>
               </statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>transactionIDs</identifier>
                           </primaryExpression>
                        </expression>=<expression>
                           <newDynamicArray>new<typeName>
                                 <elementaryTypeName>uint</elementaryTypeName>
                              </typeName>[](<expression>
                                 <primaryExpression>
                                    <identifier>count</identifier>
                                 </primaryExpression>
                              </expression>)</newDynamicArray>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>count</identifier>
                           </primaryExpression>
                        </expression>=<expression>
                           <primaryExpression>
                              <numberLiteral>
                                 <decimalNumber>0</decimalNumber>
                              </numberLiteral>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <forStatement>for(<expression>
                        <expression>
                           <variableDeclaration>
                              <typeName>
                                 <elementaryTypeName>uint</elementaryTypeName>
                              </typeName>
                              <identifier>j</identifier>
                           </variableDeclaration>
                        </expression>=<expression>
                           <primaryExpression>
                              <numberLiteral>
                                 <decimalNumber>0</decimalNumber>
                              </numberLiteral>
                           </primaryExpression>
                        </expression>
                     </expression>;<condition>
                        <expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>j</identifier>
                              </primaryExpression>
                           </expression>&lt;<expression>
                              <expression>
                                 <primaryExpression>
                                    <identifier>transactions</identifier>
                                 </primaryExpression>
                              </expression>.length</expression>
                        </expression>
                     </condition>;<expression>
                        <expression>
                           <primaryExpression>
                              <identifier>j</identifier>
                           </primaryExpression>
                        </expression>
                        <twoPlusMinusOperator>
                           <incrementOperator>++</incrementOperator>
                        </twoPlusMinusOperator>
                     </expression>)<statement>
                        <block>{<statement>
                              <ifStatement>if(<condition>
                                    <expression>
                                       <expression>
                                          <expression>
                                             <expression>
                                                <expression>
                                                   <primaryExpression>
                                                      <identifier>transactions</identifier>
                                                   </primaryExpression>
                                                </expression>[<expression>
                                                   <primaryExpression>
                                                      <identifier>j</identifier>
                                                   </primaryExpression>
                                                </expression>]</expression>.<identifier>sender</identifier>
                                          </expression>
                                          <comparison>==</comparison>
                                          <expression>
                                             <primaryExpression>
                                                <identifier>_address</identifier>
                                             </primaryExpression>
                                          </expression>
                                       </expression>||<expression>
                                          <expression>
                                             <expression>
                                                <expression>
                                                   <primaryExpression>
                                                      <identifier>transactions</identifier>
                                                   </primaryExpression>
                                                </expression>[<expression>
                                                   <primaryExpression>
                                                      <identifier>j</identifier>
                                                   </primaryExpression>
                                                </expression>]</expression>.<identifier>receiver</identifier>
                                          </expression>
                                          <comparison>==</comparison>
                                          <expression>
                                             <primaryExpression>
                                                <identifier>_address</identifier>
                                             </primaryExpression>
                                          </expression>
                                       </expression>
                                    </expression>
                                 </condition>)<statement>
                                    <expressionStatement>
                                       <expression>
                                          <expression>
                                             <expression>
                                                <primaryExpression>
                                                   <identifier>transactionIDs</identifier>
                                                </primaryExpression>
                                             </expression>[<expression>
                                                <expression>
                                                   <primaryExpression>
                                                      <identifier>count</identifier>
                                                   </primaryExpression>
                                                </expression>
                                                <twoPlusMinusOperator>
                                                   <incrementOperator>++</incrementOperator>
                                                </twoPlusMinusOperator>
                                             </expression>]</expression>=<expression>
                                             <primaryExpression>
                                                <identifier>j</identifier>
                                             </primaryExpression>
                                          </expression>
                                       </expression>
                                    </expressionStatement>;</statement>
                              </ifStatement>
                           </statement>}</block>
                     </statement>
                  </forStatement>
               </statement>}</block>
         </functionDefinition>
      </contractPartDefinition>}</contractDefinition>&lt;EOF&gt;</sourceUnit>