<?xml version="1.0" encoding="UTF-8"?>
<sourceUnit>
   <pragmaDirective>pragma<pragmaSolidity>solidity<version>
            <versionOperator>^</versionOperator>
            <versionLiteral>0.4.13</versionLiteral>
         </version>
      </pragmaSolidity>;</pragmaDirective>
   <contractDefinition>contract<identifier>EIP20Interface</identifier>{<contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>uint256</elementaryTypeName>
            </typeName>
            <visibleType>public</visibleType>
            <identifier>totalSupply</identifier>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>balanceOf</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>_owner</identifier>
               </parameter>)</parameterList>
            <visibleType>public</visibleType>
            <stateMutability>
               <viewType>view</viewType>
            </stateMutability>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>uint256</elementaryTypeName>
                     </typeName>
                     <identifier>balance</identifier>
                  </parameter>)</parameterList>
            </returnsParameters>;</functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>transfer</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>_to</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>_value</identifier>
               </parameter>)</parameterList>
            <visibleType>public</visibleType>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>bool</elementaryTypeName>
                     </typeName>
                     <identifier>success</identifier>
                  </parameter>)</parameterList>
            </returnsParameters>;</functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>transferFrom</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>_from</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>_to</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>_value</identifier>
               </parameter>)</parameterList>
            <visibleType>public</visibleType>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>bool</elementaryTypeName>
                     </typeName>
                     <identifier>success</identifier>
                  </parameter>)</parameterList>
            </returnsParameters>;</functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>approve</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>_spender</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>_value</identifier>
               </parameter>)</parameterList>
            <visibleType>public</visibleType>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>bool</elementaryTypeName>
                     </typeName>
                     <identifier>success</identifier>
                  </parameter>)</parameterList>
            </returnsParameters>;</functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>allowance</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>_owner</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>_spender</identifier>
               </parameter>)</parameterList>
            <visibleType>public</visibleType>
            <stateMutability>
               <viewType>view</viewType>
            </stateMutability>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>uint256</elementaryTypeName>
                     </typeName>
                     <identifier>remaining</identifier>
                  </parameter>)</parameterList>
            </returnsParameters>;</functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <eventDefinition>event<identifier>Transfer</identifier>
            <indexedParameterList>(<indexedParameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>indexed<identifier>_from</identifier>
               </indexedParameter>,<indexedParameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>indexed<identifier>_to</identifier>
               </indexedParameter>,<indexedParameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>_value</identifier>
               </indexedParameter>)</indexedParameterList>;</eventDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <eventDefinition>event<identifier>Approval</identifier>
            <indexedParameterList>(<indexedParameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>indexed<identifier>_owner</identifier>
               </indexedParameter>,<indexedParameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>indexed<identifier>_spender</identifier>
               </indexedParameter>,<indexedParameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>_value</identifier>
               </indexedParameter>)</indexedParameterList>;</eventDefinition>
      </contractPartDefinition>}</contractDefinition>
   <contractDefinition>contract<identifier>Ownable</identifier>{<contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>address</elementaryTypeName>
            </typeName>
            <visibleType>public</visibleType>
            <identifier>owner</identifier>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>address</elementaryTypeName>
            </typeName>
            <visibleType>public</visibleType>
            <identifier>newOwner</identifier>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <eventDefinition>event<identifier>OwnershipTransferred</identifier>
            <indexedParameterList>(<indexedParameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>indexed<identifier>_from</identifier>
               </indexedParameter>,<indexedParameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>indexed<identifier>_to</identifier>
               </indexedParameter>)</indexedParameterList>;</eventDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <modifierDefinition>modifier<identifier>onlyOwner</identifier>
            <parameterList>()</parameterList>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <environmentalVariable>msg.sender</environmentalVariable>
                                    </expression>
                                    <comparison>==</comparison>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>owner</identifier>
                                       </primaryExpression>
                                    </expression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <placeholderStatement>_</placeholderStatement>;</statement>}</block>
         </modifierDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>Ownable</identifier>
            <parameterList>()</parameterList>
            <visibleType>public</visibleType>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>owner</identifier>
                           </primaryExpression>
                        </expression>=<expression>
                           <environmentalVariable>msg.sender</environmentalVariable>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>transferOwnership</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>_newOwner</identifier>
               </parameter>)</parameterList>
            <visibleType>public</visibleType>
            <identifier>onlyOwner</identifier>
            <block>{<statement>
                  <ifStatement>if(<condition>
                        <expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>_newOwner</identifier>
                              </primaryExpression>
                           </expression>
                           <comparison>!=</comparison>
                           <expression>
                              <typeConversion>
                                 <typeName>
                                    <elementaryTypeName>address</elementaryTypeName>
                                 </typeName>(<expression>
                                    <primaryExpression>
                                       <numberLiteral>
                                          <decimalNumber>0</decimalNumber>
                                       </numberLiteral>
                                    </primaryExpression>
                                 </expression>)</typeConversion>
                           </expression>
                        </expression>
                     </condition>)<statement>
                        <block>{<statement>
                              <expressionStatement>
                                 <expression>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>newOwner</identifier>
                                       </primaryExpression>
                                    </expression>=<expression>
                                       <primaryExpression>
                                          <identifier>_newOwner</identifier>
                                       </primaryExpression>
                                    </expression>
                                 </expression>
                              </expressionStatement>;</statement>}</block>
                     </statement>
                  </ifStatement>
               </statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>acceptOwnership</identifier>
            <parameterList>()</parameterList>
            <visibleType>public</visibleType>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <environmentalVariable>msg.sender</environmentalVariable>
                                    </expression>
                                    <comparison>==</comparison>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>newOwner</identifier>
                                       </primaryExpression>
                                    </expression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>OwnershipTransferred</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <primaryExpression>
                                       <identifier>owner</identifier>
                                    </primaryExpression>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <identifier>newOwner</identifier>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>owner</identifier>
                           </primaryExpression>
                        </expression>=<expression>
                           <primaryExpression>
                              <identifier>newOwner</identifier>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>}</contractDefinition>
   <contractDefinition>contract<identifier>LegolasBase</identifier>is<inheritanceSpecifier>
         <userDefinedTypeName>
            <identifier>Ownable</identifier>
         </userDefinedTypeName>
      </inheritanceSpecifier>{<contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <mappingSt>mapping(<typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>=&gt;<typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>)</mappingSt>
            </typeName>
            <visibleType>public</visibleType>
            <identifier>balances</identifier>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <mappingSt>mapping(<typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>=&gt;<typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>)</mappingSt>
            </typeName>
            <visibleType>public</visibleType>
            <identifier>initialAllocations</identifier>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <mappingSt>mapping(<typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>=&gt;<typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>)</mappingSt>
            </typeName>
            <visibleType>public</visibleType>
            <identifier>allocations</identifier>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <mappingSt>mapping(<typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>=&gt;<typeName>
                     <mappingSt>mapping(<typeName>
                           <elementaryTypeName>address</elementaryTypeName>
                        </typeName>=&gt;<typeName>
                           <elementaryTypeName>bool</elementaryTypeName>
                        </typeName>)</mappingSt>
                  </typeName>)</mappingSt>
            </typeName>
            <visibleType>public</visibleType>
            <identifier>eligibleForBonus</identifier>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <mappingSt>mapping(<typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>=&gt;<typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>)</mappingSt>
            </typeName>
            <visibleType>public</visibleType>
            <identifier>unspentAmounts</identifier>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <mappingSt>mapping(<typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>=&gt;<typeName>
                     <elementaryTypeName>bool</elementaryTypeName>
                  </typeName>)</mappingSt>
            </typeName>
            <visibleType>public</visibleType>
            <identifier>founders</identifier>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <mappingSt>mapping(<typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>=&gt;<typeName>
                     <elementaryTypeName>bool</elementaryTypeName>
                  </typeName>)</mappingSt>
            </typeName>
            <visibleType>public</visibleType>
            <identifier>advisors</identifier>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <typeName>
                  <elementaryTypeName>uint256</elementaryTypeName>
               </typeName>[<expression>
                  <primaryExpression>
                     <numberLiteral>
                        <decimalNumber>12</decimalNumber>
                     </numberLiteral>
                  </primaryExpression>
               </expression>]</typeName>
            <visibleType>public</visibleType>
            <identifier>ADVISORS_LOCK_DATES</identifier>=<expression>
               <primaryExpression>
                  <arrayLiteral>[<arrayElement>
                        <expression>
                           <primaryExpression>
                              <numberLiteral>
                                 <decimalNumber>1521072000</decimalNumber>
                              </numberLiteral>
                           </primaryExpression>
                        </expression>
                     </arrayElement>,<arrayElement>
                        <expression>
                           <primaryExpression>
                              <numberLiteral>
                                 <decimalNumber>1523750400</decimalNumber>
                              </numberLiteral>
                           </primaryExpression>
                        </expression>
                     </arrayElement>,<arrayElement>
                        <expression>
                           <primaryExpression>
                              <numberLiteral>
                                 <decimalNumber>1526342400</decimalNumber>
                              </numberLiteral>
                           </primaryExpression>
                        </expression>
                     </arrayElement>,<arrayElement>
                        <expression>
                           <primaryExpression>
                              <numberLiteral>
                                 <decimalNumber>1529020800</decimalNumber>
                              </numberLiteral>
                           </primaryExpression>
                        </expression>
                     </arrayElement>,<arrayElement>
                        <expression>
                           <primaryExpression>
                              <numberLiteral>
                                 <decimalNumber>1531612800</decimalNumber>
                              </numberLiteral>
                           </primaryExpression>
                        </expression>
                     </arrayElement>,<arrayElement>
                        <expression>
                           <primaryExpression>
                              <numberLiteral>
                                 <decimalNumber>1534291200</decimalNumber>
                              </numberLiteral>
                           </primaryExpression>
                        </expression>
                     </arrayElement>,<arrayElement>
                        <expression>
                           <primaryExpression>
                              <numberLiteral>
                                 <decimalNumber>1536969600</decimalNumber>
                              </numberLiteral>
                           </primaryExpression>
                        </expression>
                     </arrayElement>,<arrayElement>
                        <expression>
                           <primaryExpression>
                              <numberLiteral>
                                 <decimalNumber>1539561600</decimalNumber>
                              </numberLiteral>
                           </primaryExpression>
                        </expression>
                     </arrayElement>,<arrayElement>
                        <expression>
                           <primaryExpression>
                              <numberLiteral>
                                 <decimalNumber>1542240000</decimalNumber>
                              </numberLiteral>
                           </primaryExpression>
                        </expression>
                     </arrayElement>,<arrayElement>
                        <expression>
                           <primaryExpression>
                              <numberLiteral>
                                 <decimalNumber>1544832000</decimalNumber>
                              </numberLiteral>
                           </primaryExpression>
                        </expression>
                     </arrayElement>,<arrayElement>
                        <expression>
                           <primaryExpression>
                              <numberLiteral>
                                 <decimalNumber>1547510400</decimalNumber>
                              </numberLiteral>
                           </primaryExpression>
                        </expression>
                     </arrayElement>,<arrayElement>
                        <expression>
                           <primaryExpression>
                              <numberLiteral>
                                 <decimalNumber>1550188800</decimalNumber>
                              </numberLiteral>
                           </primaryExpression>
                        </expression>
                     </arrayElement>]</arrayLiteral>
               </primaryExpression>
            </expression>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <typeName>
                  <elementaryTypeName>uint256</elementaryTypeName>
               </typeName>[<expression>
                  <primaryExpression>
                     <numberLiteral>
                        <decimalNumber>12</decimalNumber>
                     </numberLiteral>
                  </primaryExpression>
               </expression>]</typeName>
            <visibleType>public</visibleType>
            <identifier>FOUNDERS_LOCK_DATES</identifier>=<expression>
               <primaryExpression>
                  <arrayLiteral>[<arrayElement>
                        <expression>
                           <primaryExpression>
                              <numberLiteral>
                                 <decimalNumber>1552608000</decimalNumber>
                              </numberLiteral>
                           </primaryExpression>
                        </expression>
                     </arrayElement>,<arrayElement>
                        <expression>
                           <primaryExpression>
                              <numberLiteral>
                                 <decimalNumber>1555286400</decimalNumber>
                              </numberLiteral>
                           </primaryExpression>
                        </expression>
                     </arrayElement>,<arrayElement>
                        <expression>
                           <primaryExpression>
                              <numberLiteral>
                                 <decimalNumber>1557878400</decimalNumber>
                              </numberLiteral>
                           </primaryExpression>
                        </expression>
                     </arrayElement>,<arrayElement>
                        <expression>
                           <primaryExpression>
                              <numberLiteral>
                                 <decimalNumber>1560556800</decimalNumber>
                              </numberLiteral>
                           </primaryExpression>
                        </expression>
                     </arrayElement>,<arrayElement>
                        <expression>
                           <primaryExpression>
                              <numberLiteral>
                                 <decimalNumber>1563148800</decimalNumber>
                              </numberLiteral>
                           </primaryExpression>
                        </expression>
                     </arrayElement>,<arrayElement>
                        <expression>
                           <primaryExpression>
                              <numberLiteral>
                                 <decimalNumber>1565827200</decimalNumber>
                              </numberLiteral>
                           </primaryExpression>
                        </expression>
                     </arrayElement>,<arrayElement>
                        <expression>
                           <primaryExpression>
                              <numberLiteral>
                                 <decimalNumber>1568505600</decimalNumber>
                              </numberLiteral>
                           </primaryExpression>
                        </expression>
                     </arrayElement>,<arrayElement>
                        <expression>
                           <primaryExpression>
                              <numberLiteral>
                                 <decimalNumber>1571097600</decimalNumber>
                              </numberLiteral>
                           </primaryExpression>
                        </expression>
                     </arrayElement>,<arrayElement>
                        <expression>
                           <primaryExpression>
                              <numberLiteral>
                                 <decimalNumber>1573776000</decimalNumber>
                              </numberLiteral>
                           </primaryExpression>
                        </expression>
                     </arrayElement>,<arrayElement>
                        <expression>
                           <primaryExpression>
                              <numberLiteral>
                                 <decimalNumber>1576368000</decimalNumber>
                              </numberLiteral>
                           </primaryExpression>
                        </expression>
                     </arrayElement>,<arrayElement>
                        <expression>
                           <primaryExpression>
                              <numberLiteral>
                                 <decimalNumber>1579046400</decimalNumber>
                              </numberLiteral>
                           </primaryExpression>
                        </expression>
                     </arrayElement>,<arrayElement>
                        <expression>
                           <primaryExpression>
                              <numberLiteral>
                                 <decimalNumber>1581724800</decimalNumber>
                              </numberLiteral>
                           </primaryExpression>
                        </expression>
                     </arrayElement>]</arrayLiteral>
               </primaryExpression>
            </expression>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <typeName>
                  <elementaryTypeName>uint256</elementaryTypeName>
               </typeName>[<expression>
                  <primaryExpression>
                     <numberLiteral>
                        <decimalNumber>4</decimalNumber>
                     </numberLiteral>
                  </primaryExpression>
               </expression>]</typeName>
            <visibleType>public</visibleType>
            <identifier>BONUS_DATES</identifier>=<expression>
               <primaryExpression>
                  <arrayLiteral>[<arrayElement>
                        <expression>
                           <primaryExpression>
                              <numberLiteral>
                                 <decimalNumber>1534291200</decimalNumber>
                              </numberLiteral>
                           </primaryExpression>
                        </expression>
                     </arrayElement>,<arrayElement>
                        <expression>
                           <primaryExpression>
                              <numberLiteral>
                                 <decimalNumber>1550188800</decimalNumber>
                              </numberLiteral>
                           </primaryExpression>
                        </expression>
                     </arrayElement>,<arrayElement>
                        <expression>
                           <primaryExpression>
                              <numberLiteral>
                                 <decimalNumber>1565827200</decimalNumber>
                              </numberLiteral>
                           </primaryExpression>
                        </expression>
                     </arrayElement>,<arrayElement>
                        <expression>
                           <primaryExpression>
                              <numberLiteral>
                                 <decimalNumber>1581724800</decimalNumber>
                              </numberLiteral>
                           </primaryExpression>
                        </expression>
                     </arrayElement>]</arrayLiteral>
               </primaryExpression>
            </expression>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>getLockedAmount</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>_address</identifier>
               </parameter>)</parameterList>
            <visibleType>internal</visibleType>
            <stateMutability>
               <viewType>view</viewType>
            </stateMutability>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>uint256</elementaryTypeName>
                     </typeName>
                     <identifier>lockedAmount</identifier>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{<statement>
                  <ifStatement>if(<condition>
                        <expression>
                           <expression>!<expression>
                                 <expression>
                                    <primaryExpression>
                                       <identifier>advisors</identifier>
                                    </primaryExpression>
                                 </expression>[<expression>
                                    <primaryExpression>
                                       <identifier>_address</identifier>
                                    </primaryExpression>
                                 </expression>]</expression>
                           </expression>&amp;&amp;<expression>!<expression>
                                 <expression>
                                    <primaryExpression>
                                       <identifier>founders</identifier>
                                    </primaryExpression>
                                 </expression>[<expression>
                                    <primaryExpression>
                                       <identifier>_address</identifier>
                                    </primaryExpression>
                                 </expression>]</expression>
                           </expression>
                        </expression>
                     </condition>)<statement>
                        <returnStatement>return<expression>
                              <primaryExpression>
                                 <numberLiteral>
                                    <decimalNumber>0</decimalNumber>
                                 </numberLiteral>
                              </primaryExpression>
                           </expression>
                        </returnStatement>;</statement>
                  </ifStatement>
               </statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <variableDeclaration>
                              <typeName>
                                 <typeName>
                                    <elementaryTypeName>uint256</elementaryTypeName>
                                 </typeName>[<expression>
                                    <primaryExpression>
                                       <numberLiteral>
                                          <decimalNumber>12</decimalNumber>
                                       </numberLiteral>
                                    </primaryExpression>
                                 </expression>]</typeName>
                              <storageLocation>memory</storageLocation>
                              <identifier>lockDates</identifier>
                           </variableDeclaration>
                        </expression>=<expression>
                           <expression>
                              <expression>
                                 <primaryExpression>
                                    <identifier>advisors</identifier>
                                 </primaryExpression>
                              </expression>[<expression>
                                 <primaryExpression>
                                    <identifier>_address</identifier>
                                 </primaryExpression>
                              </expression>]</expression>?<expression>
                              <primaryExpression>
                                 <identifier>ADVISORS_LOCK_DATES</identifier>
                              </primaryExpression>
                           </expression>:<expression>
                              <primaryExpression>
                                 <identifier>FOUNDERS_LOCK_DATES</identifier>
                              </primaryExpression>
                           </expression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <forStatement>for(<expression>
                        <expression>
                           <variableDeclaration>
                              <typeName>
                                 <elementaryTypeName>uint8</elementaryTypeName>
                              </typeName>
                              <identifier>i</identifier>
                           </variableDeclaration>
                        </expression>=<expression>
                           <primaryExpression>
                              <numberLiteral>
                                 <decimalNumber>11</decimalNumber>
                              </numberLiteral>
                           </primaryExpression>
                        </expression>
                     </expression>;<condition>
                        <expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>i</identifier>
                              </primaryExpression>
                           </expression>&gt;=<expression>
                              <primaryExpression>
                                 <numberLiteral>
                                    <decimalNumber>0</decimalNumber>
                                 </numberLiteral>
                              </primaryExpression>
                           </expression>
                        </expression>
                     </condition>;<expression>
                        <expression>
                           <primaryExpression>
                              <identifier>i</identifier>
                           </primaryExpression>
                        </expression>
                        <twoPlusMinusOperator>
                           <decrementOperator>--</decrementOperator>
                        </twoPlusMinusOperator>
                     </expression>)<statement>
                        <block>{<statement>
                              <ifStatement>if(<condition>
                                    <expression>
                                       <expression>
                                          <environmentalVariable>now</environmentalVariable>
                                       </expression>&gt;=<expression>
                                          <expression>
                                             <primaryExpression>
                                                <identifier>lockDates</identifier>
                                             </primaryExpression>
                                          </expression>[<expression>
                                             <primaryExpression>
                                                <identifier>i</identifier>
                                             </primaryExpression>
                                          </expression>]</expression>
                                    </expression>
                                 </condition>)<statement>
                                    <block>{<statement>
                                          <returnStatement>return<expression>
                                                <expression>
                                                   <tupleExpression>(<expression>
                                                         <expression>
                                                            <expression>
                                                               <primaryExpression>
                                                                  <identifier>allocations</identifier>
                                                               </primaryExpression>
                                                            </expression>[<expression>
                                                               <primaryExpression>
                                                                  <identifier>_address</identifier>
                                                               </primaryExpression>
                                                            </expression>]</expression>
                                                         <muldivOperator>
                                                            <divOperator>/</divOperator>
                                                         </muldivOperator>
                                                         <expression>
                                                            <primaryExpression>
                                                               <numberLiteral>
                                                                  <decimalNumber>12</decimalNumber>
                                                               </numberLiteral>
                                                            </primaryExpression>
                                                         </expression>
                                                      </expression>)</tupleExpression>
                                                </expression>
                                                <muldivOperator>
                                                   <mulOperator>*</mulOperator>
                                                </muldivOperator>
                                                <expression>
                                                   <tupleExpression>(<expression>
                                                         <expression>
                                                            <primaryExpression>
                                                               <numberLiteral>
                                                                  <decimalNumber>11</decimalNumber>
                                                               </numberLiteral>
                                                            </primaryExpression>
                                                         </expression>
                                                         <plusminusOperator>
                                                            <minusOperator>-</minusOperator>
                                                         </plusminusOperator>
                                                         <expression>
                                                            <primaryExpression>
                                                               <identifier>i</identifier>
                                                            </primaryExpression>
                                                         </expression>
                                                      </expression>)</tupleExpression>
                                                </expression>
                                             </expression>
                                          </returnStatement>;</statement>}</block>
                                 </statement>
                              </ifStatement>
                           </statement>}</block>
                     </statement>
                  </forStatement>
               </statement>
               <statement>
                  <returnStatement>return<expression>
                        <expression>
                           <primaryExpression>
                              <identifier>allocations</identifier>
                           </primaryExpression>
                        </expression>[<expression>
                           <primaryExpression>
                              <identifier>_address</identifier>
                           </primaryExpression>
                        </expression>]</expression>
                  </returnStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>updateBonusEligibity</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>_from</identifier>
               </parameter>)</parameterList>
            <visibleType>internal</visibleType>
            <block>{<statement>
                  <ifStatement>if(<condition>
                        <expression>
                           <expression>
                              <expression>
                                 <expression>
                                    <environmentalVariable>now</environmentalVariable>
                                 </expression>&lt;<expression>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>BONUS_DATES</identifier>
                                       </primaryExpression>
                                    </expression>[<expression>
                                       <primaryExpression>
                                          <numberLiteral>
                                             <decimalNumber>3</decimalNumber>
                                          </numberLiteral>
                                       </primaryExpression>
                                    </expression>]</expression>
                              </expression>&amp;&amp;<expression>
                                 <expression>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>initialAllocations</identifier>
                                       </primaryExpression>
                                    </expression>[<expression>
                                       <primaryExpression>
                                          <identifier>_from</identifier>
                                       </primaryExpression>
                                    </expression>]</expression>&gt;<expression>
                                    <primaryExpression>
                                       <numberLiteral>
                                          <decimalNumber>0</decimalNumber>
                                       </numberLiteral>
                                    </primaryExpression>
                                 </expression>
                              </expression>
                           </expression>&amp;&amp;<expression>
                              <expression>
                                 <expression>
                                    <primaryExpression>
                                       <identifier>balances</identifier>
                                    </primaryExpression>
                                 </expression>[<expression>
                                    <primaryExpression>
                                       <identifier>_from</identifier>
                                    </primaryExpression>
                                 </expression>]</expression>&lt;<expression>
                                 <expression>
                                    <primaryExpression>
                                       <identifier>allocations</identifier>
                                    </primaryExpression>
                                 </expression>[<expression>
                                    <primaryExpression>
                                       <identifier>_from</identifier>
                                    </primaryExpression>
                                 </expression>]</expression>
                           </expression>
                        </expression>
                     </condition>)<statement>
                        <block>{<statement>
                              <forStatement>for(<expression>
                                    <expression>
                                       <variableDeclaration>
                                          <typeName>
                                             <elementaryTypeName>uint8</elementaryTypeName>
                                          </typeName>
                                          <identifier>i</identifier>
                                       </variableDeclaration>
                                    </expression>=<expression>
                                       <primaryExpression>
                                          <numberLiteral>
                                             <decimalNumber>0</decimalNumber>
                                          </numberLiteral>
                                       </primaryExpression>
                                    </expression>
                                 </expression>;<condition>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>i</identifier>
                                          </primaryExpression>
                                       </expression>&lt;<expression>
                                          <primaryExpression>
                                             <numberLiteral>
                                                <decimalNumber>4</decimalNumber>
                                             </numberLiteral>
                                          </primaryExpression>
                                       </expression>
                                    </expression>
                                 </condition>;<expression>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>i</identifier>
                                       </primaryExpression>
                                    </expression>
                                    <twoPlusMinusOperator>
                                       <incrementOperator>++</incrementOperator>
                                    </twoPlusMinusOperator>
                                 </expression>)<statement>
                                    <block>{<statement>
                                          <ifStatement>if(<condition>
                                                <expression>
                                                   <expression>
                                                      <expression>
                                                         <environmentalVariable>now</environmentalVariable>
                                                      </expression>&lt;<expression>
                                                         <expression>
                                                            <primaryExpression>
                                                               <identifier>BONUS_DATES</identifier>
                                                            </primaryExpression>
                                                         </expression>[<expression>
                                                            <primaryExpression>
                                                               <identifier>i</identifier>
                                                            </primaryExpression>
                                                         </expression>]</expression>
                                                   </expression>&amp;&amp;<expression>
                                                      <expression>
                                                         <expression>
                                                            <primaryExpression>
                                                               <identifier>eligibleForBonus</identifier>
                                                            </primaryExpression>
                                                         </expression>[<expression>
                                                            <expression>
                                                               <primaryExpression>
                                                                  <identifier>BONUS_DATES</identifier>
                                                               </primaryExpression>
                                                            </expression>[<expression>
                                                               <primaryExpression>
                                                                  <identifier>i</identifier>
                                                               </primaryExpression>
                                                            </expression>]</expression>]</expression>[<expression>
                                                         <primaryExpression>
                                                            <identifier>_from</identifier>
                                                         </primaryExpression>
                                                      </expression>]</expression>
                                                </expression>
                                             </condition>)<statement>
                                                <block>{<statement>
                                                      <expressionStatement>
                                                         <expression>
                                                            <expression>
                                                               <expression>
                                                                  <primaryExpression>
                                                                     <identifier>unspentAmounts</identifier>
                                                                  </primaryExpression>
                                                               </expression>[<expression>
                                                                  <expression>
                                                                     <primaryExpression>
                                                                        <identifier>BONUS_DATES</identifier>
                                                                     </primaryExpression>
                                                                  </expression>[<expression>
                                                                     <primaryExpression>
                                                                        <identifier>i</identifier>
                                                                     </primaryExpression>
                                                                  </expression>]</expression>]</expression>
                                                            <lvalueOperator>
                                                               <minusLvalueOperator>-=</minusLvalueOperator>
                                                            </lvalueOperator>
                                                            <expression>
                                                               <expression>
                                                                  <primaryExpression>
                                                                     <identifier>initialAllocations</identifier>
                                                                  </primaryExpression>
                                                               </expression>[<expression>
                                                                  <primaryExpression>
                                                                     <identifier>_from</identifier>
                                                                  </primaryExpression>
                                                               </expression>]</expression>
                                                         </expression>
                                                      </expressionStatement>;</statement>
                                                   <statement>
                                                      <expressionStatement>
                                                         <expression>
                                                            <expression>
                                                               <expression>
                                                                  <expression>
                                                                     <primaryExpression>
                                                                        <identifier>eligibleForBonus</identifier>
                                                                     </primaryExpression>
                                                                  </expression>[<expression>
                                                                     <expression>
                                                                        <primaryExpression>
                                                                           <identifier>BONUS_DATES</identifier>
                                                                        </primaryExpression>
                                                                     </expression>[<expression>
                                                                        <primaryExpression>
                                                                           <identifier>i</identifier>
                                                                        </primaryExpression>
                                                                     </expression>]</expression>]</expression>[<expression>
                                                                  <primaryExpression>
                                                                     <identifier>_from</identifier>
                                                                  </primaryExpression>
                                                               </expression>]</expression>=<expression>
                                                               <primaryExpression>
                                                                  <booleanLiteral>false</booleanLiteral>
                                                               </primaryExpression>
                                                            </expression>
                                                         </expression>
                                                      </expressionStatement>;</statement>}</block>
                                             </statement>
                                          </ifStatement>
                                       </statement>}</block>
                                 </statement>
                              </forStatement>
                           </statement>}</block>
                     </statement>
                  </ifStatement>
               </statement>}</block>
         </functionDefinition>
      </contractPartDefinition>}</contractDefinition>
   <contractDefinition>contract<identifier>EIP20</identifier>is<inheritanceSpecifier>
         <userDefinedTypeName>
            <identifier>EIP20Interface</identifier>
         </userDefinedTypeName>
      </inheritanceSpecifier>,<inheritanceSpecifier>
         <userDefinedTypeName>
            <identifier>LegolasBase</identifier>
         </userDefinedTypeName>
      </inheritanceSpecifier>{<contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>uint256</elementaryTypeName>
            </typeName>
            <constantType>constant</constantType>
            <visibleType>private</visibleType>
            <identifier>MAX_UINT256</identifier>=<expression>
               <expression>
                  <expression>
                     <primaryExpression>
                        <numberLiteral>
                           <decimalNumber>2</decimalNumber>
                        </numberLiteral>
                     </primaryExpression>
                  </expression>
                  <powerOperator>**</powerOperator>
                  <expression>
                     <primaryExpression>
                        <numberLiteral>
                           <decimalNumber>256</decimalNumber>
                        </numberLiteral>
                     </primaryExpression>
                  </expression>
               </expression>
               <plusminusOperator>
                  <minusOperator>-</minusOperator>
               </plusminusOperator>
               <expression>
                  <primaryExpression>
                     <numberLiteral>
                        <decimalNumber>1</decimalNumber>
                     </numberLiteral>
                  </primaryExpression>
               </expression>
            </expression>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <mappingSt>mapping(<typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>=&gt;<typeName>
                     <mappingSt>mapping(<typeName>
                           <elementaryTypeName>address</elementaryTypeName>
                        </typeName>=&gt;<typeName>
                           <elementaryTypeName>uint256</elementaryTypeName>
                        </typeName>)</mappingSt>
                  </typeName>)</mappingSt>
            </typeName>
            <visibleType>public</visibleType>
            <identifier>allowed</identifier>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>string</elementaryTypeName>
            </typeName>
            <visibleType>public</visibleType>
            <identifier>name</identifier>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>uint8</elementaryTypeName>
            </typeName>
            <visibleType>public</visibleType>
            <identifier>decimals</identifier>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>string</elementaryTypeName>
            </typeName>
            <visibleType>public</visibleType>
            <identifier>symbol</identifier>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>EIP20</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>_initialAmount</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>string</elementaryTypeName>
                  </typeName>
                  <identifier>_tokenName</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint8</elementaryTypeName>
                  </typeName>
                  <identifier>_decimalUnits</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>string</elementaryTypeName>
                  </typeName>
                  <identifier>_tokenSymbol</identifier>
               </parameter>)</parameterList>
            <visibleType>public</visibleType>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>balances</identifier>
                              </primaryExpression>
                           </expression>[<expression>
                              <environmentalVariable>msg.sender</environmentalVariable>
                           </expression>]</expression>=<expression>
                           <primaryExpression>
                              <identifier>_initialAmount</identifier>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>totalSupply</identifier>
                           </primaryExpression>
                        </expression>=<expression>
                           <primaryExpression>
                              <identifier>_initialAmount</identifier>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>name</identifier>
                           </primaryExpression>
                        </expression>=<expression>
                           <primaryExpression>
                              <identifier>_tokenName</identifier>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>decimals</identifier>
                           </primaryExpression>
                        </expression>=<expression>
                           <primaryExpression>
                              <identifier>_decimalUnits</identifier>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>symbol</identifier>
                           </primaryExpression>
                        </expression>=<expression>
                           <primaryExpression>
                              <identifier>_tokenSymbol</identifier>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>transfer</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>_to</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>_value</identifier>
               </parameter>)</parameterList>
            <visibleType>public</visibleType>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>bool</elementaryTypeName>
                     </typeName>
                     <identifier>success</identifier>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>balances</identifier>
                                          </primaryExpression>
                                       </expression>[<expression>
                                          <environmentalVariable>msg.sender</environmentalVariable>
                                       </expression>]</expression>&gt;=<expression>
                                       <primaryExpression>
                                          <identifier>_value</identifier>
                                       </primaryExpression>
                                    </expression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <expression>
                                          <expression>
                                             <primaryExpression>
                                                <identifier>balances</identifier>
                                             </primaryExpression>
                                          </expression>[<expression>
                                             <environmentalVariable>msg.sender</environmentalVariable>
                                          </expression>]</expression>
                                       <plusminusOperator>
                                          <minusOperator>-</minusOperator>
                                       </plusminusOperator>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>_value</identifier>
                                          </primaryExpression>
                                       </expression>
                                    </expression>&gt;=<expression>
                                       <functionCall>
                                          <functionName>
                                             <identifier>getLockedAmount</identifier>
                                          </functionName>
                                          <callArguments>
                                             <tupleExpression>(<expression>
                                                   <environmentalVariable>msg.sender</environmentalVariable>
                                                </expression>)</tupleExpression>
                                          </callArguments>
                                       </functionCall>
                                    </expression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>balances</identifier>
                              </primaryExpression>
                           </expression>[<expression>
                              <environmentalVariable>msg.sender</environmentalVariable>
                           </expression>]</expression>
                        <lvalueOperator>
                           <minusLvalueOperator>-=</minusLvalueOperator>
                        </lvalueOperator>
                        <expression>
                           <primaryExpression>
                              <identifier>_value</identifier>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>balances</identifier>
                              </primaryExpression>
                           </expression>[<expression>
                              <primaryExpression>
                                 <identifier>_to</identifier>
                              </primaryExpression>
                           </expression>]</expression>
                        <lvalueOperator>
                           <plusLvalueOperator>+=</plusLvalueOperator>
                        </lvalueOperator>
                        <expression>
                           <primaryExpression>
                              <identifier>_value</identifier>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>updateBonusEligibity</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <environmentalVariable>msg.sender</environmentalVariable>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>Transfer</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <environmentalVariable>msg.sender</environmentalVariable>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <identifier>_to</identifier>
                                    </primaryExpression>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <identifier>_value</identifier>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <returnStatement>return<expression>
                        <primaryExpression>
                           <booleanLiteral>true</booleanLiteral>
                        </primaryExpression>
                     </expression>
                  </returnStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>transferFrom</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>_from</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>_to</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>_value</identifier>
               </parameter>)</parameterList>
            <visibleType>public</visibleType>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>bool</elementaryTypeName>
                     </typeName>
                     <identifier>success</identifier>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <variableDeclaration>
                              <typeName>
                                 <elementaryTypeName>uint256</elementaryTypeName>
                              </typeName>
                              <identifier>allowance</identifier>
                           </variableDeclaration>
                        </expression>=<expression>
                           <expression>
                              <expression>
                                 <primaryExpression>
                                    <identifier>allowed</identifier>
                                 </primaryExpression>
                              </expression>[<expression>
                                 <primaryExpression>
                                    <identifier>_from</identifier>
                                 </primaryExpression>
                              </expression>]</expression>[<expression>
                              <environmentalVariable>msg.sender</environmentalVariable>
                           </expression>]</expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <expression>
                                          <expression>
                                             <primaryExpression>
                                                <identifier>balances</identifier>
                                             </primaryExpression>
                                          </expression>[<expression>
                                             <primaryExpression>
                                                <identifier>_from</identifier>
                                             </primaryExpression>
                                          </expression>]</expression>&gt;=<expression>
                                          <primaryExpression>
                                             <identifier>_value</identifier>
                                          </primaryExpression>
                                       </expression>
                                    </expression>&amp;&amp;<expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>allowance</identifier>
                                          </primaryExpression>
                                       </expression>&gt;=<expression>
                                          <primaryExpression>
                                             <identifier>_value</identifier>
                                          </primaryExpression>
                                       </expression>
                                    </expression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <expression>
                                          <expression>
                                             <primaryExpression>
                                                <identifier>balances</identifier>
                                             </primaryExpression>
                                          </expression>[<expression>
                                             <primaryExpression>
                                                <identifier>_from</identifier>
                                             </primaryExpression>
                                          </expression>]</expression>
                                       <plusminusOperator>
                                          <minusOperator>-</minusOperator>
                                       </plusminusOperator>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>_value</identifier>
                                          </primaryExpression>
                                       </expression>
                                    </expression>&gt;=<expression>
                                       <functionCall>
                                          <functionName>
                                             <identifier>getLockedAmount</identifier>
                                          </functionName>
                                          <callArguments>
                                             <tupleExpression>(<expression>
                                                   <primaryExpression>
                                                      <identifier>_from</identifier>
                                                   </primaryExpression>
                                                </expression>)</tupleExpression>
                                          </callArguments>
                                       </functionCall>
                                    </expression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>balances</identifier>
                              </primaryExpression>
                           </expression>[<expression>
                              <primaryExpression>
                                 <identifier>_to</identifier>
                              </primaryExpression>
                           </expression>]</expression>
                        <lvalueOperator>
                           <plusLvalueOperator>+=</plusLvalueOperator>
                        </lvalueOperator>
                        <expression>
                           <primaryExpression>
                              <identifier>_value</identifier>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>balances</identifier>
                              </primaryExpression>
                           </expression>[<expression>
                              <primaryExpression>
                                 <identifier>_from</identifier>
                              </primaryExpression>
                           </expression>]</expression>
                        <lvalueOperator>
                           <minusLvalueOperator>-=</minusLvalueOperator>
                        </lvalueOperator>
                        <expression>
                           <primaryExpression>
                              <identifier>_value</identifier>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <ifStatement>if(<condition>
                        <expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>allowance</identifier>
                              </primaryExpression>
                           </expression>&lt;<expression>
                              <primaryExpression>
                                 <identifier>MAX_UINT256</identifier>
                              </primaryExpression>
                           </expression>
                        </expression>
                     </condition>)<statement>
                        <block>{<statement>
                              <expressionStatement>
                                 <expression>
                                    <expression>
                                       <expression>
                                          <expression>
                                             <primaryExpression>
                                                <identifier>allowed</identifier>
                                             </primaryExpression>
                                          </expression>[<expression>
                                             <primaryExpression>
                                                <identifier>_from</identifier>
                                             </primaryExpression>
                                          </expression>]</expression>[<expression>
                                          <environmentalVariable>msg.sender</environmentalVariable>
                                       </expression>]</expression>
                                    <lvalueOperator>
                                       <minusLvalueOperator>-=</minusLvalueOperator>
                                    </lvalueOperator>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>_value</identifier>
                                       </primaryExpression>
                                    </expression>
                                 </expression>
                              </expressionStatement>;</statement>}</block>
                     </statement>
                  </ifStatement>
               </statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>updateBonusEligibity</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <primaryExpression>
                                       <identifier>_from</identifier>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>Transfer</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <primaryExpression>
                                       <identifier>_from</identifier>
                                    </primaryExpression>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <identifier>_to</identifier>
                                    </primaryExpression>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <identifier>_value</identifier>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <returnStatement>return<expression>
                        <primaryExpression>
                           <booleanLiteral>true</booleanLiteral>
                        </primaryExpression>
                     </expression>
                  </returnStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>balanceOf</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>_owner</identifier>
               </parameter>)</parameterList>
            <visibleType>public</visibleType>
            <stateMutability>
               <viewType>view</viewType>
            </stateMutability>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>uint256</elementaryTypeName>
                     </typeName>
                     <identifier>balance</identifier>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{<statement>
                  <returnStatement>return<expression>
                        <expression>
                           <primaryExpression>
                              <identifier>balances</identifier>
                           </primaryExpression>
                        </expression>[<expression>
                           <primaryExpression>
                              <identifier>_owner</identifier>
                           </primaryExpression>
                        </expression>]</expression>
                  </returnStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>approve</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>_spender</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>_value</identifier>
               </parameter>)</parameterList>
            <visibleType>public</visibleType>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>bool</elementaryTypeName>
                     </typeName>
                     <identifier>success</identifier>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <expression>
                              <expression>
                                 <primaryExpression>
                                    <identifier>allowed</identifier>
                                 </primaryExpression>
                              </expression>[<expression>
                                 <environmentalVariable>msg.sender</environmentalVariable>
                              </expression>]</expression>[<expression>
                              <primaryExpression>
                                 <identifier>_spender</identifier>
                              </primaryExpression>
                           </expression>]</expression>=<expression>
                           <primaryExpression>
                              <identifier>_value</identifier>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>Approval</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <environmentalVariable>msg.sender</environmentalVariable>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <identifier>_spender</identifier>
                                    </primaryExpression>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <identifier>_value</identifier>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <returnStatement>return<expression>
                        <primaryExpression>
                           <booleanLiteral>true</booleanLiteral>
                        </primaryExpression>
                     </expression>
                  </returnStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>allowance</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>_owner</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>_spender</identifier>
               </parameter>)</parameterList>
            <visibleType>public</visibleType>
            <stateMutability>
               <viewType>view</viewType>
            </stateMutability>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>uint256</elementaryTypeName>
                     </typeName>
                     <identifier>remaining</identifier>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{<statement>
                  <returnStatement>return<expression>
                        <expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>allowed</identifier>
                              </primaryExpression>
                           </expression>[<expression>
                              <primaryExpression>
                                 <identifier>_owner</identifier>
                              </primaryExpression>
                           </expression>]</expression>[<expression>
                           <primaryExpression>
                              <identifier>_spender</identifier>
                           </primaryExpression>
                        </expression>]</expression>
                  </returnStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>}</contractDefinition>
   <contractDefinition>contract<identifier>Legolas</identifier>is<inheritanceSpecifier>
         <userDefinedTypeName>
            <identifier>EIP20</identifier>
         </userDefinedTypeName>
      </inheritanceSpecifier>{<contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>string</elementaryTypeName>
            </typeName>
            <constantType>constant</constantType>
            <identifier>NAME</identifier>=<expression>
               <primaryExpression>
                  <stringLiteral>LGO Token</stringLiteral>
               </primaryExpression>
            </expression>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>string</elementaryTypeName>
            </typeName>
            <constantType>constant</constantType>
            <identifier>SYMBOL</identifier>=<expression>
               <primaryExpression>
                  <stringLiteral>LGO</stringLiteral>
               </primaryExpression>
            </expression>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>uint8</elementaryTypeName>
            </typeName>
            <constantType>constant</constantType>
            <identifier>DECIMALS</identifier>=<expression>
               <primaryExpression>
                  <numberLiteral>
                     <decimalNumber>8</decimalNumber>
                  </numberLiteral>
               </primaryExpression>
            </expression>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>uint256</elementaryTypeName>
            </typeName>
            <constantType>constant</constantType>
            <identifier>UNIT</identifier>=<expression>
               <expression>
                  <primaryExpression>
                     <numberLiteral>
                        <decimalNumber>10</decimalNumber>
                     </numberLiteral>
                  </primaryExpression>
               </expression>
               <powerOperator>**</powerOperator>
               <expression>
                  <typeConversion>
                     <typeName>
                        <elementaryTypeName>uint256</elementaryTypeName>
                     </typeName>(<expression>
                        <primaryExpression>
                           <identifier>DECIMALS</identifier>
                        </primaryExpression>
                     </expression>)</typeConversion>
               </expression>
            </expression>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>uint256</elementaryTypeName>
            </typeName>
            <constantType>constant</constantType>
            <identifier>onePercent</identifier>=<expression>
               <primaryExpression>
                  <numberLiteral>
                     <decimalNumber>181415052000000</decimalNumber>
                  </numberLiteral>
               </primaryExpression>
            </expression>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>uint256</elementaryTypeName>
            </typeName>
            <constantType>constant</constantType>
            <identifier>ADVISORS_AMOUNT</identifier>=<expression>
               <expression>
                  <primaryExpression>
                     <numberLiteral>
                        <decimalNumber>5</decimalNumber>
                     </numberLiteral>
                  </primaryExpression>
               </expression>
               <muldivOperator>
                  <mulOperator>*</mulOperator>
               </muldivOperator>
               <expression>
                  <primaryExpression>
                     <identifier>onePercent</identifier>
                  </primaryExpression>
               </expression>
            </expression>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>uint256</elementaryTypeName>
            </typeName>
            <constantType>constant</constantType>
            <identifier>FOUNDERS_AMOUNT</identifier>=<expression>
               <expression>
                  <primaryExpression>
                     <numberLiteral>
                        <decimalNumber>15</decimalNumber>
                     </numberLiteral>
                  </primaryExpression>
               </expression>
               <muldivOperator>
                  <mulOperator>*</mulOperator>
               </muldivOperator>
               <expression>
                  <primaryExpression>
                     <identifier>onePercent</identifier>
                  </primaryExpression>
               </expression>
            </expression>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>uint256</elementaryTypeName>
            </typeName>
            <constantType>constant</constantType>
            <identifier>HOLDERS_AMOUNT</identifier>=<expression>
               <expression>
                  <primaryExpression>
                     <numberLiteral>
                        <decimalNumber>60</decimalNumber>
                     </numberLiteral>
                  </primaryExpression>
               </expression>
               <muldivOperator>
                  <mulOperator>*</mulOperator>
               </muldivOperator>
               <expression>
                  <primaryExpression>
                     <identifier>onePercent</identifier>
                  </primaryExpression>
               </expression>
            </expression>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>uint256</elementaryTypeName>
            </typeName>
            <constantType>constant</constantType>
            <identifier>RESERVE_AMOUNT</identifier>=<expression>
               <expression>
                  <primaryExpression>
                     <numberLiteral>
                        <decimalNumber>20</decimalNumber>
                     </numberLiteral>
                  </primaryExpression>
               </expression>
               <muldivOperator>
                  <mulOperator>*</mulOperator>
               </muldivOperator>
               <expression>
                  <primaryExpression>
                     <identifier>onePercent</identifier>
                  </primaryExpression>
               </expression>
            </expression>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>uint256</elementaryTypeName>
            </typeName>
            <constantType>constant</constantType>
            <identifier>INITIAL_AMOUNT</identifier>=<expression>
               <expression>
                  <primaryExpression>
                     <numberLiteral>
                        <decimalNumber>100</decimalNumber>
                     </numberLiteral>
                  </primaryExpression>
               </expression>
               <muldivOperator>
                  <mulOperator>*</mulOperator>
               </muldivOperator>
               <expression>
                  <primaryExpression>
                     <identifier>onePercent</identifier>
                  </primaryExpression>
               </expression>
            </expression>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>uint256</elementaryTypeName>
            </typeName>
            <constantType>constant</constantType>
            <identifier>BONUS_AMOUNT</identifier>=<expression>
               <expression>
                  <primaryExpression>
                     <numberLiteral>
                        <decimalNumber>20</decimalNumber>
                     </numberLiteral>
                  </primaryExpression>
               </expression>
               <muldivOperator>
                  <mulOperator>*</mulOperator>
               </muldivOperator>
               <expression>
                  <primaryExpression>
                     <identifier>onePercent</identifier>
                  </primaryExpression>
               </expression>
            </expression>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>uint256</elementaryTypeName>
            </typeName>
            <visibleType>public</visibleType>
            <identifier>advisorsAllocatedAmount</identifier>=<expression>
               <primaryExpression>
                  <numberLiteral>
                     <decimalNumber>0</decimalNumber>
                  </numberLiteral>
               </primaryExpression>
            </expression>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>uint256</elementaryTypeName>
            </typeName>
            <visibleType>public</visibleType>
            <identifier>foundersAllocatedAmount</identifier>=<expression>
               <primaryExpression>
                  <numberLiteral>
                     <decimalNumber>0</decimalNumber>
                  </numberLiteral>
               </primaryExpression>
            </expression>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>uint256</elementaryTypeName>
            </typeName>
            <visibleType>public</visibleType>
            <identifier>holdersAllocatedAmount</identifier>=<expression>
               <primaryExpression>
                  <numberLiteral>
                     <decimalNumber>0</decimalNumber>
                  </numberLiteral>
               </primaryExpression>
            </expression>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <typeName>
                  <elementaryTypeName>address</elementaryTypeName>
               </typeName>[]</typeName>
            <identifier>initialHolders</identifier>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <mappingSt>mapping(<typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>=&gt;<typeName>
                     <mappingSt>mapping(<typeName>
                           <elementaryTypeName>address</elementaryTypeName>
                        </typeName>=&gt;<typeName>
                           <elementaryTypeName>bool</elementaryTypeName>
                        </typeName>)</mappingSt>
                  </typeName>)</mappingSt>
            </typeName>
            <identifier>bonusNotDistributed</identifier>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <eventDefinition>event<identifier>Allocate</identifier>
            <indexedParameterList>(<indexedParameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>_address</identifier>
               </indexedParameter>,<indexedParameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>_value</identifier>
               </indexedParameter>)</indexedParameterList>;</eventDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>Legolas</identifier>
            <parameterList>()</parameterList>
            <functionCall>
               <functionName>
                  <identifier>EIP20</identifier>
               </functionName>
               <callArguments>
                  <tupleExpression>(<expression>
                        <expression>
                           <primaryExpression>
                              <identifier>INITIAL_AMOUNT</identifier>
                           </primaryExpression>
                        </expression>
                        <plusminusOperator>
                           <plusOperator>+</plusOperator>
                        </plusminusOperator>
                        <expression>
                           <primaryExpression>
                              <identifier>BONUS_AMOUNT</identifier>
                           </primaryExpression>
                        </expression>
                     </expression>,<expression>
                        <primaryExpression>
                           <identifier>NAME</identifier>
                        </primaryExpression>
                     </expression>,<expression>
                        <primaryExpression>
                           <identifier>DECIMALS</identifier>
                        </primaryExpression>
                     </expression>,<expression>
                        <primaryExpression>
                           <identifier>SYMBOL</identifier>
                        </primaryExpression>
                     </expression>)</tupleExpression>
               </callArguments>
            </functionCall>
            <visibleType>public</visibleType>
            <block>{}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>allocate</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>_address</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>_amount</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint8</elementaryTypeName>
                  </typeName>
                  <identifier>_type</identifier>
               </parameter>)</parameterList>
            <visibleType>public</visibleType>
            <identifier>onlyOwner</identifier>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>bool</elementaryTypeName>
                     </typeName>
                     <identifier>success</identifier>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>allocations</identifier>
                                          </primaryExpression>
                                       </expression>[<expression>
                                          <primaryExpression>
                                             <identifier>_address</identifier>
                                          </primaryExpression>
                                       </expression>]</expression>
                                    <comparison>==</comparison>
                                    <expression>
                                       <primaryExpression>
                                          <numberLiteral>
                                             <decimalNumber>0</decimalNumber>
                                          </numberLiteral>
                                       </primaryExpression>
                                    </expression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <ifStatement>if(<condition>
                        <expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>_type</identifier>
                              </primaryExpression>
                           </expression>
                           <comparison>==</comparison>
                           <expression>
                              <primaryExpression>
                                 <numberLiteral>
                                    <decimalNumber>0</decimalNumber>
                                 </numberLiteral>
                              </primaryExpression>
                           </expression>
                        </expression>
                     </condition>)<statement>
                        <block>{<statement>
                              <expressionStatement>
                                 <expression>
                                    <functionCall>
                                       <functionName>
                                          <identifier>require</identifier>
                                       </functionName>
                                       <callArguments>
                                          <tupleExpression>(<expression>
                                                <expression>
                                                   <expression>
                                                      <primaryExpression>
                                                         <identifier>advisorsAllocatedAmount</identifier>
                                                      </primaryExpression>
                                                   </expression>
                                                   <plusminusOperator>
                                                      <plusOperator>+</plusOperator>
                                                   </plusminusOperator>
                                                   <expression>
                                                      <primaryExpression>
                                                         <identifier>_amount</identifier>
                                                      </primaryExpression>
                                                   </expression>
                                                </expression>&lt;=<expression>
                                                   <primaryExpression>
                                                      <identifier>ADVISORS_AMOUNT</identifier>
                                                   </primaryExpression>
                                                </expression>
                                             </expression>)</tupleExpression>
                                       </callArguments>
                                    </functionCall>
                                 </expression>
                              </expressionStatement>;</statement>
                           <statement>
                              <expressionStatement>
                                 <expression>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>advisorsAllocatedAmount</identifier>
                                       </primaryExpression>
                                    </expression>
                                    <lvalueOperator>
                                       <plusLvalueOperator>+=</plusLvalueOperator>
                                    </lvalueOperator>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>_amount</identifier>
                                       </primaryExpression>
                                    </expression>
                                 </expression>
                              </expressionStatement>;</statement>
                           <statement>
                              <expressionStatement>
                                 <expression>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>advisors</identifier>
                                          </primaryExpression>
                                       </expression>[<expression>
                                          <primaryExpression>
                                             <identifier>_address</identifier>
                                          </primaryExpression>
                                       </expression>]</expression>=<expression>
                                       <primaryExpression>
                                          <booleanLiteral>true</booleanLiteral>
                                       </primaryExpression>
                                    </expression>
                                 </expression>
                              </expressionStatement>;</statement>}</block>
                     </statement>else<statement>
                        <ifStatement>if(<condition>
                              <expression>
                                 <expression>
                                    <primaryExpression>
                                       <identifier>_type</identifier>
                                    </primaryExpression>
                                 </expression>
                                 <comparison>==</comparison>
                                 <expression>
                                    <primaryExpression>
                                       <numberLiteral>
                                          <decimalNumber>1</decimalNumber>
                                       </numberLiteral>
                                    </primaryExpression>
                                 </expression>
                              </expression>
                           </condition>)<statement>
                              <block>{<statement>
                                    <expressionStatement>
                                       <expression>
                                          <functionCall>
                                             <functionName>
                                                <identifier>require</identifier>
                                             </functionName>
                                             <callArguments>
                                                <tupleExpression>(<expression>
                                                      <expression>
                                                         <expression>
                                                            <primaryExpression>
                                                               <identifier>foundersAllocatedAmount</identifier>
                                                            </primaryExpression>
                                                         </expression>
                                                         <plusminusOperator>
                                                            <plusOperator>+</plusOperator>
                                                         </plusminusOperator>
                                                         <expression>
                                                            <primaryExpression>
                                                               <identifier>_amount</identifier>
                                                            </primaryExpression>
                                                         </expression>
                                                      </expression>&lt;=<expression>
                                                         <primaryExpression>
                                                            <identifier>FOUNDERS_AMOUNT</identifier>
                                                         </primaryExpression>
                                                      </expression>
                                                   </expression>)</tupleExpression>
                                             </callArguments>
                                          </functionCall>
                                       </expression>
                                    </expressionStatement>;</statement>
                                 <statement>
                                    <expressionStatement>
                                       <expression>
                                          <expression>
                                             <primaryExpression>
                                                <identifier>foundersAllocatedAmount</identifier>
                                             </primaryExpression>
                                          </expression>
                                          <lvalueOperator>
                                             <plusLvalueOperator>+=</plusLvalueOperator>
                                          </lvalueOperator>
                                          <expression>
                                             <primaryExpression>
                                                <identifier>_amount</identifier>
                                             </primaryExpression>
                                          </expression>
                                       </expression>
                                    </expressionStatement>;</statement>
                                 <statement>
                                    <expressionStatement>
                                       <expression>
                                          <expression>
                                             <expression>
                                                <primaryExpression>
                                                   <identifier>founders</identifier>
                                                </primaryExpression>
                                             </expression>[<expression>
                                                <primaryExpression>
                                                   <identifier>_address</identifier>
                                                </primaryExpression>
                                             </expression>]</expression>=<expression>
                                             <primaryExpression>
                                                <booleanLiteral>true</booleanLiteral>
                                             </primaryExpression>
                                          </expression>
                                       </expression>
                                    </expressionStatement>;</statement>}</block>
                           </statement>else<statement>
                              <block>{<statement>
                                    <expressionStatement>
                                       <expression>
                                          <functionCall>
                                             <functionName>
                                                <identifier>require</identifier>
                                             </functionName>
                                             <callArguments>
                                                <tupleExpression>(<expression>
                                                      <expression>
                                                         <expression>
                                                            <primaryExpression>
                                                               <identifier>holdersAllocatedAmount</identifier>
                                                            </primaryExpression>
                                                         </expression>
                                                         <plusminusOperator>
                                                            <plusOperator>+</plusOperator>
                                                         </plusminusOperator>
                                                         <expression>
                                                            <primaryExpression>
                                                               <identifier>_amount</identifier>
                                                            </primaryExpression>
                                                         </expression>
                                                      </expression>&lt;=<expression>
                                                         <expression>
                                                            <primaryExpression>
                                                               <identifier>HOLDERS_AMOUNT</identifier>
                                                            </primaryExpression>
                                                         </expression>
                                                         <plusminusOperator>
                                                            <plusOperator>+</plusOperator>
                                                         </plusminusOperator>
                                                         <expression>
                                                            <primaryExpression>
                                                               <identifier>RESERVE_AMOUNT</identifier>
                                                            </primaryExpression>
                                                         </expression>
                                                      </expression>
                                                   </expression>)</tupleExpression>
                                             </callArguments>
                                          </functionCall>
                                       </expression>
                                    </expressionStatement>;</statement>
                                 <statement>
                                    <expressionStatement>
                                       <expression>
                                          <expression>
                                             <primaryExpression>
                                                <identifier>holdersAllocatedAmount</identifier>
                                             </primaryExpression>
                                          </expression>
                                          <lvalueOperator>
                                             <plusLvalueOperator>+=</plusLvalueOperator>
                                          </lvalueOperator>
                                          <expression>
                                             <primaryExpression>
                                                <identifier>_amount</identifier>
                                             </primaryExpression>
                                          </expression>
                                       </expression>
                                    </expressionStatement>;</statement>}</block>
                           </statement>
                        </ifStatement>
                     </statement>
                  </ifStatement>
               </statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>allocations</identifier>
                              </primaryExpression>
                           </expression>[<expression>
                              <primaryExpression>
                                 <identifier>_address</identifier>
                              </primaryExpression>
                           </expression>]</expression>=<expression>
                           <primaryExpression>
                              <identifier>_amount</identifier>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>initialAllocations</identifier>
                              </primaryExpression>
                           </expression>[<expression>
                              <primaryExpression>
                                 <identifier>_address</identifier>
                              </primaryExpression>
                           </expression>]</expression>=<expression>
                           <primaryExpression>
                              <identifier>_amount</identifier>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>balances</identifier>
                              </primaryExpression>
                           </expression>[<expression>
                              <primaryExpression>
                                 <identifier>_address</identifier>
                              </primaryExpression>
                           </expression>]</expression>
                        <lvalueOperator>
                           <plusLvalueOperator>+=</plusLvalueOperator>
                        </lvalueOperator>
                        <expression>
                           <primaryExpression>
                              <identifier>_amount</identifier>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <forStatement>for(<expression>
                        <expression>
                           <variableDeclaration>
                              <typeName>
                                 <elementaryTypeName>uint8</elementaryTypeName>
                              </typeName>
                              <identifier>i</identifier>
                           </variableDeclaration>
                        </expression>=<expression>
                           <primaryExpression>
                              <numberLiteral>
                                 <decimalNumber>0</decimalNumber>
                              </numberLiteral>
                           </primaryExpression>
                        </expression>
                     </expression>;<condition>
                        <expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>i</identifier>
                              </primaryExpression>
                           </expression>&lt;<expression>
                              <primaryExpression>
                                 <numberLiteral>
                                    <decimalNumber>4</decimalNumber>
                                 </numberLiteral>
                              </primaryExpression>
                           </expression>
                        </expression>
                     </condition>;<expression>
                        <expression>
                           <primaryExpression>
                              <identifier>i</identifier>
                           </primaryExpression>
                        </expression>
                        <twoPlusMinusOperator>
                           <incrementOperator>++</incrementOperator>
                        </twoPlusMinusOperator>
                     </expression>)<statement>
                        <block>{<statement>
                              <expressionStatement>
                                 <expression>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>unspentAmounts</identifier>
                                          </primaryExpression>
                                       </expression>[<expression>
                                          <expression>
                                             <primaryExpression>
                                                <identifier>BONUS_DATES</identifier>
                                             </primaryExpression>
                                          </expression>[<expression>
                                             <primaryExpression>
                                                <identifier>i</identifier>
                                             </primaryExpression>
                                          </expression>]</expression>]</expression>
                                    <lvalueOperator>
                                       <plusLvalueOperator>+=</plusLvalueOperator>
                                    </lvalueOperator>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>_amount</identifier>
                                       </primaryExpression>
                                    </expression>
                                 </expression>
                              </expressionStatement>;</statement>
                           <statement>
                              <expressionStatement>
                                 <expression>
                                    <expression>
                                       <expression>
                                          <expression>
                                             <primaryExpression>
                                                <identifier>eligibleForBonus</identifier>
                                             </primaryExpression>
                                          </expression>[<expression>
                                             <expression>
                                                <primaryExpression>
                                                   <identifier>BONUS_DATES</identifier>
                                                </primaryExpression>
                                             </expression>[<expression>
                                                <primaryExpression>
                                                   <identifier>i</identifier>
                                                </primaryExpression>
                                             </expression>]</expression>]</expression>[<expression>
                                          <primaryExpression>
                                             <identifier>_address</identifier>
                                          </primaryExpression>
                                       </expression>]</expression>=<expression>
                                       <primaryExpression>
                                          <booleanLiteral>true</booleanLiteral>
                                       </primaryExpression>
                                    </expression>
                                 </expression>
                              </expressionStatement>;</statement>
                           <statement>
                              <expressionStatement>
                                 <expression>
                                    <expression>
                                       <expression>
                                          <expression>
                                             <primaryExpression>
                                                <identifier>bonusNotDistributed</identifier>
                                             </primaryExpression>
                                          </expression>[<expression>
                                             <expression>
                                                <primaryExpression>
                                                   <identifier>BONUS_DATES</identifier>
                                                </primaryExpression>
                                             </expression>[<expression>
                                                <primaryExpression>
                                                   <identifier>i</identifier>
                                                </primaryExpression>
                                             </expression>]</expression>]</expression>[<expression>
                                          <primaryExpression>
                                             <identifier>_address</identifier>
                                          </primaryExpression>
                                       </expression>]</expression>=<expression>
                                       <primaryExpression>
                                          <booleanLiteral>true</booleanLiteral>
                                       </primaryExpression>
                                    </expression>
                                 </expression>
                              </expressionStatement>;</statement>}</block>
                     </statement>
                  </forStatement>
               </statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>initialHolders</identifier>
                           </primaryExpression>
                        </expression>.<functionCall>
                           <functionName>
                              <identifier>push</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <primaryExpression>
                                       <identifier>_address</identifier>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>Allocate</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <primaryExpression>
                                       <identifier>_address</identifier>
                                    </primaryExpression>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <identifier>_amount</identifier>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <returnStatement>return<expression>
                        <primaryExpression>
                           <booleanLiteral>true</booleanLiteral>
                        </primaryExpression>
                     </expression>
                  </returnStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>claimBonus</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>_address</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>_bonusDate</identifier>
               </parameter>)</parameterList>
            <visibleType>public</visibleType>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>bool</elementaryTypeName>
                     </typeName>
                     <identifier>success</identifier>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>_bonusDate</identifier>
                                       </primaryExpression>
                                    </expression>&lt;=<expression>
                                       <environmentalVariable>now</environmentalVariable>
                                    </expression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>bonusNotDistributed</identifier>
                                          </primaryExpression>
                                       </expression>[<expression>
                                          <primaryExpression>
                                             <identifier>_bonusDate</identifier>
                                          </primaryExpression>
                                       </expression>]</expression>[<expression>
                                       <primaryExpression>
                                          <identifier>_address</identifier>
                                       </primaryExpression>
                                    </expression>]</expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>eligibleForBonus</identifier>
                                          </primaryExpression>
                                       </expression>[<expression>
                                          <primaryExpression>
                                             <identifier>_bonusDate</identifier>
                                          </primaryExpression>
                                       </expression>]</expression>[<expression>
                                       <primaryExpression>
                                          <identifier>_address</identifier>
                                       </primaryExpression>
                                    </expression>]</expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <variableDeclaration>
                              <typeName>
                                 <elementaryTypeName>uint256</elementaryTypeName>
                              </typeName>
                              <identifier>bonusByLgo</identifier>
                           </variableDeclaration>
                        </expression>=<expression>
                           <expression>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>BONUS_AMOUNT</identifier>
                                       </primaryExpression>
                                    </expression>
                                    <muldivOperator>
                                       <divOperator>/</divOperator>
                                    </muldivOperator>
                                    <expression>
                                       <primaryExpression>
                                          <numberLiteral>
                                             <decimalNumber>4</decimalNumber>
                                          </numberLiteral>
                                       </primaryExpression>
                                    </expression>
                                 </expression>)</tupleExpression>
                           </expression>
                           <muldivOperator>
                              <divOperator>/</divOperator>
                           </muldivOperator>
                           <expression>
                              <expression>
                                 <primaryExpression>
                                    <identifier>unspentAmounts</identifier>
                                 </primaryExpression>
                              </expression>[<expression>
                                 <primaryExpression>
                                    <identifier>_bonusDate</identifier>
                                 </primaryExpression>
                              </expression>]</expression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <variableDeclaration>
                              <typeName>
                                 <elementaryTypeName>uint256</elementaryTypeName>
                              </typeName>
                              <identifier>holderBonus</identifier>
                           </variableDeclaration>
                        </expression>=<expression>
                           <expression>
                              <expression>
                                 <primaryExpression>
                                    <identifier>initialAllocations</identifier>
                                 </primaryExpression>
                              </expression>[<expression>
                                 <primaryExpression>
                                    <identifier>_address</identifier>
                                 </primaryExpression>
                              </expression>]</expression>
                           <muldivOperator>
                              <mulOperator>*</mulOperator>
                           </muldivOperator>
                           <expression>
                              <primaryExpression>
                                 <identifier>bonusByLgo</identifier>
                              </primaryExpression>
                           </expression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>balances</identifier>
                              </primaryExpression>
                           </expression>[<expression>
                              <primaryExpression>
                                 <identifier>_address</identifier>
                              </primaryExpression>
                           </expression>]</expression>
                        <lvalueOperator>
                           <plusLvalueOperator>+=</plusLvalueOperator>
                        </lvalueOperator>
                        <expression>
                           <primaryExpression>
                              <identifier>holderBonus</identifier>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>allocations</identifier>
                              </primaryExpression>
                           </expression>[<expression>
                              <primaryExpression>
                                 <identifier>_address</identifier>
                              </primaryExpression>
                           </expression>]</expression>
                        <lvalueOperator>
                           <plusLvalueOperator>+=</plusLvalueOperator>
                        </lvalueOperator>
                        <expression>
                           <primaryExpression>
                              <identifier>holderBonus</identifier>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <expression>
                              <expression>
                                 <primaryExpression>
                                    <identifier>bonusNotDistributed</identifier>
                                 </primaryExpression>
                              </expression>[<expression>
                                 <primaryExpression>
                                    <identifier>_bonusDate</identifier>
                                 </primaryExpression>
                              </expression>]</expression>[<expression>
                              <primaryExpression>
                                 <identifier>_address</identifier>
                              </primaryExpression>
                           </expression>]</expression>=<expression>
                           <primaryExpression>
                              <booleanLiteral>false</booleanLiteral>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <returnStatement>return<expression>
                        <primaryExpression>
                           <booleanLiteral>true</booleanLiteral>
                        </primaryExpression>
                     </expression>
                  </returnStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>}</contractDefinition>&lt;EOF&gt;</sourceUnit>