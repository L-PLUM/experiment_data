<?xml version="1.0" encoding="UTF-8"?>
<sourceUnit>
   <pragmaDirective>pragma<pragmaSolidity>solidity<version>
            <versionLiteral>0.4.19</versionLiteral>
         </version>
      </pragmaSolidity>;</pragmaDirective>
   <contractDefinition>contract<identifier>UnboundedRegularToken</identifier>is<inheritanceSpecifier>
         <userDefinedTypeName>
            <identifier>RegularToken</identifier>
         </userDefinedTypeName>
      </inheritanceSpecifier>{<contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>uint</elementaryTypeName>
            </typeName>
            <constantType>constant</constantType>
            <identifier>MAX_UINT</identifier>=<expression>
               <expression>
                  <expression>
                     <primaryExpression>
                        <numberLiteral>
                           <decimalNumber>2</decimalNumber>
                        </numberLiteral>
                     </primaryExpression>
                  </expression>
                  <powerOperator>**</powerOperator>
                  <expression>
                     <primaryExpression>
                        <numberLiteral>
                           <decimalNumber>256</decimalNumber>
                        </numberLiteral>
                     </primaryExpression>
                  </expression>
               </expression>
               <plusminusOperator>
                  <minusOperator>-</minusOperator>
               </plusminusOperator>
               <expression>
                  <primaryExpression>
                     <numberLiteral>
                        <decimalNumber>1</decimalNumber>
                     </numberLiteral>
                  </primaryExpression>
               </expression>
            </expression>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <mappingSt>mapping(<typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>=&gt;<typeName>
                     <elementaryTypeName>uint</elementaryTypeName>
                  </typeName>)</mappingSt>
            </typeName>
            <identifier>balances</identifier>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <mappingSt>mapping(<typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>=&gt;<typeName>
                     <mappingSt>mapping(<typeName>
                           <elementaryTypeName>address</elementaryTypeName>
                        </typeName>=&gt;<typeName>
                           <elementaryTypeName>uint</elementaryTypeName>
                        </typeName>)</mappingSt>
                  </typeName>)</mappingSt>
            </typeName>
            <identifier>allowed</identifier>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>transferFrom</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>_from</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>_to</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint</elementaryTypeName>
                  </typeName>
                  <identifier>_value</identifier>
               </parameter>)</parameterList>
            <visibleType>public</visibleType>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>bool</elementaryTypeName>
                     </typeName>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <variableDeclaration>
                              <typeName>
                                 <elementaryTypeName>uint</elementaryTypeName>
                              </typeName>
                              <identifier>allowance</identifier>
                           </variableDeclaration>
                        </expression>=<expression>
                           <expression>
                              <expression>
                                 <primaryExpression>
                                    <identifier>allowed</identifier>
                                 </primaryExpression>
                              </expression>[<expression>
                                 <primaryExpression>
                                    <identifier>_from</identifier>
                                 </primaryExpression>
                              </expression>]</expression>[<expression>
                              <environmentalVariable>msg.sender</environmentalVariable>
                           </expression>]</expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <ifStatement>if(<condition>
                        <expression>
                           <expression>
                              <expression>
                                 <expression>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>balances</identifier>
                                       </primaryExpression>
                                    </expression>[<expression>
                                       <primaryExpression>
                                          <identifier>_from</identifier>
                                       </primaryExpression>
                                    </expression>]</expression>&gt;=<expression>
                                    <primaryExpression>
                                       <identifier>_value</identifier>
                                    </primaryExpression>
                                 </expression>
                              </expression>&amp;&amp;<expression>
                                 <expression>
                                    <primaryExpression>
                                       <identifier>allowance</identifier>
                                    </primaryExpression>
                                 </expression>&gt;=<expression>
                                    <primaryExpression>
                                       <identifier>_value</identifier>
                                    </primaryExpression>
                                 </expression>
                              </expression>
                           </expression>&amp;&amp;<expression>
                              <expression>
                                 <expression>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>balances</identifier>
                                       </primaryExpression>
                                    </expression>[<expression>
                                       <primaryExpression>
                                          <identifier>_to</identifier>
                                       </primaryExpression>
                                    </expression>]</expression>
                                 <plusminusOperator>
                                    <plusOperator>+</plusOperator>
                                 </plusminusOperator>
                                 <expression>
                                    <primaryExpression>
                                       <identifier>_value</identifier>
                                    </primaryExpression>
                                 </expression>
                              </expression>&gt;=<expression>
                                 <expression>
                                    <primaryExpression>
                                       <identifier>balances</identifier>
                                    </primaryExpression>
                                 </expression>[<expression>
                                    <primaryExpression>
                                       <identifier>_to</identifier>
                                    </primaryExpression>
                                 </expression>]</expression>
                           </expression>
                        </expression>
                     </condition>)<statement>
                        <block>{<statement>
                              <expressionStatement>
                                 <expression>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>balances</identifier>
                                          </primaryExpression>
                                       </expression>[<expression>
                                          <primaryExpression>
                                             <identifier>_to</identifier>
                                          </primaryExpression>
                                       </expression>]</expression>
                                    <lvalueOperator>
                                       <plusLvalueOperator>+=</plusLvalueOperator>
                                    </lvalueOperator>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>_value</identifier>
                                       </primaryExpression>
                                    </expression>
                                 </expression>
                              </expressionStatement>;</statement>
                           <statement>
                              <expressionStatement>
                                 <expression>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>balances</identifier>
                                          </primaryExpression>
                                       </expression>[<expression>
                                          <primaryExpression>
                                             <identifier>_from</identifier>
                                          </primaryExpression>
                                       </expression>]</expression>
                                    <lvalueOperator>
                                       <minusLvalueOperator>-=</minusLvalueOperator>
                                    </lvalueOperator>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>_value</identifier>
                                       </primaryExpression>
                                    </expression>
                                 </expression>
                              </expressionStatement>;</statement>
                           <statement>
                              <ifStatement>if(<condition>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>allowance</identifier>
                                          </primaryExpression>
                                       </expression>&lt;<expression>
                                          <primaryExpression>
                                             <identifier>MAX_UINT</identifier>
                                          </primaryExpression>
                                       </expression>
                                    </expression>
                                 </condition>)<statement>
                                    <block>{<statement>
                                          <expressionStatement>
                                             <expression>
                                                <expression>
                                                   <expression>
                                                      <expression>
                                                         <primaryExpression>
                                                            <identifier>allowed</identifier>
                                                         </primaryExpression>
                                                      </expression>[<expression>
                                                         <primaryExpression>
                                                            <identifier>_from</identifier>
                                                         </primaryExpression>
                                                      </expression>]</expression>[<expression>
                                                      <environmentalVariable>msg.sender</environmentalVariable>
                                                   </expression>]</expression>
                                                <lvalueOperator>
                                                   <minusLvalueOperator>-=</minusLvalueOperator>
                                                </lvalueOperator>
                                                <expression>
                                                   <primaryExpression>
                                                      <identifier>_value</identifier>
                                                   </primaryExpression>
                                                </expression>
                                             </expression>
                                          </expressionStatement>;</statement>}</block>
                                 </statement>
                              </ifStatement>
                           </statement>
                           <statement>
                              <expressionStatement>
                                 <expression>
                                    <functionCall>
                                       <functionName>
                                          <identifier>Transfer</identifier>
                                       </functionName>
                                       <callArguments>
                                          <tupleExpression>(<expression>
                                                <primaryExpression>
                                                   <identifier>_from</identifier>
                                                </primaryExpression>
                                             </expression>,<expression>
                                                <primaryExpression>
                                                   <identifier>_to</identifier>
                                                </primaryExpression>
                                             </expression>,<expression>
                                                <primaryExpression>
                                                   <identifier>_value</identifier>
                                                </primaryExpression>
                                             </expression>)</tupleExpression>
                                       </callArguments>
                                    </functionCall>
                                 </expression>
                              </expressionStatement>;</statement>
                           <statement>
                              <returnStatement>return<expression>
                                    <primaryExpression>
                                       <booleanLiteral>true</booleanLiteral>
                                    </primaryExpression>
                                 </expression>
                              </returnStatement>;</statement>}</block>
                     </statement>else<statement>
                        <block>{<statement>
                              <returnStatement>return<expression>
                                    <primaryExpression>
                                       <booleanLiteral>false</booleanLiteral>
                                    </primaryExpression>
                                 </expression>
                              </returnStatement>;</statement>}</block>
                     </statement>
                  </ifStatement>
               </statement>}</block>
         </functionDefinition>
      </contractPartDefinition>}</contractDefinition>&lt;EOF&gt;</sourceUnit>