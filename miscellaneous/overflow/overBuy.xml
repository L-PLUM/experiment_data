<?xml version="1.0" encoding="UTF-8"?>
<sourceUnit>
   <pragmaDirective>pragma<pragmaSolidity>solidity<version>
            <versionOperator>^</versionOperator>
            <versionLiteral>0.4.16</versionLiteral>
         </version>
      </pragmaSolidity>;</pragmaDirective>
   <contractDefinition>contract<identifier>SafeMath</identifier>{<contractPartDefinition>
         <functionDefinition>function<identifier>safeMul</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>uint</elementaryTypeName>
                  </typeName>
                  <identifier>a</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint</elementaryTypeName>
                  </typeName>
                  <identifier>b</identifier>
               </parameter>)</parameterList>
            <visibleType>internal</visibleType>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>uint</elementaryTypeName>
                     </typeName>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <variableDeclaration>
                              <typeName>
                                 <elementaryTypeName>uint</elementaryTypeName>
                              </typeName>
                              <identifier>c</identifier>
                           </variableDeclaration>
                        </expression>=<expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>a</identifier>
                              </primaryExpression>
                           </expression>
                           <muldivOperator>
                              <mulOperator>*</mulOperator>
                           </muldivOperator>
                           <expression>
                              <primaryExpression>
                                 <identifier>b</identifier>
                              </primaryExpression>
                           </expression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>assert</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>a</identifier>
                                          </primaryExpression>
                                       </expression>
                                       <comparison>==</comparison>
                                       <expression>
                                          <primaryExpression>
                                             <numberLiteral>
                                                <decimalNumber>0</decimalNumber>
                                             </numberLiteral>
                                          </primaryExpression>
                                       </expression>
                                    </expression>||<expression>
                                       <expression>
                                          <expression>
                                             <primaryExpression>
                                                <identifier>c</identifier>
                                             </primaryExpression>
                                          </expression>
                                          <muldivOperator>
                                             <divOperator>/</divOperator>
                                          </muldivOperator>
                                          <expression>
                                             <primaryExpression>
                                                <identifier>a</identifier>
                                             </primaryExpression>
                                          </expression>
                                       </expression>
                                       <comparison>==</comparison>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>b</identifier>
                                          </primaryExpression>
                                       </expression>
                                    </expression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <returnStatement>return<expression>
                        <primaryExpression>
                           <identifier>c</identifier>
                        </primaryExpression>
                     </expression>
                  </returnStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>safeSub</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>uint</elementaryTypeName>
                  </typeName>
                  <identifier>a</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint</elementaryTypeName>
                  </typeName>
                  <identifier>b</identifier>
               </parameter>)</parameterList>
            <visibleType>internal</visibleType>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>uint</elementaryTypeName>
                     </typeName>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>assert</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>b</identifier>
                                       </primaryExpression>
                                    </expression>&lt;=<expression>
                                       <primaryExpression>
                                          <identifier>a</identifier>
                                       </primaryExpression>
                                    </expression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <returnStatement>return<expression>
                        <expression>
                           <primaryExpression>
                              <identifier>a</identifier>
                           </primaryExpression>
                        </expression>
                        <plusminusOperator>
                           <minusOperator>-</minusOperator>
                        </plusminusOperator>
                        <expression>
                           <primaryExpression>
                              <identifier>b</identifier>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </returnStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>safeAdd</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>uint</elementaryTypeName>
                  </typeName>
                  <identifier>a</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint</elementaryTypeName>
                  </typeName>
                  <identifier>b</identifier>
               </parameter>)</parameterList>
            <visibleType>internal</visibleType>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>uint</elementaryTypeName>
                     </typeName>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <variableDeclaration>
                              <typeName>
                                 <elementaryTypeName>uint</elementaryTypeName>
                              </typeName>
                              <identifier>c</identifier>
                           </variableDeclaration>
                        </expression>=<expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>a</identifier>
                              </primaryExpression>
                           </expression>
                           <plusminusOperator>
                              <plusOperator>+</plusOperator>
                           </plusminusOperator>
                           <expression>
                              <primaryExpression>
                                 <identifier>b</identifier>
                              </primaryExpression>
                           </expression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>assert</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>c</identifier>
                                          </primaryExpression>
                                       </expression>&gt;=<expression>
                                          <primaryExpression>
                                             <identifier>a</identifier>
                                          </primaryExpression>
                                       </expression>
                                    </expression>&amp;&amp;<expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>c</identifier>
                                          </primaryExpression>
                                       </expression>&gt;=<expression>
                                          <primaryExpression>
                                             <identifier>b</identifier>
                                          </primaryExpression>
                                       </expression>
                                    </expression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <returnStatement>return<expression>
                        <primaryExpression>
                           <identifier>c</identifier>
                        </primaryExpression>
                     </expression>
                  </returnStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>}</contractDefinition>
   <contractDefinition>contract<identifier>Token</identifier>is<inheritanceSpecifier>
         <userDefinedTypeName>
            <identifier>SafeMath</identifier>
         </userDefinedTypeName>
      </inheritanceSpecifier>{<contractPartDefinition>
         <functionDefinition>function<identifier>totalSupply</identifier>
            <parameterList>()</parameterList>
            <stateMutability>
               <constantType>constant</constantType>
            </stateMutability>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>uint256</elementaryTypeName>
                     </typeName>
                     <identifier>supply</identifier>
                  </parameter>)</parameterList>
            </returnsParameters>;</functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>balanceOf</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>_owner</identifier>
               </parameter>)</parameterList>
            <stateMutability>
               <constantType>constant</constantType>
            </stateMutability>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>uint256</elementaryTypeName>
                     </typeName>
                     <identifier>balance</identifier>
                  </parameter>)</parameterList>
            </returnsParameters>;</functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>transfer</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>_to</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>_value</identifier>
               </parameter>)</parameterList>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>bool</elementaryTypeName>
                     </typeName>
                  </parameter>)</parameterList>
            </returnsParameters>;</functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>transferFrom</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>_from</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>_to</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>_value</identifier>
               </parameter>)</parameterList>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>bool</elementaryTypeName>
                     </typeName>
                  </parameter>)</parameterList>
            </returnsParameters>;</functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>approve</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>_spender</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>_value</identifier>
               </parameter>)</parameterList>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>bool</elementaryTypeName>
                     </typeName>
                     <identifier>success</identifier>
                  </parameter>)</parameterList>
            </returnsParameters>;</functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>allowance</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>_owner</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>_spender</identifier>
               </parameter>)</parameterList>
            <stateMutability>
               <constantType>constant</constantType>
            </stateMutability>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>uint256</elementaryTypeName>
                     </typeName>
                     <identifier>remaining</identifier>
                  </parameter>)</parameterList>
            </returnsParameters>;</functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <eventDefinition>event<identifier>Transfer</identifier>
            <indexedParameterList>(<indexedParameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>indexed<identifier>_from</identifier>
               </indexedParameter>,<indexedParameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>indexed<identifier>_to</identifier>
               </indexedParameter>,<indexedParameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>_value</identifier>
               </indexedParameter>)</indexedParameterList>;</eventDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <eventDefinition>event<identifier>Approval</identifier>
            <indexedParameterList>(<indexedParameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>indexed<identifier>_owner</identifier>
               </indexedParameter>,<indexedParameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>indexed<identifier>_spender</identifier>
               </indexedParameter>,<indexedParameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>_value</identifier>
               </indexedParameter>)</indexedParameterList>;</eventDefinition>
      </contractPartDefinition>}</contractDefinition>
   <contractDefinition>contract<identifier>StdToken</identifier>is<inheritanceSpecifier>
         <userDefinedTypeName>
            <identifier>Token</identifier>
         </userDefinedTypeName>
      </inheritanceSpecifier>{<contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <mappingSt>mapping(<typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>=&gt;<typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>)</mappingSt>
            </typeName>
            <identifier>balances</identifier>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <mappingSt>mapping(<typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>=&gt;<typeName>
                     <mappingSt>mapping(<typeName>
                           <elementaryTypeName>address</elementaryTypeName>
                        </typeName>=&gt;<typeName>
                           <elementaryTypeName>uint256</elementaryTypeName>
                        </typeName>)</mappingSt>
                  </typeName>)</mappingSt>
            </typeName>
            <identifier>allowed</identifier>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>uint</elementaryTypeName>
            </typeName>
            <visibleType>public</visibleType>
            <identifier>supply</identifier>=<expression>
               <primaryExpression>
                  <numberLiteral>
                     <decimalNumber>0</decimalNumber>
                  </numberLiteral>
               </primaryExpression>
            </expression>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>transfer</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>_to</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>_value</identifier>
               </parameter>)</parameterList>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>bool</elementaryTypeName>
                     </typeName>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>balances</identifier>
                                          </primaryExpression>
                                       </expression>[<expression>
                                          <environmentalVariable>msg.sender</environmentalVariable>
                                       </expression>]</expression>&gt;=<expression>
                                       <primaryExpression>
                                          <identifier>_value</identifier>
                                       </primaryExpression>
                                    </expression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <expression>
                                          <expression>
                                             <primaryExpression>
                                                <identifier>balances</identifier>
                                             </primaryExpression>
                                          </expression>[<expression>
                                             <primaryExpression>
                                                <identifier>_to</identifier>
                                             </primaryExpression>
                                          </expression>]</expression>
                                       <plusminusOperator>
                                          <plusOperator>+</plusOperator>
                                       </plusminusOperator>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>_value</identifier>
                                          </primaryExpression>
                                       </expression>
                                    </expression>&gt;<expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>balances</identifier>
                                          </primaryExpression>
                                       </expression>[<expression>
                                          <primaryExpression>
                                             <identifier>_to</identifier>
                                          </primaryExpression>
                                       </expression>]</expression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>balances</identifier>
                              </primaryExpression>
                           </expression>[<expression>
                              <environmentalVariable>msg.sender</environmentalVariable>
                           </expression>]</expression>=<expression>
                           <functionCall>
                              <functionName>
                                 <identifier>safeSub</identifier>
                              </functionName>
                              <callArguments>
                                 <tupleExpression>(<expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>balances</identifier>
                                          </primaryExpression>
                                       </expression>[<expression>
                                          <environmentalVariable>msg.sender</environmentalVariable>
                                       </expression>]</expression>,<expression>
                                       <primaryExpression>
                                          <identifier>_value</identifier>
                                       </primaryExpression>
                                    </expression>)</tupleExpression>
                              </callArguments>
                           </functionCall>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>balances</identifier>
                              </primaryExpression>
                           </expression>[<expression>
                              <primaryExpression>
                                 <identifier>_to</identifier>
                              </primaryExpression>
                           </expression>]</expression>=<expression>
                           <functionCall>
                              <functionName>
                                 <identifier>safeAdd</identifier>
                              </functionName>
                              <callArguments>
                                 <tupleExpression>(<expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>balances</identifier>
                                          </primaryExpression>
                                       </expression>[<expression>
                                          <primaryExpression>
                                             <identifier>_to</identifier>
                                          </primaryExpression>
                                       </expression>]</expression>,<expression>
                                       <primaryExpression>
                                          <identifier>_value</identifier>
                                       </primaryExpression>
                                    </expression>)</tupleExpression>
                              </callArguments>
                           </functionCall>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>Transfer</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <environmentalVariable>msg.sender</environmentalVariable>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <identifier>_to</identifier>
                                    </primaryExpression>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <identifier>_value</identifier>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <returnStatement>return<expression>
                        <primaryExpression>
                           <booleanLiteral>true</booleanLiteral>
                        </primaryExpression>
                     </expression>
                  </returnStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>transferFrom</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>_from</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>_to</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>_value</identifier>
               </parameter>)</parameterList>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>bool</elementaryTypeName>
                     </typeName>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>balances</identifier>
                                          </primaryExpression>
                                       </expression>[<expression>
                                          <primaryExpression>
                                             <identifier>_from</identifier>
                                          </primaryExpression>
                                       </expression>]</expression>&gt;=<expression>
                                       <primaryExpression>
                                          <identifier>_value</identifier>
                                       </primaryExpression>
                                    </expression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <expression>
                                          <expression>
                                             <primaryExpression>
                                                <identifier>allowed</identifier>
                                             </primaryExpression>
                                          </expression>[<expression>
                                             <primaryExpression>
                                                <identifier>_from</identifier>
                                             </primaryExpression>
                                          </expression>]</expression>[<expression>
                                          <environmentalVariable>msg.sender</environmentalVariable>
                                       </expression>]</expression>&gt;=<expression>
                                       <primaryExpression>
                                          <identifier>_value</identifier>
                                       </primaryExpression>
                                    </expression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <expression>
                                          <expression>
                                             <primaryExpression>
                                                <identifier>balances</identifier>
                                             </primaryExpression>
                                          </expression>[<expression>
                                             <primaryExpression>
                                                <identifier>_to</identifier>
                                             </primaryExpression>
                                          </expression>]</expression>
                                       <plusminusOperator>
                                          <plusOperator>+</plusOperator>
                                       </plusminusOperator>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>_value</identifier>
                                          </primaryExpression>
                                       </expression>
                                    </expression>&gt;<expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>balances</identifier>
                                          </primaryExpression>
                                       </expression>[<expression>
                                          <primaryExpression>
                                             <identifier>_to</identifier>
                                          </primaryExpression>
                                       </expression>]</expression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>balances</identifier>
                              </primaryExpression>
                           </expression>[<expression>
                              <primaryExpression>
                                 <identifier>_to</identifier>
                              </primaryExpression>
                           </expression>]</expression>=<expression>
                           <functionCall>
                              <functionName>
                                 <identifier>safeAdd</identifier>
                              </functionName>
                              <callArguments>
                                 <tupleExpression>(<expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>balances</identifier>
                                          </primaryExpression>
                                       </expression>[<expression>
                                          <primaryExpression>
                                             <identifier>_to</identifier>
                                          </primaryExpression>
                                       </expression>]</expression>,<expression>
                                       <primaryExpression>
                                          <identifier>_value</identifier>
                                       </primaryExpression>
                                    </expression>)</tupleExpression>
                              </callArguments>
                           </functionCall>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>balances</identifier>
                              </primaryExpression>
                           </expression>[<expression>
                              <primaryExpression>
                                 <identifier>_from</identifier>
                              </primaryExpression>
                           </expression>]</expression>=<expression>
                           <functionCall>
                              <functionName>
                                 <identifier>safeSub</identifier>
                              </functionName>
                              <callArguments>
                                 <tupleExpression>(<expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>balances</identifier>
                                          </primaryExpression>
                                       </expression>[<expression>
                                          <primaryExpression>
                                             <identifier>_from</identifier>
                                          </primaryExpression>
                                       </expression>]</expression>,<expression>
                                       <primaryExpression>
                                          <identifier>_value</identifier>
                                       </primaryExpression>
                                    </expression>)</tupleExpression>
                              </callArguments>
                           </functionCall>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <expression>
                              <expression>
                                 <primaryExpression>
                                    <identifier>allowed</identifier>
                                 </primaryExpression>
                              </expression>[<expression>
                                 <primaryExpression>
                                    <identifier>_from</identifier>
                                 </primaryExpression>
                              </expression>]</expression>[<expression>
                              <environmentalVariable>msg.sender</environmentalVariable>
                           </expression>]</expression>=<expression>
                           <functionCall>
                              <functionName>
                                 <identifier>safeSub</identifier>
                              </functionName>
                              <callArguments>
                                 <tupleExpression>(<expression>
                                       <expression>
                                          <expression>
                                             <primaryExpression>
                                                <identifier>allowed</identifier>
                                             </primaryExpression>
                                          </expression>[<expression>
                                             <primaryExpression>
                                                <identifier>_from</identifier>
                                             </primaryExpression>
                                          </expression>]</expression>[<expression>
                                          <environmentalVariable>msg.sender</environmentalVariable>
                                       </expression>]</expression>,<expression>
                                       <primaryExpression>
                                          <identifier>_value</identifier>
                                       </primaryExpression>
                                    </expression>)</tupleExpression>
                              </callArguments>
                           </functionCall>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>Transfer</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <primaryExpression>
                                       <identifier>_from</identifier>
                                    </primaryExpression>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <identifier>_to</identifier>
                                    </primaryExpression>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <identifier>_value</identifier>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <returnStatement>return<expression>
                        <primaryExpression>
                           <booleanLiteral>true</booleanLiteral>
                        </primaryExpression>
                     </expression>
                  </returnStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>totalSupply</identifier>
            <parameterList>()</parameterList>
            <stateMutability>
               <constantType>constant</constantType>
            </stateMutability>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>uint256</elementaryTypeName>
                     </typeName>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{<statement>
                  <returnStatement>return<expression>
                        <primaryExpression>
                           <identifier>supply</identifier>
                        </primaryExpression>
                     </expression>
                  </returnStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>balanceOf</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>_owner</identifier>
               </parameter>)</parameterList>
            <stateMutability>
               <constantType>constant</constantType>
            </stateMutability>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>uint256</elementaryTypeName>
                     </typeName>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{<statement>
                  <returnStatement>return<expression>
                        <expression>
                           <primaryExpression>
                              <identifier>balances</identifier>
                           </primaryExpression>
                        </expression>[<expression>
                           <primaryExpression>
                              <identifier>_owner</identifier>
                           </primaryExpression>
                        </expression>]</expression>
                  </returnStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>approve</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>_spender</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>_value</identifier>
               </parameter>)</parameterList>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>bool</elementaryTypeName>
                     </typeName>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <tupleExpression>(<expression>
                                             <expression>
                                                <primaryExpression>
                                                   <identifier>_value</identifier>
                                                </primaryExpression>
                                             </expression>
                                             <comparison>==</comparison>
                                             <expression>
                                                <primaryExpression>
                                                   <numberLiteral>
                                                      <decimalNumber>0</decimalNumber>
                                                   </numberLiteral>
                                                </primaryExpression>
                                             </expression>
                                          </expression>)</tupleExpression>
                                    </expression>||<expression>
                                       <tupleExpression>(<expression>
                                             <expression>
                                                <expression>
                                                   <expression>
                                                      <primaryExpression>
                                                         <identifier>allowed</identifier>
                                                      </primaryExpression>
                                                   </expression>[<expression>
                                                      <environmentalVariable>msg.sender</environmentalVariable>
                                                   </expression>]</expression>[<expression>
                                                   <primaryExpression>
                                                      <identifier>_spender</identifier>
                                                   </primaryExpression>
                                                </expression>]</expression>
                                             <comparison>==</comparison>
                                             <expression>
                                                <primaryExpression>
                                                   <numberLiteral>
                                                      <decimalNumber>0</decimalNumber>
                                                   </numberLiteral>
                                                </primaryExpression>
                                             </expression>
                                          </expression>)</tupleExpression>
                                    </expression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <expression>
                              <expression>
                                 <primaryExpression>
                                    <identifier>allowed</identifier>
                                 </primaryExpression>
                              </expression>[<expression>
                                 <environmentalVariable>msg.sender</environmentalVariable>
                              </expression>]</expression>[<expression>
                              <primaryExpression>
                                 <identifier>_spender</identifier>
                              </primaryExpression>
                           </expression>]</expression>=<expression>
                           <primaryExpression>
                              <identifier>_value</identifier>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>Approval</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <environmentalVariable>msg.sender</environmentalVariable>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <identifier>_spender</identifier>
                                    </primaryExpression>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <identifier>_value</identifier>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <returnStatement>return<expression>
                        <primaryExpression>
                           <booleanLiteral>true</booleanLiteral>
                        </primaryExpression>
                     </expression>
                  </returnStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>allowance</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>_owner</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>_spender</identifier>
               </parameter>)</parameterList>
            <stateMutability>
               <constantType>constant</constantType>
            </stateMutability>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>uint256</elementaryTypeName>
                     </typeName>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{<statement>
                  <returnStatement>return<expression>
                        <expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>allowed</identifier>
                              </primaryExpression>
                           </expression>[<expression>
                              <primaryExpression>
                                 <identifier>_owner</identifier>
                              </primaryExpression>
                           </expression>]</expression>[<expression>
                           <primaryExpression>
                              <identifier>_spender</identifier>
                           </primaryExpression>
                        </expression>]</expression>
                  </returnStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>}</contractDefinition>
   <contractDefinition>contract<identifier>EthLendToken</identifier>is<inheritanceSpecifier>
         <userDefinedTypeName>
            <identifier>StdToken</identifier>
         </userDefinedTypeName>
      </inheritanceSpecifier>{<contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>string</elementaryTypeName>
            </typeName>
            <visibleType>public</visibleType>
            <constantType>constant</constantType>
            <identifier>name</identifier>=<expression>
               <primaryExpression>
                  <stringLiteral>EthLend Token</stringLiteral>
               </primaryExpression>
            </expression>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>string</elementaryTypeName>
            </typeName>
            <visibleType>public</visibleType>
            <constantType>constant</constantType>
            <identifier>symbol</identifier>=<expression>
               <primaryExpression>
                  <stringLiteral>LEND</stringLiteral>
               </primaryExpression>
            </expression>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>uint</elementaryTypeName>
            </typeName>
            <visibleType>public</visibleType>
            <constantType>constant</constantType>
            <identifier>decimals</identifier>=<expression>
               <primaryExpression>
                  <numberLiteral>
                     <decimalNumber>18</decimalNumber>
                  </numberLiteral>
               </primaryExpression>
            </expression>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>uint</elementaryTypeName>
            </typeName>
            <visibleType>public</visibleType>
            <constantType>constant</constantType>
            <identifier>TOTAL_SUPPLY</identifier>=<expression>
               <expression>
                  <primaryExpression>
                     <numberLiteral>
                        <decimalNumber>1300000000</decimalNumber>
                     </numberLiteral>
                  </primaryExpression>
               </expression>
               <muldivOperator>
                  <mulOperator>*</mulOperator>
               </muldivOperator>
               <expression>
                  <tupleExpression>(<expression>
                        <expression>
                           <primaryExpression>
                              <numberLiteral>
                                 <decimalNumber>1</decimalNumber>
                                 <numberUnit>ether</numberUnit>
                              </numberLiteral>
                           </primaryExpression>
                        </expression>
                        <muldivOperator>
                           <divOperator>/</divOperator>
                        </muldivOperator>
                        <expression>
                           <primaryExpression>
                              <numberLiteral>
                                 <decimalNumber>1</decimalNumber>
                                 <numberUnit>wei</numberUnit>
                              </numberLiteral>
                           </primaryExpression>
                        </expression>
                     </expression>)</tupleExpression>
               </expression>
            </expression>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>uint</elementaryTypeName>
            </typeName>
            <visibleType>public</visibleType>
            <constantType>constant</constantType>
            <identifier>DEVELOPERS_BONUS</identifier>=<expression>
               <expression>
                  <primaryExpression>
                     <numberLiteral>
                        <decimalNumber>300000000</decimalNumber>
                     </numberLiteral>
                  </primaryExpression>
               </expression>
               <muldivOperator>
                  <mulOperator>*</mulOperator>
               </muldivOperator>
               <expression>
                  <tupleExpression>(<expression>
                        <expression>
                           <primaryExpression>
                              <numberLiteral>
                                 <decimalNumber>1</decimalNumber>
                                 <numberUnit>ether</numberUnit>
                              </numberLiteral>
                           </primaryExpression>
                        </expression>
                        <muldivOperator>
                           <divOperator>/</divOperator>
                        </muldivOperator>
                        <expression>
                           <primaryExpression>
                              <numberLiteral>
                                 <decimalNumber>1</decimalNumber>
                                 <numberUnit>wei</numberUnit>
                              </numberLiteral>
                           </primaryExpression>
                        </expression>
                     </expression>)</tupleExpression>
               </expression>
            </expression>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>uint</elementaryTypeName>
            </typeName>
            <visibleType>public</visibleType>
            <constantType>constant</constantType>
            <identifier>PRESALE_PRICE</identifier>=<expression>
               <primaryExpression>
                  <numberLiteral>
                     <decimalNumber>30000</decimalNumber>
                  </numberLiteral>
               </primaryExpression>
            </expression>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>uint</elementaryTypeName>
            </typeName>
            <visibleType>public</visibleType>
            <constantType>constant</constantType>
            <identifier>PRESALE_MAX_ETH</identifier>=<expression>
               <primaryExpression>
                  <numberLiteral>
                     <decimalNumber>2000</decimalNumber>
                  </numberLiteral>
               </primaryExpression>
            </expression>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>uint</elementaryTypeName>
            </typeName>
            <visibleType>public</visibleType>
            <constantType>constant</constantType>
            <identifier>PRESALE_TOKEN_SUPPLY_LIMIT</identifier>=<expression>
               <expression>
                  <expression>
                     <primaryExpression>
                        <identifier>PRESALE_PRICE</identifier>
                     </primaryExpression>
                  </expression>
                  <muldivOperator>
                     <mulOperator>*</mulOperator>
                  </muldivOperator>
                  <expression>
                     <primaryExpression>
                        <identifier>PRESALE_MAX_ETH</identifier>
                     </primaryExpression>
                  </expression>
               </expression>
               <muldivOperator>
                  <mulOperator>*</mulOperator>
               </muldivOperator>
               <expression>
                  <tupleExpression>(<expression>
                        <expression>
                           <primaryExpression>
                              <numberLiteral>
                                 <decimalNumber>1</decimalNumber>
                                 <numberUnit>ether</numberUnit>
                              </numberLiteral>
                           </primaryExpression>
                        </expression>
                        <muldivOperator>
                           <divOperator>/</divOperator>
                        </muldivOperator>
                        <expression>
                           <primaryExpression>
                              <numberLiteral>
                                 <decimalNumber>1</decimalNumber>
                                 <numberUnit>wei</numberUnit>
                              </numberLiteral>
                           </primaryExpression>
                        </expression>
                     </expression>)</tupleExpression>
               </expression>
            </expression>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>uint</elementaryTypeName>
            </typeName>
            <visibleType>public</visibleType>
            <constantType>constant</constantType>
            <identifier>ICO_PRICE1</identifier>=<expression>
               <primaryExpression>
                  <numberLiteral>
                     <decimalNumber>27500</decimalNumber>
                  </numberLiteral>
               </primaryExpression>
            </expression>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>uint</elementaryTypeName>
            </typeName>
            <visibleType>public</visibleType>
            <constantType>constant</constantType>
            <identifier>ICO_PRICE2</identifier>=<expression>
               <primaryExpression>
                  <numberLiteral>
                     <decimalNumber>26250</decimalNumber>
                  </numberLiteral>
               </primaryExpression>
            </expression>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>uint</elementaryTypeName>
            </typeName>
            <visibleType>public</visibleType>
            <constantType>constant</constantType>
            <identifier>ICO_PRICE3</identifier>=<expression>
               <primaryExpression>
                  <numberLiteral>
                     <decimalNumber>25000</decimalNumber>
                  </numberLiteral>
               </primaryExpression>
            </expression>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>uint</elementaryTypeName>
            </typeName>
            <visibleType>public</visibleType>
            <constantType>constant</constantType>
            <identifier>TOTAL_SOLD_TOKEN_SUPPLY_LIMIT</identifier>=<expression>
               <expression>
                  <primaryExpression>
                     <numberLiteral>
                        <decimalNumber>1000000000</decimalNumber>
                     </numberLiteral>
                  </primaryExpression>
               </expression>
               <muldivOperator>
                  <mulOperator>*</mulOperator>
               </muldivOperator>
               <expression>
                  <tupleExpression>(<expression>
                        <expression>
                           <primaryExpression>
                              <numberLiteral>
                                 <decimalNumber>1</decimalNumber>
                                 <numberUnit>ether</numberUnit>
                              </numberLiteral>
                           </primaryExpression>
                        </expression>
                        <muldivOperator>
                           <divOperator>/</divOperator>
                        </muldivOperator>
                        <expression>
                           <primaryExpression>
                              <numberLiteral>
                                 <decimalNumber>1</decimalNumber>
                                 <numberUnit>wei</numberUnit>
                              </numberLiteral>
                           </primaryExpression>
                        </expression>
                     </expression>)</tupleExpression>
               </expression>
            </expression>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <enumDefinition>enum<identifier>State</identifier>{<enumValue>
               <identifier>Init</identifier>
            </enumValue>,<enumValue>
               <identifier>Paused</identifier>
            </enumValue>,<enumValue>
               <identifier>PresaleRunning</identifier>
            </enumValue>,<enumValue>
               <identifier>PresaleFinished</identifier>
            </enumValue>,<enumValue>
               <identifier>ICORunning</identifier>
            </enumValue>,<enumValue>
               <identifier>ICOFinished</identifier>
            </enumValue>}</enumDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <userDefinedTypeName>
                  <identifier>State</identifier>
               </userDefinedTypeName>
            </typeName>
            <visibleType>public</visibleType>
            <identifier>currentState</identifier>=<expression>
               <expression>
                  <primaryExpression>
                     <identifier>State</identifier>
                  </primaryExpression>
               </expression>.<identifier>Init</identifier>
            </expression>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>bool</elementaryTypeName>
            </typeName>
            <visibleType>public</visibleType>
            <identifier>enableTransfers</identifier>=<expression>
               <primaryExpression>
                  <booleanLiteral>false</booleanLiteral>
               </primaryExpression>
            </expression>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>address</elementaryTypeName>
            </typeName>
            <visibleType>public</visibleType>
            <identifier>teamTokenBonus</identifier>=<expression>
               <primaryExpression>
                  <numberLiteral>
                     <decimalNumber>0</decimalNumber>
                  </numberLiteral>
               </primaryExpression>
            </expression>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>address</elementaryTypeName>
            </typeName>
            <visibleType>public</visibleType>
            <identifier>escrow</identifier>=<expression>
               <primaryExpression>
                  <numberLiteral>
                     <decimalNumber>0</decimalNumber>
                  </numberLiteral>
               </primaryExpression>
            </expression>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>address</elementaryTypeName>
            </typeName>
            <visibleType>public</visibleType>
            <identifier>tokenManager</identifier>=<expression>
               <primaryExpression>
                  <numberLiteral>
                     <decimalNumber>0</decimalNumber>
                  </numberLiteral>
               </primaryExpression>
            </expression>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>uint</elementaryTypeName>
            </typeName>
            <visibleType>public</visibleType>
            <identifier>presaleSoldTokens</identifier>=<expression>
               <primaryExpression>
                  <numberLiteral>
                     <decimalNumber>0</decimalNumber>
                  </numberLiteral>
               </primaryExpression>
            </expression>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>uint</elementaryTypeName>
            </typeName>
            <visibleType>public</visibleType>
            <identifier>icoSoldTokens</identifier>=<expression>
               <primaryExpression>
                  <numberLiteral>
                     <decimalNumber>0</decimalNumber>
                  </numberLiteral>
               </primaryExpression>
            </expression>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>uint</elementaryTypeName>
            </typeName>
            <visibleType>public</visibleType>
            <identifier>totalSoldTokens</identifier>=<expression>
               <primaryExpression>
                  <numberLiteral>
                     <decimalNumber>0</decimalNumber>
                  </numberLiteral>
               </primaryExpression>
            </expression>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <modifierDefinition>modifier<identifier>onlyTokenManager</identifier>
            <parameterList>()</parameterList>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <environmentalVariable>msg.sender</environmentalVariable>
                                    </expression>
                                    <comparison>==</comparison>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>tokenManager</identifier>
                                       </primaryExpression>
                                    </expression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <placeholderStatement>_</placeholderStatement>;</statement>}</block>
         </modifierDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <modifierDefinition>modifier<identifier>onlyInState</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <userDefinedTypeName>
                        <identifier>State</identifier>
                     </userDefinedTypeName>
                  </typeName>
                  <identifier>state</identifier>
               </parameter>)</parameterList>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>state</identifier>
                                       </primaryExpression>
                                    </expression>
                                    <comparison>==</comparison>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>currentState</identifier>
                                       </primaryExpression>
                                    </expression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <placeholderStatement>_</placeholderStatement>;</statement>}</block>
         </modifierDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <eventDefinition>event<identifier>LogBuy</identifier>
            <indexedParameterList>(<indexedParameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>indexed<identifier>owner</identifier>
               </indexedParameter>,<indexedParameter>
                  <typeName>
                     <elementaryTypeName>uint</elementaryTypeName>
                  </typeName>
                  <identifier>value</identifier>
               </indexedParameter>)</indexedParameterList>;</eventDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <eventDefinition>event<identifier>LogBurn</identifier>
            <indexedParameterList>(<indexedParameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>indexed<identifier>owner</identifier>
               </indexedParameter>,<indexedParameter>
                  <typeName>
                     <elementaryTypeName>uint</elementaryTypeName>
                  </typeName>
                  <identifier>value</identifier>
               </indexedParameter>)</indexedParameterList>;</eventDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>EthLendToken</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>_tokenManager</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>_escrow</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>_teamTokenBonus</identifier>
               </parameter>)</parameterList>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>tokenManager</identifier>
                           </primaryExpression>
                        </expression>=<expression>
                           <primaryExpression>
                              <identifier>_tokenManager</identifier>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>teamTokenBonus</identifier>
                           </primaryExpression>
                        </expression>=<expression>
                           <primaryExpression>
                              <identifier>_teamTokenBonus</identifier>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>escrow</identifier>
                           </primaryExpression>
                        </expression>=<expression>
                           <primaryExpression>
                              <identifier>_escrow</identifier>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <variableDeclaration>
                              <typeName>
                                 <elementaryTypeName>uint</elementaryTypeName>
                              </typeName>
                              <identifier>teamBonus</identifier>
                           </variableDeclaration>
                        </expression>=<expression>
                           <primaryExpression>
                              <identifier>DEVELOPERS_BONUS</identifier>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>balances</identifier>
                              </primaryExpression>
                           </expression>[<expression>
                              <primaryExpression>
                                 <identifier>_teamTokenBonus</identifier>
                              </primaryExpression>
                           </expression>]</expression>
                        <lvalueOperator>
                           <plusLvalueOperator>+=</plusLvalueOperator>
                        </lvalueOperator>
                        <expression>
                           <primaryExpression>
                              <identifier>teamBonus</identifier>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>supply</identifier>
                           </primaryExpression>
                        </expression>
                        <lvalueOperator>
                           <plusLvalueOperator>+=</plusLvalueOperator>
                        </lvalueOperator>
                        <expression>
                           <primaryExpression>
                              <identifier>teamBonus</identifier>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>assert</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>PRESALE_TOKEN_SUPPLY_LIMIT</identifier>
                                       </primaryExpression>
                                    </expression>
                                    <comparison>==</comparison>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <numberLiteral>
                                                <decimalNumber>60000000</decimalNumber>
                                             </numberLiteral>
                                          </primaryExpression>
                                       </expression>
                                       <muldivOperator>
                                          <mulOperator>*</mulOperator>
                                       </muldivOperator>
                                       <expression>
                                          <tupleExpression>(<expression>
                                                <expression>
                                                   <primaryExpression>
                                                      <numberLiteral>
                                                         <decimalNumber>1</decimalNumber>
                                                         <numberUnit>ether</numberUnit>
                                                      </numberLiteral>
                                                   </primaryExpression>
                                                </expression>
                                                <muldivOperator>
                                                   <divOperator>/</divOperator>
                                                </muldivOperator>
                                                <expression>
                                                   <primaryExpression>
                                                      <numberLiteral>
                                                         <decimalNumber>1</decimalNumber>
                                                         <numberUnit>wei</numberUnit>
                                                      </numberLiteral>
                                                   </primaryExpression>
                                                </expression>
                                             </expression>)</tupleExpression>
                                       </expression>
                                    </expression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>assert</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>TOTAL_SOLD_TOKEN_SUPPLY_LIMIT</identifier>
                                       </primaryExpression>
                                    </expression>
                                    <comparison>==</comparison>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <numberLiteral>
                                                <decimalNumber>1000000000</decimalNumber>
                                             </numberLiteral>
                                          </primaryExpression>
                                       </expression>
                                       <muldivOperator>
                                          <mulOperator>*</mulOperator>
                                       </muldivOperator>
                                       <expression>
                                          <tupleExpression>(<expression>
                                                <expression>
                                                   <primaryExpression>
                                                      <numberLiteral>
                                                         <decimalNumber>1</decimalNumber>
                                                         <numberUnit>ether</numberUnit>
                                                      </numberLiteral>
                                                   </primaryExpression>
                                                </expression>
                                                <muldivOperator>
                                                   <divOperator>/</divOperator>
                                                </muldivOperator>
                                                <expression>
                                                   <primaryExpression>
                                                      <numberLiteral>
                                                         <decimalNumber>1</decimalNumber>
                                                         <numberUnit>wei</numberUnit>
                                                      </numberLiteral>
                                                   </primaryExpression>
                                                </expression>
                                             </expression>)</tupleExpression>
                                       </expression>
                                    </expression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>buyTokens</identifier>
            <parameterList>()</parameterList>
            <visibleType>public</visibleType>
            <stateMutability>
               <payableType>payable</payableType>
            </stateMutability>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>currentState</identifier>
                                          </primaryExpression>
                                       </expression>
                                       <comparison>==</comparison>
                                       <expression>
                                          <expression>
                                             <primaryExpression>
                                                <identifier>State</identifier>
                                             </primaryExpression>
                                          </expression>.<identifier>PresaleRunning</identifier>
                                       </expression>
                                    </expression>||<expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>currentState</identifier>
                                          </primaryExpression>
                                       </expression>
                                       <comparison>==</comparison>
                                       <expression>
                                          <expression>
                                             <primaryExpression>
                                                <identifier>State</identifier>
                                             </primaryExpression>
                                          </expression>.<identifier>ICORunning</identifier>
                                       </expression>
                                    </expression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <ifStatement>if(<condition>
                        <expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>currentState</identifier>
                              </primaryExpression>
                           </expression>
                           <comparison>==</comparison>
                           <expression>
                              <expression>
                                 <primaryExpression>
                                    <identifier>State</identifier>
                                 </primaryExpression>
                              </expression>.<identifier>PresaleRunning</identifier>
                           </expression>
                        </expression>
                     </condition>)<statement>
                        <block>{<statement>
                              <returnStatement>return<expression>
                                    <functionCall>
                                       <functionName>
                                          <identifier>buyTokensPresale</identifier>
                                       </functionName>
                                       <callArguments>
                                          <tupleExpression>()</tupleExpression>
                                       </callArguments>
                                    </functionCall>
                                 </expression>
                              </returnStatement>;</statement>}</block>
                     </statement>else<statement>
                        <block>{<statement>
                              <returnStatement>return<expression>
                                    <functionCall>
                                       <functionName>
                                          <identifier>buyTokensICO</identifier>
                                       </functionName>
                                       <callArguments>
                                          <tupleExpression>()</tupleExpression>
                                       </callArguments>
                                    </functionCall>
                                 </expression>
                              </returnStatement>;</statement>}</block>
                     </statement>
                  </ifStatement>
               </statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>buyTokensPresale</identifier>
            <parameterList>()</parameterList>
            <visibleType>public</visibleType>
            <stateMutability>
               <payableType>payable</payableType>
            </stateMutability>
            <functionCall>
               <functionName>
                  <identifier>onlyInState</identifier>
               </functionName>
               <callArguments>
                  <tupleExpression>(<expression>
                        <expression>
                           <primaryExpression>
                              <identifier>State</identifier>
                           </primaryExpression>
                        </expression>.<identifier>PresaleRunning</identifier>
                     </expression>)</tupleExpression>
               </callArguments>
            </functionCall>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <environmentalVariable>msg.value</environmentalVariable>
                                    </expression>&gt;=<expression>
                                       <tupleExpression>(<expression>
                                             <expression>
                                                <primaryExpression>
                                                   <numberLiteral>
                                                      <decimalNumber>1</decimalNumber>
                                                      <numberUnit>ether</numberUnit>
                                                   </numberLiteral>
                                                </primaryExpression>
                                             </expression>
                                             <muldivOperator>
                                                <divOperator>/</divOperator>
                                             </muldivOperator>
                                             <expression>
                                                <primaryExpression>
                                                   <numberLiteral>
                                                      <decimalNumber>1</decimalNumber>
                                                      <numberUnit>wei</numberUnit>
                                                   </numberLiteral>
                                                </primaryExpression>
                                             </expression>
                                          </expression>)</tupleExpression>
                                    </expression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <variableDeclaration>
                              <typeName>
                                 <elementaryTypeName>uint</elementaryTypeName>
                              </typeName>
                              <identifier>newTokens</identifier>
                           </variableDeclaration>
                        </expression>=<expression>
                           <expression>
                              <environmentalVariable>msg.value</environmentalVariable>
                           </expression>
                           <muldivOperator>
                              <mulOperator>*</mulOperator>
                           </muldivOperator>
                           <expression>
                              <primaryExpression>
                                 <identifier>PRESALE_PRICE</identifier>
                              </primaryExpression>
                           </expression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>newTokens</identifier>
                                       </primaryExpression>
                                    </expression>&lt;=<expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>presaleSoldTokens</identifier>
                                          </primaryExpression>
                                       </expression>
                                       <plusminusOperator>
                                          <plusOperator>+</plusOperator>
                                       </plusminusOperator>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>newTokens</identifier>
                                          </primaryExpression>
                                       </expression>
                                    </expression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>presaleSoldTokens</identifier>
                                          </primaryExpression>
                                       </expression>
                                       <plusminusOperator>
                                          <plusOperator>+</plusOperator>
                                       </plusminusOperator>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>newTokens</identifier>
                                          </primaryExpression>
                                       </expression>
                                    </expression>&gt;=<expression>
                                       <primaryExpression>
                                          <identifier>newTokens</identifier>
                                       </primaryExpression>
                                    </expression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>presaleSoldTokens</identifier>
                                          </primaryExpression>
                                       </expression>
                                       <plusminusOperator>
                                          <plusOperator>+</plusOperator>
                                       </plusminusOperator>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>newTokens</identifier>
                                          </primaryExpression>
                                       </expression>
                                    </expression>&lt;=<expression>
                                       <primaryExpression>
                                          <identifier>PRESALE_TOKEN_SUPPLY_LIMIT</identifier>
                                       </primaryExpression>
                                    </expression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>balances</identifier>
                              </primaryExpression>
                           </expression>[<expression>
                              <environmentalVariable>msg.sender</environmentalVariable>
                           </expression>]</expression>
                        <lvalueOperator>
                           <plusLvalueOperator>+=</plusLvalueOperator>
                        </lvalueOperator>
                        <expression>
                           <primaryExpression>
                              <identifier>newTokens</identifier>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>supply</identifier>
                           </primaryExpression>
                        </expression>
                        <lvalueOperator>
                           <plusLvalueOperator>+=</plusLvalueOperator>
                        </lvalueOperator>
                        <expression>
                           <primaryExpression>
                              <identifier>newTokens</identifier>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>presaleSoldTokens</identifier>
                           </primaryExpression>
                        </expression>
                        <lvalueOperator>
                           <plusLvalueOperator>+=</plusLvalueOperator>
                        </lvalueOperator>
                        <expression>
                           <primaryExpression>
                              <identifier>newTokens</identifier>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>totalSoldTokens</identifier>
                           </primaryExpression>
                        </expression>
                        <lvalueOperator>
                           <plusLvalueOperator>+=</plusLvalueOperator>
                        </lvalueOperator>
                        <expression>
                           <primaryExpression>
                              <identifier>newTokens</identifier>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>LogBuy</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <environmentalVariable>msg.sender</environmentalVariable>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <identifier>newTokens</identifier>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>buyTokensICO</identifier>
            <parameterList>()</parameterList>
            <visibleType>public</visibleType>
            <stateMutability>
               <payableType>payable</payableType>
            </stateMutability>
            <functionCall>
               <functionName>
                  <identifier>onlyInState</identifier>
               </functionName>
               <callArguments>
                  <tupleExpression>(<expression>
                        <expression>
                           <primaryExpression>
                              <identifier>State</identifier>
                           </primaryExpression>
                        </expression>.<identifier>ICORunning</identifier>
                     </expression>)</tupleExpression>
               </callArguments>
            </functionCall>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <environmentalVariable>msg.value</environmentalVariable>
                                    </expression>&gt;=<expression>
                                       <tupleExpression>(<expression>
                                             <expression>
                                                <tupleExpression>(<expression>
                                                      <expression>
                                                         <primaryExpression>
                                                            <numberLiteral>
                                                               <decimalNumber>1</decimalNumber>
                                                               <numberUnit>ether</numberUnit>
                                                            </numberLiteral>
                                                         </primaryExpression>
                                                      </expression>
                                                      <muldivOperator>
                                                         <divOperator>/</divOperator>
                                                      </muldivOperator>
                                                      <expression>
                                                         <primaryExpression>
                                                            <numberLiteral>
                                                               <decimalNumber>1</decimalNumber>
                                                               <numberUnit>wei</numberUnit>
                                                            </numberLiteral>
                                                         </primaryExpression>
                                                      </expression>
                                                   </expression>)</tupleExpression>
                                             </expression>
                                             <muldivOperator>
                                                <divOperator>/</divOperator>
                                             </muldivOperator>
                                             <expression>
                                                <primaryExpression>
                                                   <numberLiteral>
                                                      <decimalNumber>100</decimalNumber>
                                                   </numberLiteral>
                                                </primaryExpression>
                                             </expression>
                                          </expression>)</tupleExpression>
                                    </expression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <variableDeclaration>
                              <typeName>
                                 <elementaryTypeName>uint</elementaryTypeName>
                              </typeName>
                              <identifier>newTokens</identifier>
                           </variableDeclaration>
                        </expression>=<expression>
                           <expression>
                              <environmentalVariable>msg.value</environmentalVariable>
                           </expression>
                           <muldivOperator>
                              <mulOperator>*</mulOperator>
                           </muldivOperator>
                           <expression>
                              <functionCall>
                                 <functionName>
                                    <identifier>getPrice</identifier>
                                 </functionName>
                                 <callArguments>
                                    <tupleExpression>()</tupleExpression>
                                 </callArguments>
                              </functionCall>
                           </expression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>newTokens</identifier>
                                       </primaryExpression>
                                    </expression>&lt;=<expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>totalSoldTokens</identifier>
                                          </primaryExpression>
                                       </expression>
                                       <plusminusOperator>
                                          <plusOperator>+</plusOperator>
                                       </plusminusOperator>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>newTokens</identifier>
                                          </primaryExpression>
                                       </expression>
                                    </expression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>totalSoldTokens</identifier>
                                          </primaryExpression>
                                       </expression>
                                       <plusminusOperator>
                                          <plusOperator>+</plusOperator>
                                       </plusminusOperator>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>newTokens</identifier>
                                          </primaryExpression>
                                       </expression>
                                    </expression>&gt;=<expression>
                                       <primaryExpression>
                                          <identifier>newTokens</identifier>
                                       </primaryExpression>
                                    </expression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>totalSoldTokens</identifier>
                                          </primaryExpression>
                                       </expression>
                                       <plusminusOperator>
                                          <plusOperator>+</plusOperator>
                                       </plusminusOperator>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>newTokens</identifier>
                                          </primaryExpression>
                                       </expression>
                                    </expression>&lt;=<expression>
                                       <primaryExpression>
                                          <identifier>TOTAL_SOLD_TOKEN_SUPPLY_LIMIT</identifier>
                                       </primaryExpression>
                                    </expression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>balances</identifier>
                              </primaryExpression>
                           </expression>[<expression>
                              <environmentalVariable>msg.sender</environmentalVariable>
                           </expression>]</expression>
                        <lvalueOperator>
                           <plusLvalueOperator>+=</plusLvalueOperator>
                        </lvalueOperator>
                        <expression>
                           <primaryExpression>
                              <identifier>newTokens</identifier>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>supply</identifier>
                           </primaryExpression>
                        </expression>
                        <lvalueOperator>
                           <plusLvalueOperator>+=</plusLvalueOperator>
                        </lvalueOperator>
                        <expression>
                           <primaryExpression>
                              <identifier>newTokens</identifier>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>icoSoldTokens</identifier>
                           </primaryExpression>
                        </expression>
                        <lvalueOperator>
                           <plusLvalueOperator>+=</plusLvalueOperator>
                        </lvalueOperator>
                        <expression>
                           <primaryExpression>
                              <identifier>newTokens</identifier>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>totalSoldTokens</identifier>
                           </primaryExpression>
                        </expression>
                        <lvalueOperator>
                           <plusLvalueOperator>+=</plusLvalueOperator>
                        </lvalueOperator>
                        <expression>
                           <primaryExpression>
                              <identifier>newTokens</identifier>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>LogBuy</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <environmentalVariable>msg.sender</environmentalVariable>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <identifier>newTokens</identifier>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>getPrice</identifier>
            <parameterList>()</parameterList>
            <stateMutability>
               <constantType>constant</constantType>
            </stateMutability>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>uint</elementaryTypeName>
                     </typeName>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{<statement>
                  <ifStatement>if(<condition>
                        <expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>currentState</identifier>
                              </primaryExpression>
                           </expression>
                           <comparison>==</comparison>
                           <expression>
                              <expression>
                                 <primaryExpression>
                                    <identifier>State</identifier>
                                 </primaryExpression>
                              </expression>.<identifier>ICORunning</identifier>
                           </expression>
                        </expression>
                     </condition>)<statement>
                        <block>{<statement>
                              <ifStatement>if(<condition>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>icoSoldTokens</identifier>
                                          </primaryExpression>
                                       </expression>&lt;<expression>
                                          <tupleExpression>(<expression>
                                                <expression>
                                                   <primaryExpression>
                                                      <numberLiteral>
                                                         <decimalNumber>200000000</decimalNumber>
                                                      </numberLiteral>
                                                   </primaryExpression>
                                                </expression>
                                                <muldivOperator>
                                                   <mulOperator>*</mulOperator>
                                                </muldivOperator>
                                                <expression>
                                                   <tupleExpression>(<expression>
                                                         <expression>
                                                            <primaryExpression>
                                                               <numberLiteral>
                                                                  <decimalNumber>1</decimalNumber>
                                                                  <numberUnit>ether</numberUnit>
                                                               </numberLiteral>
                                                            </primaryExpression>
                                                         </expression>
                                                         <muldivOperator>
                                                            <divOperator>/</divOperator>
                                                         </muldivOperator>
                                                         <expression>
                                                            <primaryExpression>
                                                               <numberLiteral>
                                                                  <decimalNumber>1</decimalNumber>
                                                                  <numberUnit>wei</numberUnit>
                                                               </numberLiteral>
                                                            </primaryExpression>
                                                         </expression>
                                                      </expression>)</tupleExpression>
                                                </expression>
                                             </expression>)</tupleExpression>
                                       </expression>
                                    </expression>
                                 </condition>)<statement>
                                    <block>{<statement>
                                          <returnStatement>return<expression>
                                                <primaryExpression>
                                                   <identifier>ICO_PRICE1</identifier>
                                                </primaryExpression>
                                             </expression>
                                          </returnStatement>;</statement>}</block>
                                 </statement>
                              </ifStatement>
                           </statement>
                           <statement>
                              <ifStatement>if(<condition>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>icoSoldTokens</identifier>
                                          </primaryExpression>
                                       </expression>&lt;<expression>
                                          <tupleExpression>(<expression>
                                                <expression>
                                                   <primaryExpression>
                                                      <numberLiteral>
                                                         <decimalNumber>300000000</decimalNumber>
                                                      </numberLiteral>
                                                   </primaryExpression>
                                                </expression>
                                                <muldivOperator>
                                                   <mulOperator>*</mulOperator>
                                                </muldivOperator>
                                                <expression>
                                                   <tupleExpression>(<expression>
                                                         <expression>
                                                            <primaryExpression>
                                                               <numberLiteral>
                                                                  <decimalNumber>1</decimalNumber>
                                                                  <numberUnit>ether</numberUnit>
                                                               </numberLiteral>
                                                            </primaryExpression>
                                                         </expression>
                                                         <muldivOperator>
                                                            <divOperator>/</divOperator>
                                                         </muldivOperator>
                                                         <expression>
                                                            <primaryExpression>
                                                               <numberLiteral>
                                                                  <decimalNumber>1</decimalNumber>
                                                                  <numberUnit>wei</numberUnit>
                                                               </numberLiteral>
                                                            </primaryExpression>
                                                         </expression>
                                                      </expression>)</tupleExpression>
                                                </expression>
                                             </expression>)</tupleExpression>
                                       </expression>
                                    </expression>
                                 </condition>)<statement>
                                    <block>{<statement>
                                          <returnStatement>return<expression>
                                                <primaryExpression>
                                                   <identifier>ICO_PRICE2</identifier>
                                                </primaryExpression>
                                             </expression>
                                          </returnStatement>;</statement>}</block>
                                 </statement>
                              </ifStatement>
                           </statement>
                           <statement>
                              <returnStatement>return<expression>
                                    <primaryExpression>
                                       <identifier>ICO_PRICE3</identifier>
                                    </primaryExpression>
                                 </expression>
                              </returnStatement>;</statement>}</block>
                     </statement>else<statement>
                        <block>{<statement>
                              <returnStatement>return<expression>
                                    <primaryExpression>
                                       <identifier>PRESALE_PRICE</identifier>
                                    </primaryExpression>
                                 </expression>
                              </returnStatement>;</statement>}</block>
                     </statement>
                  </ifStatement>
               </statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>setState</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <userDefinedTypeName>
                        <identifier>State</identifier>
                     </userDefinedTypeName>
                  </typeName>
                  <identifier>_nextState</identifier>
               </parameter>)</parameterList>
            <visibleType>public</visibleType>
            <identifier>onlyTokenManager</identifier>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>currentState</identifier>
                                       </primaryExpression>
                                    </expression>
                                    <comparison>!=</comparison>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>State</identifier>
                                          </primaryExpression>
                                       </expression>.<identifier>ICOFinished</identifier>
                                    </expression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>currentState</identifier>
                           </primaryExpression>
                        </expression>=<expression>
                           <primaryExpression>
                              <identifier>_nextState</identifier>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>enableTransfers</identifier>
                           </primaryExpression>
                        </expression>=<expression>
                           <tupleExpression>(<expression>
                                 <expression>
                                    <primaryExpression>
                                       <identifier>currentState</identifier>
                                    </primaryExpression>
                                 </expression>
                                 <comparison>==</comparison>
                                 <expression>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>State</identifier>
                                       </primaryExpression>
                                    </expression>.<identifier>ICOFinished</identifier>
                                 </expression>
                              </expression>)</tupleExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>withdrawEther</identifier>
            <parameterList>()</parameterList>
            <visibleType>public</visibleType>
            <identifier>onlyTokenManager</identifier>
            <block>{<statement>
                  <ifStatement>if(<condition>
                        <expression>
                           <expression>
                              <expression>
                                 <environmentalVariable>this</environmentalVariable>
                              </expression>.balance</expression>&gt;<expression>
                              <primaryExpression>
                                 <numberLiteral>
                                    <decimalNumber>0</decimalNumber>
                                 </numberLiteral>
                              </primaryExpression>
                           </expression>
                        </expression>
                     </condition>)<statement>
                        <block>{<statement>
                              <expressionStatement>
                                 <expression>
                                    <functionCall>
                                       <functionName>
                                          <identifier>require</identifier>
                                       </functionName>
                                       <callArguments>
                                          <tupleExpression>(<expression>
                                                <expression>
                                                   <primaryExpression>
                                                      <identifier>escrow</identifier>
                                                   </primaryExpression>
                                                </expression>.<functionCall>
                                                   <functionName>
                                                      <identifier>send</identifier>
                                                   </functionName>
                                                   <callArguments>
                                                      <tupleExpression>(<expression>
                                                            <expression>
                                                               <environmentalVariable>this</environmentalVariable>
                                                            </expression>.balance</expression>)</tupleExpression>
                                                   </callArguments>
                                                </functionCall>
                                             </expression>)</tupleExpression>
                                       </callArguments>
                                    </functionCall>
                                 </expression>
                              </expressionStatement>;</statement>}</block>
                     </statement>
                  </ifStatement>
               </statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>transfer</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>_to</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>_value</identifier>
               </parameter>)</parameterList>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>bool</elementaryTypeName>
                     </typeName>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <primaryExpression>
                                       <identifier>enableTransfers</identifier>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <returnStatement>return<expression>
                        <expression>
                           <primaryExpression>
                              <identifier>super</identifier>
                           </primaryExpression>
                        </expression>.<functionCall>
                           <functionName>
                              <identifier>transfer</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <primaryExpression>
                                       <identifier>_to</identifier>
                                    </primaryExpression>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <identifier>_value</identifier>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </returnStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>transferFrom</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>_from</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>_to</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>_value</identifier>
               </parameter>)</parameterList>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>bool</elementaryTypeName>
                     </typeName>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <primaryExpression>
                                       <identifier>enableTransfers</identifier>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <returnStatement>return<expression>
                        <expression>
                           <primaryExpression>
                              <identifier>super</identifier>
                           </primaryExpression>
                        </expression>.<functionCall>
                           <functionName>
                              <identifier>transferFrom</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <primaryExpression>
                                       <identifier>_from</identifier>
                                    </primaryExpression>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <identifier>_to</identifier>
                                    </primaryExpression>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <identifier>_value</identifier>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </returnStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>approve</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>_spender</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>_value</identifier>
               </parameter>)</parameterList>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>bool</elementaryTypeName>
                     </typeName>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <primaryExpression>
                                       <identifier>enableTransfers</identifier>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <returnStatement>return<expression>
                        <expression>
                           <primaryExpression>
                              <identifier>super</identifier>
                           </primaryExpression>
                        </expression>.<functionCall>
                           <functionName>
                              <identifier>approve</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <primaryExpression>
                                       <identifier>_spender</identifier>
                                    </primaryExpression>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <identifier>_value</identifier>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </returnStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>setTokenManager</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>_mgr</identifier>
               </parameter>)</parameterList>
            <visibleType>public</visibleType>
            <identifier>onlyTokenManager</identifier>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>tokenManager</identifier>
                           </primaryExpression>
                        </expression>=<expression>
                           <primaryExpression>
                              <identifier>_mgr</identifier>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionFallBackDefinition>function<parameterList>()</parameterList>
            <stateMutability>
               <payableType>payable</payableType>
            </stateMutability>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>buyTokens</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>()</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>}</block>
         </functionFallBackDefinition>
      </contractPartDefinition>}</contractDefinition>&lt;EOF&gt;</sourceUnit>