<?xml version="1.0" encoding="UTF-8"?>
<sourceUnit>
   <pragmaDirective>pragma<pragmaSolidity>solidity<version>
            <versionOperator>^</versionOperator>
            <versionLiteral>0.5.0</versionLiteral>
         </version>
      </pragmaSolidity>;</pragmaDirective>
   <contractDefinition>contract<identifier>Lighthouse</identifier>{<contractPartDefinition>
         <usingForDeclaration>using<identifier>SafeERC20</identifier>for<typeName>
               <userDefinedTypeName>
                  <identifier>XRT</identifier>
               </userDefinedTypeName>
            </typeName>;</usingForDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <userDefinedTypeName>
                  <identifier>IFactory</identifier>
               </userDefinedTypeName>
            </typeName>
            <visibleType>public</visibleType>
            <identifier>factory</identifier>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <userDefinedTypeName>
                  <identifier>XRT</identifier>
               </userDefinedTypeName>
            </typeName>
            <visibleType>public</visibleType>
            <identifier>xrt</identifier>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>setup</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <userDefinedTypeName>
                        <identifier>XRT</identifier>
                     </userDefinedTypeName>
                  </typeName>
                  <identifier>_xrt</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>_minimalStake</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>_timeoutInBlocks</identifier>
               </parameter>)</parameterList>
            <visibleType>external</visibleType>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>bool</elementaryTypeName>
                     </typeName>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <expression>
                                          <expression>
                                             <primaryExpression>
                                                <identifier>factory</identifier>
                                             </primaryExpression>
                                          </expression>
                                          <comparison>==</comparison>
                                          <expression>
                                             <functionCall>
                                                <functionName>
                                                   <identifier>IFactory</identifier>
                                                </functionName>
                                                <callArguments>
                                                   <tupleExpression>(<expression>
                                                         <primaryExpression>
                                                            <numberLiteral>
                                                               <decimalNumber>0</decimalNumber>
                                                            </numberLiteral>
                                                         </primaryExpression>
                                                      </expression>)</tupleExpression>
                                                </callArguments>
                                             </functionCall>
                                          </expression>
                                       </expression>&amp;&amp;<expression>
                                          <expression>
                                             <primaryExpression>
                                                <identifier>_minimalStake</identifier>
                                             </primaryExpression>
                                          </expression>&gt;<expression>
                                             <primaryExpression>
                                                <numberLiteral>
                                                   <decimalNumber>0</decimalNumber>
                                                </numberLiteral>
                                             </primaryExpression>
                                          </expression>
                                       </expression>
                                    </expression>&amp;&amp;<expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>_timeoutInBlocks</identifier>
                                          </primaryExpression>
                                       </expression>&gt;<expression>
                                          <primaryExpression>
                                             <numberLiteral>
                                                <decimalNumber>0</decimalNumber>
                                             </numberLiteral>
                                          </primaryExpression>
                                       </expression>
                                    </expression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>minimalStake</identifier>
                           </primaryExpression>
                        </expression>=<expression>
                           <primaryExpression>
                              <identifier>_minimalStake</identifier>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>timeoutInBlocks</identifier>
                           </primaryExpression>
                        </expression>=<expression>
                           <primaryExpression>
                              <identifier>_timeoutInBlocks</identifier>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>factory</identifier>
                           </primaryExpression>
                        </expression>=<expression>
                           <functionCall>
                              <functionName>
                                 <identifier>IFactory</identifier>
                              </functionName>
                              <callArguments>
                                 <tupleExpression>(<expression>
                                       <environmentalVariable>msg.sender</environmentalVariable>
                                    </expression>)</tupleExpression>
                              </callArguments>
                           </functionCall>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>xrt</identifier>
                           </primaryExpression>
                        </expression>=<expression>
                           <primaryExpression>
                              <identifier>_xrt</identifier>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <returnStatement>return<expression>
                        <primaryExpression>
                           <booleanLiteral>true</booleanLiteral>
                        </primaryExpression>
                     </expression>
                  </returnStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <mappingSt>mapping(<typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>=&gt;<typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>)</mappingSt>
            </typeName>
            <visibleType>public</visibleType>
            <identifier>indexOf</identifier>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>refill</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>_value</identifier>
               </parameter>)</parameterList>
            <visibleType>external</visibleType>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>bool</elementaryTypeName>
                     </typeName>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>xrt</identifier>
                           </primaryExpression>
                        </expression>.<functionCall>
                           <functionName>
                              <identifier>safeTransferFrom</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <environmentalVariable>msg.sender</environmentalVariable>
                                 </expression>,<expression>
                                    <typeConversion>
                                       <typeName>
                                          <elementaryTypeName>address</elementaryTypeName>
                                       </typeName>(<expression>
                                          <environmentalVariable>this</environmentalVariable>
                                       </expression>)</typeConversion>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <identifier>_value</identifier>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <ifStatement>if(<condition>
                        <expression>
                           <expression>
                              <expression>
                                 <primaryExpression>
                                    <identifier>stakes</identifier>
                                 </primaryExpression>
                              </expression>[<expression>
                                 <environmentalVariable>msg.sender</environmentalVariable>
                              </expression>]</expression>
                           <comparison>==</comparison>
                           <expression>
                              <primaryExpression>
                                 <numberLiteral>
                                    <decimalNumber>0</decimalNumber>
                                 </numberLiteral>
                              </primaryExpression>
                           </expression>
                        </expression>
                     </condition>)<statement>
                        <block>{<statement>
                              <expressionStatement>
                                 <expression>
                                    <functionCall>
                                       <functionName>
                                          <identifier>require</identifier>
                                       </functionName>
                                       <callArguments>
                                          <tupleExpression>(<expression>
                                                <expression>
                                                   <primaryExpression>
                                                      <identifier>_value</identifier>
                                                   </primaryExpression>
                                                </expression>&gt;=<expression>
                                                   <primaryExpression>
                                                      <identifier>minimalStake</identifier>
                                                   </primaryExpression>
                                                </expression>
                                             </expression>)</tupleExpression>
                                       </callArguments>
                                    </functionCall>
                                 </expression>
                              </expressionStatement>;</statement>
                           <statement>
                              <expressionStatement>
                                 <expression>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>providers</identifier>
                                       </primaryExpression>
                                    </expression>.<functionCall>
                                       <functionName>
                                          <identifier>push</identifier>
                                       </functionName>
                                       <callArguments>
                                          <tupleExpression>(<expression>
                                                <environmentalVariable>msg.sender</environmentalVariable>
                                             </expression>)</tupleExpression>
                                       </callArguments>
                                    </functionCall>
                                 </expression>
                              </expressionStatement>;</statement>
                           <statement>
                              <expressionStatement>
                                 <expression>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>indexOf</identifier>
                                          </primaryExpression>
                                       </expression>[<expression>
                                          <environmentalVariable>msg.sender</environmentalVariable>
                                       </expression>]</expression>=<expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>providers</identifier>
                                          </primaryExpression>
                                       </expression>.length</expression>
                                 </expression>
                              </expressionStatement>;</statement>
                           <statement>
                              <emitEventStatement>emit<identifier>Online</identifier>
                                 <callArguments>
                                    <tupleExpression>(<expression>
                                          <environmentalVariable>msg.sender</environmentalVariable>
                                       </expression>)</tupleExpression>
                                 </callArguments>
                              </emitEventStatement>;</statement>}</block>
                     </statement>
                  </ifStatement>
               </statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>stakes</identifier>
                              </primaryExpression>
                           </expression>[<expression>
                              <environmentalVariable>msg.sender</environmentalVariable>
                           </expression>]</expression>
                        <lvalueOperator>
                           <plusLvalueOperator>+=</plusLvalueOperator>
                        </lvalueOperator>
                        <expression>
                           <primaryExpression>
                              <identifier>_value</identifier>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <returnStatement>return<expression>
                        <primaryExpression>
                           <booleanLiteral>true</booleanLiteral>
                        </primaryExpression>
                     </expression>
                  </returnStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>withdraw</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>_value</identifier>
               </parameter>)</parameterList>
            <visibleType>external</visibleType>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>bool</elementaryTypeName>
                     </typeName>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>stakes</identifier>
                                          </primaryExpression>
                                       </expression>[<expression>
                                          <environmentalVariable>msg.sender</environmentalVariable>
                                       </expression>]</expression>&gt;=<expression>
                                       <primaryExpression>
                                          <identifier>_value</identifier>
                                       </primaryExpression>
                                    </expression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>stakes</identifier>
                              </primaryExpression>
                           </expression>[<expression>
                              <environmentalVariable>msg.sender</environmentalVariable>
                           </expression>]</expression>
                        <lvalueOperator>
                           <minusLvalueOperator>-=</minusLvalueOperator>
                        </lvalueOperator>
                        <expression>
                           <primaryExpression>
                              <identifier>_value</identifier>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>xrt</identifier>
                           </primaryExpression>
                        </expression>.<functionCall>
                           <functionName>
                              <identifier>safeTransfer</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <environmentalVariable>msg.sender</environmentalVariable>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <identifier>_value</identifier>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <ifStatement>if(<condition>
                        <expression>
                           <expression>
                              <functionCall>
                                 <functionName>
                                    <identifier>quotaOf</identifier>
                                 </functionName>
                                 <callArguments>
                                    <tupleExpression>(<expression>
                                          <environmentalVariable>msg.sender</environmentalVariable>
                                       </expression>)</tupleExpression>
                                 </callArguments>
                              </functionCall>
                           </expression>
                           <comparison>==</comparison>
                           <expression>
                              <primaryExpression>
                                 <numberLiteral>
                                    <decimalNumber>0</decimalNumber>
                                 </numberLiteral>
                              </primaryExpression>
                           </expression>
                        </expression>
                     </condition>)<statement>
                        <block>{<statement>
                              <expressionStatement>
                                 <expression>
                                    <expression>
                                       <variableDeclaration>
                                          <typeName>
                                             <elementaryTypeName>uint256</elementaryTypeName>
                                          </typeName>
                                          <identifier>balance</identifier>
                                       </variableDeclaration>
                                    </expression>=<expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>stakes</identifier>
                                          </primaryExpression>
                                       </expression>[<expression>
                                          <environmentalVariable>msg.sender</environmentalVariable>
                                       </expression>]</expression>
                                 </expression>
                              </expressionStatement>;</statement>
                           <statement>
                              <expressionStatement>
                                 <expression>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>stakes</identifier>
                                          </primaryExpression>
                                       </expression>[<expression>
                                          <environmentalVariable>msg.sender</environmentalVariable>
                                       </expression>]</expression>=<expression>
                                       <primaryExpression>
                                          <numberLiteral>
                                             <decimalNumber>0</decimalNumber>
                                          </numberLiteral>
                                       </primaryExpression>
                                    </expression>
                                 </expression>
                              </expressionStatement>;</statement>
                           <statement>
                              <expressionStatement>
                                 <expression>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>xrt</identifier>
                                       </primaryExpression>
                                    </expression>.<functionCall>
                                       <functionName>
                                          <identifier>safeTransfer</identifier>
                                       </functionName>
                                       <callArguments>
                                          <tupleExpression>(<expression>
                                                <environmentalVariable>msg.sender</environmentalVariable>
                                             </expression>,<expression>
                                                <primaryExpression>
                                                   <identifier>balance</identifier>
                                                </primaryExpression>
                                             </expression>)</tupleExpression>
                                       </callArguments>
                                    </functionCall>
                                 </expression>
                              </expressionStatement>;</statement>
                           <statement>
                              <expressionStatement>
                                 <expression>
                                    <expression>
                                       <variableDeclaration>
                                          <typeName>
                                             <elementaryTypeName>uint256</elementaryTypeName>
                                          </typeName>
                                          <identifier>senderIndex</identifier>
                                       </variableDeclaration>
                                    </expression>=<expression>
                                       <expression>
                                          <expression>
                                             <primaryExpression>
                                                <identifier>indexOf</identifier>
                                             </primaryExpression>
                                          </expression>[<expression>
                                             <environmentalVariable>msg.sender</environmentalVariable>
                                          </expression>]</expression>
                                       <plusminusOperator>
                                          <minusOperator>-</minusOperator>
                                       </plusminusOperator>
                                       <expression>
                                          <primaryExpression>
                                             <numberLiteral>
                                                <decimalNumber>1</decimalNumber>
                                             </numberLiteral>
                                          </primaryExpression>
                                       </expression>
                                    </expression>
                                 </expression>
                              </expressionStatement>;</statement>
                           <statement>
                              <expressionStatement>
                                 <expression>
                                    <expression>
                                       <variableDeclaration>
                                          <typeName>
                                             <elementaryTypeName>uint256</elementaryTypeName>
                                          </typeName>
                                          <identifier>lastIndex</identifier>
                                       </variableDeclaration>
                                    </expression>=<expression>
                                       <expression>
                                          <expression>
                                             <primaryExpression>
                                                <identifier>providers</identifier>
                                             </primaryExpression>
                                          </expression>.length</expression>
                                       <plusminusOperator>
                                          <minusOperator>-</minusOperator>
                                       </plusminusOperator>
                                       <expression>
                                          <primaryExpression>
                                             <numberLiteral>
                                                <decimalNumber>1</decimalNumber>
                                             </numberLiteral>
                                          </primaryExpression>
                                       </expression>
                                    </expression>
                                 </expression>
                              </expressionStatement>;</statement>
                           <statement>
                              <ifStatement>if(<condition>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>senderIndex</identifier>
                                          </primaryExpression>
                                       </expression>&lt;<expression>
                                          <primaryExpression>
                                             <identifier>lastIndex</identifier>
                                          </primaryExpression>
                                       </expression>
                                    </expression>
                                 </condition>)<statement>
                                    <expressionStatement>
                                       <expression>
                                          <expression>
                                             <expression>
                                                <primaryExpression>
                                                   <identifier>providers</identifier>
                                                </primaryExpression>
                                             </expression>[<expression>
                                                <primaryExpression>
                                                   <identifier>senderIndex</identifier>
                                                </primaryExpression>
                                             </expression>]</expression>=<expression>
                                             <expression>
                                                <primaryExpression>
                                                   <identifier>providers</identifier>
                                                </primaryExpression>
                                             </expression>[<expression>
                                                <primaryExpression>
                                                   <identifier>lastIndex</identifier>
                                                </primaryExpression>
                                             </expression>]</expression>
                                       </expression>
                                    </expressionStatement>;</statement>
                              </ifStatement>
                           </statement>
                           <statement>
                              <expressionStatement>
                                 <expression>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>providers</identifier>
                                          </primaryExpression>
                                       </expression>.length</expression>
                                    <lvalueOperator>
                                       <minusLvalueOperator>-=</minusLvalueOperator>
                                    </lvalueOperator>
                                    <expression>
                                       <primaryExpression>
                                          <numberLiteral>
                                             <decimalNumber>1</decimalNumber>
                                          </numberLiteral>
                                       </primaryExpression>
                                    </expression>
                                 </expression>
                              </expressionStatement>;</statement>
                           <statement>
                              <expressionStatement>
                                 <expression>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>indexOf</identifier>
                                          </primaryExpression>
                                       </expression>[<expression>
                                          <environmentalVariable>msg.sender</environmentalVariable>
                                       </expression>]</expression>=<expression>
                                       <primaryExpression>
                                          <numberLiteral>
                                             <decimalNumber>0</decimalNumber>
                                          </numberLiteral>
                                       </primaryExpression>
                                    </expression>
                                 </expression>
                              </expressionStatement>;</statement>
                           <statement>
                              <emitEventStatement>emit<identifier>Offline</identifier>
                                 <callArguments>
                                    <tupleExpression>(<expression>
                                          <environmentalVariable>msg.sender</environmentalVariable>
                                       </expression>)</tupleExpression>
                                 </callArguments>
                              </emitEventStatement>;</statement>}</block>
                     </statement>
                  </ifStatement>
               </statement>
               <statement>
                  <returnStatement>return<expression>
                        <primaryExpression>
                           <booleanLiteral>true</booleanLiteral>
                        </primaryExpression>
                     </expression>
                  </returnStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>keepAliveTransaction</identifier>
            <parameterList>()</parameterList>
            <visibleType>internal</visibleType>
            <block>{<statement>
                  <ifStatement>if(<condition>
                        <expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>timeoutInBlocks</identifier>
                              </primaryExpression>
                           </expression>&lt;<expression>
                              <expression>
                                 <environmentalVariable>block.number</environmentalVariable>
                              </expression>
                              <plusminusOperator>
                                 <minusOperator>-</minusOperator>
                              </plusminusOperator>
                              <expression>
                                 <primaryExpression>
                                    <identifier>keepAliveBlock</identifier>
                                 </primaryExpression>
                              </expression>
                           </expression>
                        </expression>
                     </condition>)<statement>
                        <block>{<statement>
                              <expressionStatement>
                                 <expression>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>marker</identifier>
                                       </primaryExpression>
                                    </expression>=<expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>indexOf</identifier>
                                          </primaryExpression>
                                       </expression>[<expression>
                                          <environmentalVariable>msg.sender</environmentalVariable>
                                       </expression>]</expression>
                                 </expression>
                              </expressionStatement>;</statement>
                           <statement>
                              <expressionStatement>
                                 <expression>
                                    <functionCall>
                                       <functionName>
                                          <identifier>require</identifier>
                                       </functionName>
                                       <callArguments>
                                          <tupleExpression>(<expression>
                                                <expression>
                                                   <expression>
                                                      <primaryExpression>
                                                         <identifier>marker</identifier>
                                                      </primaryExpression>
                                                   </expression>&gt;<expression>
                                                      <primaryExpression>
                                                         <numberLiteral>
                                                            <decimalNumber>0</decimalNumber>
                                                         </numberLiteral>
                                                      </primaryExpression>
                                                   </expression>
                                                </expression>&amp;&amp;<expression>
                                                   <expression>
                                                      <primaryExpression>
                                                         <identifier>marker</identifier>
                                                      </primaryExpression>
                                                   </expression>&lt;=<expression>
                                                      <expression>
                                                         <primaryExpression>
                                                            <identifier>providers</identifier>
                                                         </primaryExpression>
                                                      </expression>.length</expression>
                                                </expression>
                                             </expression>)</tupleExpression>
                                       </callArguments>
                                    </functionCall>
                                 </expression>
                              </expressionStatement>;</statement>
                           <statement>
                              <expressionStatement>
                                 <expression>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>quota</identifier>
                                       </primaryExpression>
                                    </expression>=<expression>
                                       <functionCall>
                                          <functionName>
                                             <identifier>quotaOf</identifier>
                                          </functionName>
                                          <callArguments>
                                             <tupleExpression>(<expression>
                                                   <expression>
                                                      <primaryExpression>
                                                         <identifier>providers</identifier>
                                                      </primaryExpression>
                                                   </expression>[<expression>
                                                      <expression>
                                                         <primaryExpression>
                                                            <identifier>marker</identifier>
                                                         </primaryExpression>
                                                      </expression>
                                                      <plusminusOperator>
                                                         <minusOperator>-</minusOperator>
                                                      </plusminusOperator>
                                                      <expression>
                                                         <primaryExpression>
                                                            <numberLiteral>
                                                               <decimalNumber>1</decimalNumber>
                                                            </numberLiteral>
                                                         </primaryExpression>
                                                      </expression>
                                                   </expression>]</expression>)</tupleExpression>
                                          </callArguments>
                                       </functionCall>
                                    </expression>
                                 </expression>
                              </expressionStatement>;</statement>
                           <statement>
                              <emitEventStatement>emit<identifier>Current</identifier>
                                 <callArguments>
                                    <tupleExpression>(<expression>
                                          <expression>
                                             <primaryExpression>
                                                <identifier>providers</identifier>
                                             </primaryExpression>
                                          </expression>[<expression>
                                             <expression>
                                                <primaryExpression>
                                                   <identifier>marker</identifier>
                                                </primaryExpression>
                                             </expression>
                                             <plusminusOperator>
                                                <minusOperator>-</minusOperator>
                                             </plusminusOperator>
                                             <expression>
                                                <primaryExpression>
                                                   <numberLiteral>
                                                      <decimalNumber>1</decimalNumber>
                                                   </numberLiteral>
                                                </primaryExpression>
                                             </expression>
                                          </expression>]</expression>,<expression>
                                          <primaryExpression>
                                             <identifier>quota</identifier>
                                          </primaryExpression>
                                       </expression>)</tupleExpression>
                                 </callArguments>
                              </emitEventStatement>;</statement>}</block>
                     </statement>
                  </ifStatement>
               </statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>keepAliveBlock</identifier>
                           </primaryExpression>
                        </expression>=<expression>
                           <environmentalVariable>block.number</environmentalVariable>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>}</contractDefinition>&lt;EOF&gt;</sourceUnit>