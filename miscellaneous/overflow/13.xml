<?xml version="1.0" encoding="UTF-8"?>
<sourceUnit>
   <pragmaDirective>pragma<pragmaSolidity>solidity<version>
            <versionOperator>^</versionOperator>
            <versionLiteral>0.4.4</versionLiteral>
         </version>
      </pragmaSolidity>;</pragmaDirective>
   <contractDefinition>contract<identifier>Token</identifier>{<contractPartDefinition>
         <functionDefinition>function<identifier>totalSupply</identifier>
            <parameterList>()</parameterList>
            <stateMutability>
               <constantType>constant</constantType>
            </stateMutability>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>uint256</elementaryTypeName>
                     </typeName>
                     <identifier>supply</identifier>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>balanceOf</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>_owner</identifier>
               </parameter>)</parameterList>
            <stateMutability>
               <constantType>constant</constantType>
            </stateMutability>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>uint256</elementaryTypeName>
                     </typeName>
                     <identifier>balance</identifier>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>transfer</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>_to</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>_value</identifier>
               </parameter>)</parameterList>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>bool</elementaryTypeName>
                     </typeName>
                     <identifier>success</identifier>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>transferFrom</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>_from</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>_to</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>_value</identifier>
               </parameter>)</parameterList>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>bool</elementaryTypeName>
                     </typeName>
                     <identifier>success</identifier>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>approve</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>_spender</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>_value</identifier>
               </parameter>)</parameterList>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>bool</elementaryTypeName>
                     </typeName>
                     <identifier>success</identifier>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>allowance</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>_owner</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>_spender</identifier>
               </parameter>)</parameterList>
            <stateMutability>
               <constantType>constant</constantType>
            </stateMutability>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>uint256</elementaryTypeName>
                     </typeName>
                     <identifier>remaining</identifier>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <eventDefinition>event<identifier>Transfer</identifier>
            <indexedParameterList>(<indexedParameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>indexed<identifier>_from</identifier>
               </indexedParameter>,<indexedParameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>indexed<identifier>_to</identifier>
               </indexedParameter>,<indexedParameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>_value</identifier>
               </indexedParameter>)</indexedParameterList>;</eventDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <eventDefinition>event<identifier>Approval</identifier>
            <indexedParameterList>(<indexedParameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>indexed<identifier>_owner</identifier>
               </indexedParameter>,<indexedParameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>indexed<identifier>_spender</identifier>
               </indexedParameter>,<indexedParameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>_value</identifier>
               </indexedParameter>)</indexedParameterList>;</eventDefinition>
      </contractPartDefinition>}</contractDefinition>
   <contractDefinition>contract<identifier>StandardToken</identifier>is<inheritanceSpecifier>
         <userDefinedTypeName>
            <identifier>Token</identifier>
         </userDefinedTypeName>
      </inheritanceSpecifier>{<contractPartDefinition>
         <functionDefinition>function<identifier>transfer</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>_to</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>_value</identifier>
               </parameter>)</parameterList>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>bool</elementaryTypeName>
                     </typeName>
                     <identifier>success</identifier>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{<statement>
                  <ifStatement>if(<condition>
                        <expression>
                           <expression>
                              <expression>
                                 <expression>
                                    <primaryExpression>
                                       <identifier>balances</identifier>
                                    </primaryExpression>
                                 </expression>[<expression>
                                    <environmentalVariable>msg.sender</environmentalVariable>
                                 </expression>]</expression>&gt;=<expression>
                                 <primaryExpression>
                                    <identifier>_value</identifier>
                                 </primaryExpression>
                              </expression>
                           </expression>&amp;&amp;<expression>
                              <expression>
                                 <primaryExpression>
                                    <identifier>_value</identifier>
                                 </primaryExpression>
                              </expression>&gt;<expression>
                                 <primaryExpression>
                                    <numberLiteral>
                                       <decimalNumber>0</decimalNumber>
                                    </numberLiteral>
                                 </primaryExpression>
                              </expression>
                           </expression>
                        </expression>
                     </condition>)<statement>
                        <block>{<statement>
                              <expressionStatement>
                                 <expression>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>balances</identifier>
                                          </primaryExpression>
                                       </expression>[<expression>
                                          <environmentalVariable>msg.sender</environmentalVariable>
                                       </expression>]</expression>
                                    <lvalueOperator>
                                       <minusLvalueOperator>-=</minusLvalueOperator>
                                    </lvalueOperator>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>_value</identifier>
                                       </primaryExpression>
                                    </expression>
                                 </expression>
                              </expressionStatement>;</statement>
                           <statement>
                              <expressionStatement>
                                 <expression>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>balances</identifier>
                                          </primaryExpression>
                                       </expression>[<expression>
                                          <primaryExpression>
                                             <identifier>_to</identifier>
                                          </primaryExpression>
                                       </expression>]</expression>
                                    <lvalueOperator>
                                       <plusLvalueOperator>+=</plusLvalueOperator>
                                    </lvalueOperator>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>_value</identifier>
                                       </primaryExpression>
                                    </expression>
                                 </expression>
                              </expressionStatement>;</statement>
                           <statement>
                              <expressionStatement>
                                 <expression>
                                    <functionCall>
                                       <functionName>
                                          <identifier>Transfer</identifier>
                                       </functionName>
                                       <callArguments>
                                          <tupleExpression>(<expression>
                                                <environmentalVariable>msg.sender</environmentalVariable>
                                             </expression>,<expression>
                                                <primaryExpression>
                                                   <identifier>_to</identifier>
                                                </primaryExpression>
                                             </expression>,<expression>
                                                <primaryExpression>
                                                   <identifier>_value</identifier>
                                                </primaryExpression>
                                             </expression>)</tupleExpression>
                                       </callArguments>
                                    </functionCall>
                                 </expression>
                              </expressionStatement>;</statement>
                           <statement>
                              <returnStatement>return<expression>
                                    <primaryExpression>
                                       <booleanLiteral>true</booleanLiteral>
                                    </primaryExpression>
                                 </expression>
                              </returnStatement>;</statement>}</block>
                     </statement>else<statement>
                        <block>{<statement>
                              <returnStatement>return<expression>
                                    <primaryExpression>
                                       <booleanLiteral>false</booleanLiteral>
                                    </primaryExpression>
                                 </expression>
                              </returnStatement>;</statement>}</block>
                     </statement>
                  </ifStatement>
               </statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>transferFrom</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>_from</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>_to</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>_value</identifier>
               </parameter>)</parameterList>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>bool</elementaryTypeName>
                     </typeName>
                     <identifier>success</identifier>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{<statement>
                  <ifStatement>if(<condition>
                        <expression>
                           <expression>
                              <expression>
                                 <expression>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>balances</identifier>
                                       </primaryExpression>
                                    </expression>[<expression>
                                       <primaryExpression>
                                          <identifier>_from</identifier>
                                       </primaryExpression>
                                    </expression>]</expression>&gt;=<expression>
                                    <primaryExpression>
                                       <identifier>_value</identifier>
                                    </primaryExpression>
                                 </expression>
                              </expression>&amp;&amp;<expression>
                                 <expression>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>allowed</identifier>
                                          </primaryExpression>
                                       </expression>[<expression>
                                          <primaryExpression>
                                             <identifier>_from</identifier>
                                          </primaryExpression>
                                       </expression>]</expression>[<expression>
                                       <environmentalVariable>msg.sender</environmentalVariable>
                                    </expression>]</expression>&gt;=<expression>
                                    <primaryExpression>
                                       <identifier>_value</identifier>
                                    </primaryExpression>
                                 </expression>
                              </expression>
                           </expression>&amp;&amp;<expression>
                              <expression>
                                 <primaryExpression>
                                    <identifier>_value</identifier>
                                 </primaryExpression>
                              </expression>&gt;<expression>
                                 <primaryExpression>
                                    <numberLiteral>
                                       <decimalNumber>0</decimalNumber>
                                    </numberLiteral>
                                 </primaryExpression>
                              </expression>
                           </expression>
                        </expression>
                     </condition>)<statement>
                        <block>{<statement>
                              <expressionStatement>
                                 <expression>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>balances</identifier>
                                          </primaryExpression>
                                       </expression>[<expression>
                                          <primaryExpression>
                                             <identifier>_to</identifier>
                                          </primaryExpression>
                                       </expression>]</expression>
                                    <lvalueOperator>
                                       <plusLvalueOperator>+=</plusLvalueOperator>
                                    </lvalueOperator>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>_value</identifier>
                                       </primaryExpression>
                                    </expression>
                                 </expression>
                              </expressionStatement>;</statement>
                           <statement>
                              <expressionStatement>
                                 <expression>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>balances</identifier>
                                          </primaryExpression>
                                       </expression>[<expression>
                                          <primaryExpression>
                                             <identifier>_from</identifier>
                                          </primaryExpression>
                                       </expression>]</expression>
                                    <lvalueOperator>
                                       <minusLvalueOperator>-=</minusLvalueOperator>
                                    </lvalueOperator>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>_value</identifier>
                                       </primaryExpression>
                                    </expression>
                                 </expression>
                              </expressionStatement>;</statement>
                           <statement>
                              <expressionStatement>
                                 <expression>
                                    <expression>
                                       <expression>
                                          <expression>
                                             <primaryExpression>
                                                <identifier>allowed</identifier>
                                             </primaryExpression>
                                          </expression>[<expression>
                                             <primaryExpression>
                                                <identifier>_from</identifier>
                                             </primaryExpression>
                                          </expression>]</expression>[<expression>
                                          <environmentalVariable>msg.sender</environmentalVariable>
                                       </expression>]</expression>
                                    <lvalueOperator>
                                       <minusLvalueOperator>-=</minusLvalueOperator>
                                    </lvalueOperator>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>_value</identifier>
                                       </primaryExpression>
                                    </expression>
                                 </expression>
                              </expressionStatement>;</statement>
                           <statement>
                              <expressionStatement>
                                 <expression>
                                    <functionCall>
                                       <functionName>
                                          <identifier>Transfer</identifier>
                                       </functionName>
                                       <callArguments>
                                          <tupleExpression>(<expression>
                                                <primaryExpression>
                                                   <identifier>_from</identifier>
                                                </primaryExpression>
                                             </expression>,<expression>
                                                <primaryExpression>
                                                   <identifier>_to</identifier>
                                                </primaryExpression>
                                             </expression>,<expression>
                                                <primaryExpression>
                                                   <identifier>_value</identifier>
                                                </primaryExpression>
                                             </expression>)</tupleExpression>
                                       </callArguments>
                                    </functionCall>
                                 </expression>
                              </expressionStatement>;</statement>
                           <statement>
                              <returnStatement>return<expression>
                                    <primaryExpression>
                                       <booleanLiteral>true</booleanLiteral>
                                    </primaryExpression>
                                 </expression>
                              </returnStatement>;</statement>}</block>
                     </statement>else<statement>
                        <block>{<statement>
                              <returnStatement>return<expression>
                                    <primaryExpression>
                                       <booleanLiteral>false</booleanLiteral>
                                    </primaryExpression>
                                 </expression>
                              </returnStatement>;</statement>}</block>
                     </statement>
                  </ifStatement>
               </statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>balanceOf</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>_owner</identifier>
               </parameter>)</parameterList>
            <stateMutability>
               <constantType>constant</constantType>
            </stateMutability>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>uint256</elementaryTypeName>
                     </typeName>
                     <identifier>balance</identifier>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{<statement>
                  <returnStatement>return<expression>
                        <expression>
                           <primaryExpression>
                              <identifier>balances</identifier>
                           </primaryExpression>
                        </expression>[<expression>
                           <primaryExpression>
                              <identifier>_owner</identifier>
                           </primaryExpression>
                        </expression>]</expression>
                  </returnStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>approve</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>_spender</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>_value</identifier>
               </parameter>)</parameterList>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>bool</elementaryTypeName>
                     </typeName>
                     <identifier>success</identifier>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <expression>
                              <expression>
                                 <primaryExpression>
                                    <identifier>allowed</identifier>
                                 </primaryExpression>
                              </expression>[<expression>
                                 <environmentalVariable>msg.sender</environmentalVariable>
                              </expression>]</expression>[<expression>
                              <primaryExpression>
                                 <identifier>_spender</identifier>
                              </primaryExpression>
                           </expression>]</expression>=<expression>
                           <primaryExpression>
                              <identifier>_value</identifier>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>Approval</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <environmentalVariable>msg.sender</environmentalVariable>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <identifier>_spender</identifier>
                                    </primaryExpression>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <identifier>_value</identifier>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <returnStatement>return<expression>
                        <primaryExpression>
                           <booleanLiteral>true</booleanLiteral>
                        </primaryExpression>
                     </expression>
                  </returnStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>allowance</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>_owner</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>_spender</identifier>
               </parameter>)</parameterList>
            <stateMutability>
               <constantType>constant</constantType>
            </stateMutability>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>uint256</elementaryTypeName>
                     </typeName>
                     <identifier>remaining</identifier>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{<statement>
                  <returnStatement>return<expression>
                        <expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>allowed</identifier>
                              </primaryExpression>
                           </expression>[<expression>
                              <primaryExpression>
                                 <identifier>_owner</identifier>
                              </primaryExpression>
                           </expression>]</expression>[<expression>
                           <primaryExpression>
                              <identifier>_spender</identifier>
                           </primaryExpression>
                        </expression>]</expression>
                  </returnStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <mappingSt>mapping(<typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>=&gt;<typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>)</mappingSt>
            </typeName>
            <identifier>balances</identifier>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <mappingSt>mapping(<typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>=&gt;<typeName>
                     <mappingSt>mapping(<typeName>
                           <elementaryTypeName>address</elementaryTypeName>
                        </typeName>=&gt;<typeName>
                           <elementaryTypeName>uint256</elementaryTypeName>
                        </typeName>)</mappingSt>
                  </typeName>)</mappingSt>
            </typeName>
            <identifier>allowed</identifier>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>uint256</elementaryTypeName>
            </typeName>
            <visibleType>public</visibleType>
            <identifier>totalSupply</identifier>;</stateVariableDeclaration>
      </contractPartDefinition>}</contractDefinition>
   <contractDefinition>contract<identifier>Margintradingtoken</identifier>is<inheritanceSpecifier>
         <userDefinedTypeName>
            <identifier>StandardToken</identifier>
         </userDefinedTypeName>
      </inheritanceSpecifier>{<contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>string</elementaryTypeName>
            </typeName>
            <visibleType>public</visibleType>
            <identifier>name</identifier>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>uint8</elementaryTypeName>
            </typeName>
            <visibleType>public</visibleType>
            <identifier>decimals</identifier>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>string</elementaryTypeName>
            </typeName>
            <visibleType>public</visibleType>
            <identifier>symbol</identifier>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>string</elementaryTypeName>
            </typeName>
            <visibleType>public</visibleType>
            <identifier>version</identifier>=<expression>
               <primaryExpression>
                  <stringLiteral>H1.0</stringLiteral>
               </primaryExpression>
            </expression>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>uint256</elementaryTypeName>
            </typeName>
            <visibleType>public</visibleType>
            <identifier>unitsOneEthCanBuy</identifier>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>uint256</elementaryTypeName>
            </typeName>
            <visibleType>public</visibleType>
            <identifier>totalEthInWei</identifier>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>address</elementaryTypeName>
            </typeName>
            <visibleType>public</visibleType>
            <identifier>fundsWallet</identifier>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>Margintradingtoken</identifier>
            <parameterList>()</parameterList>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>balances</identifier>
                              </primaryExpression>
                           </expression>[<expression>
                              <environmentalVariable>msg.sender</environmentalVariable>
                           </expression>]</expression>=<expression>
                           <primaryExpression>
                              <numberLiteral>
                                 <decimalNumber>14000000000000000000000000</decimalNumber>
                              </numberLiteral>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>totalSupply</identifier>
                           </primaryExpression>
                        </expression>=<expression>
                           <primaryExpression>
                              <numberLiteral>
                                 <decimalNumber>14000000000000000000000000</decimalNumber>
                              </numberLiteral>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>name</identifier>
                           </primaryExpression>
                        </expression>=<expression>
                           <primaryExpression>
                              <stringLiteral>Margintradingtoken</stringLiteral>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>decimals</identifier>
                           </primaryExpression>
                        </expression>=<expression>
                           <primaryExpression>
                              <numberLiteral>
                                 <decimalNumber>18</decimalNumber>
                              </numberLiteral>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>symbol</identifier>
                           </primaryExpression>
                        </expression>=<expression>
                           <primaryExpression>
                              <stringLiteral>MTT</stringLiteral>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>unitsOneEthCanBuy</identifier>
                           </primaryExpression>
                        </expression>=<expression>
                           <primaryExpression>
                              <numberLiteral>
                                 <decimalNumber>4220</decimalNumber>
                              </numberLiteral>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>fundsWallet</identifier>
                           </primaryExpression>
                        </expression>=<expression>
                           <environmentalVariable>msg.sender</environmentalVariable>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionFallBackDefinition>function<parameterList>()</parameterList>
            <stateMutability>
               <payableType>payable</payableType>
            </stateMutability>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>totalEthInWei</identifier>
                           </primaryExpression>
                        </expression>=<expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>totalEthInWei</identifier>
                              </primaryExpression>
                           </expression>
                           <plusminusOperator>
                              <plusOperator>+</plusOperator>
                           </plusminusOperator>
                           <expression>
                              <environmentalVariable>msg.value</environmentalVariable>
                           </expression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <variableDeclaration>
                              <typeName>
                                 <elementaryTypeName>uint256</elementaryTypeName>
                              </typeName>
                              <identifier>amount</identifier>
                           </variableDeclaration>
                        </expression>=<expression>
                           <expression>
                              <environmentalVariable>msg.value</environmentalVariable>
                           </expression>
                           <muldivOperator>
                              <mulOperator>*</mulOperator>
                           </muldivOperator>
                           <expression>
                              <primaryExpression>
                                 <identifier>unitsOneEthCanBuy</identifier>
                              </primaryExpression>
                           </expression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>balances</identifier>
                                          </primaryExpression>
                                       </expression>[<expression>
                                          <primaryExpression>
                                             <identifier>fundsWallet</identifier>
                                          </primaryExpression>
                                       </expression>]</expression>&gt;=<expression>
                                       <primaryExpression>
                                          <identifier>amount</identifier>
                                       </primaryExpression>
                                    </expression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>balances</identifier>
                              </primaryExpression>
                           </expression>[<expression>
                              <primaryExpression>
                                 <identifier>fundsWallet</identifier>
                              </primaryExpression>
                           </expression>]</expression>=<expression>
                           <expression>
                              <expression>
                                 <primaryExpression>
                                    <identifier>balances</identifier>
                                 </primaryExpression>
                              </expression>[<expression>
                                 <primaryExpression>
                                    <identifier>fundsWallet</identifier>
                                 </primaryExpression>
                              </expression>]</expression>
                           <plusminusOperator>
                              <minusOperator>-</minusOperator>
                           </plusminusOperator>
                           <expression>
                              <primaryExpression>
                                 <identifier>amount</identifier>
                              </primaryExpression>
                           </expression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>balances</identifier>
                              </primaryExpression>
                           </expression>[<expression>
                              <environmentalVariable>msg.sender</environmentalVariable>
                           </expression>]</expression>=<expression>
                           <expression>
                              <expression>
                                 <primaryExpression>
                                    <identifier>balances</identifier>
                                 </primaryExpression>
                              </expression>[<expression>
                                 <environmentalVariable>msg.sender</environmentalVariable>
                              </expression>]</expression>
                           <plusminusOperator>
                              <plusOperator>+</plusOperator>
                           </plusminusOperator>
                           <expression>
                              <primaryExpression>
                                 <identifier>amount</identifier>
                              </primaryExpression>
                           </expression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>Transfer</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <primaryExpression>
                                       <identifier>fundsWallet</identifier>
                                    </primaryExpression>
                                 </expression>,<expression>
                                    <environmentalVariable>msg.sender</environmentalVariable>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <identifier>amount</identifier>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>fundsWallet</identifier>
                           </primaryExpression>
                        </expression>.<functionCall>
                           <functionName>
                              <identifier>transfer</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <environmentalVariable>msg.value</environmentalVariable>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>}</block>
         </functionFallBackDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>approveAndCall</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>_spender</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>_value</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>bytes</elementaryTypeName>
                  </typeName>
                  <identifier>_extraData</identifier>
               </parameter>)</parameterList>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>bool</elementaryTypeName>
                     </typeName>
                     <identifier>success</identifier>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <expression>
                              <expression>
                                 <primaryExpression>
                                    <identifier>allowed</identifier>
                                 </primaryExpression>
                              </expression>[<expression>
                                 <environmentalVariable>msg.sender</environmentalVariable>
                              </expression>]</expression>[<expression>
                              <primaryExpression>
                                 <identifier>_spender</identifier>
                              </primaryExpression>
                           </expression>]</expression>=<expression>
                           <primaryExpression>
                              <identifier>_value</identifier>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>Approval</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <environmentalVariable>msg.sender</environmentalVariable>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <identifier>_spender</identifier>
                                    </primaryExpression>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <identifier>_value</identifier>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <ifStatement>if(<condition>
                        <expression>!<expression>
                              <expression>
                                 <primaryExpression>
                                    <identifier>_spender</identifier>
                                 </primaryExpression>
                              </expression>.<functionCall>
                                 <functionName>
                                    <identifier>call</identifier>
                                 </functionName>
                                 <callArguments>
                                    <tupleExpression>(<expression>
                                          <typeConversion>
                                             <typeName>
                                                <elementaryTypeName>bytes4</elementaryTypeName>
                                             </typeName>(<expression>
                                                <typeConversion>
                                                   <typeName>
                                                      <elementaryTypeName>bytes32</elementaryTypeName>
                                                   </typeName>(<expression>
                                                      <functionCall>
                                                         <functionName>
                                                            <identifier>sha3</identifier>
                                                         </functionName>
                                                         <callArguments>
                                                            <tupleExpression>(<expression>
                                                                  <primaryExpression>
                                                                     <stringLiteral>receiveApproval(address,uint256,address,bytes)</stringLiteral>
                                                                  </primaryExpression>
                                                               </expression>)</tupleExpression>
                                                         </callArguments>
                                                      </functionCall>
                                                   </expression>)</typeConversion>
                                             </expression>)</typeConversion>
                                       </expression>,<expression>
                                          <environmentalVariable>msg.sender</environmentalVariable>
                                       </expression>,<expression>
                                          <primaryExpression>
                                             <identifier>_value</identifier>
                                          </primaryExpression>
                                       </expression>,<expression>
                                          <environmentalVariable>this</environmentalVariable>
                                       </expression>,<expression>
                                          <primaryExpression>
                                             <identifier>_extraData</identifier>
                                          </primaryExpression>
                                       </expression>)</tupleExpression>
                                 </callArguments>
                              </functionCall>
                           </expression>
                        </expression>
                     </condition>)<statement>
                        <block>{<statement>
                              <throwRevertStatement>throw</throwRevertStatement>;</statement>}</block>
                     </statement>
                  </ifStatement>
               </statement>
               <statement>
                  <returnStatement>return<expression>
                        <primaryExpression>
                           <booleanLiteral>true</booleanLiteral>
                        </primaryExpression>
                     </expression>
                  </returnStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>}</contractDefinition>&lt;EOF&gt;</sourceUnit>