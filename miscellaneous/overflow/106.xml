<?xml version="1.0" encoding="UTF-8"?>
<sourceUnit>
   <pragmaDirective>pragma<pragmaSolidity>solidity<version>
            <versionOperator>^</versionOperator>
            <versionLiteral>0.4.19</versionLiteral>
         </version>
      </pragmaSolidity>;</pragmaDirective>
   <interfaceDefinition>interface<identifier>tokenRecipient</identifier>{<contractPartDefinition>
         <functionDefinition>function<identifier>receiveApproval</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>_from</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>_value</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>_token</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>bytes</elementaryTypeName>
                  </typeName>
                  <identifier>_extraData</identifier>
               </parameter>)</parameterList>
            <visibleType>public</visibleType>;</functionDefinition>
      </contractPartDefinition>}</interfaceDefinition>
   <contractDefinition>contract<identifier>DDPC</identifier>{<contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>string</elementaryTypeName>
            </typeName>
            <visibleType>public</visibleType>
            <identifier>name</identifier>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>string</elementaryTypeName>
            </typeName>
            <visibleType>public</visibleType>
            <identifier>symbol</identifier>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>uint8</elementaryTypeName>
            </typeName>
            <visibleType>public</visibleType>
            <identifier>decimals</identifier>=<expression>
               <primaryExpression>
                  <numberLiteral>
                     <decimalNumber>18</decimalNumber>
                  </numberLiteral>
               </primaryExpression>
            </expression>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>uint256</elementaryTypeName>
            </typeName>
            <visibleType>public</visibleType>
            <identifier>totalSupply</identifier>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>DDPC</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>initialSupply</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>string</elementaryTypeName>
                  </typeName>
                  <identifier>tokenName</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>string</elementaryTypeName>
                  </typeName>
                  <identifier>tokenSymbol</identifier>
               </parameter>)</parameterList>
            <visibleType>public</visibleType>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>totalSupply</identifier>
                           </primaryExpression>
                        </expression>=<expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>initialSupply</identifier>
                              </primaryExpression>
                           </expression>
                           <muldivOperator>
                              <mulOperator>*</mulOperator>
                           </muldivOperator>
                           <expression>
                              <expression>
                                 <primaryExpression>
                                    <numberLiteral>
                                       <decimalNumber>10</decimalNumber>
                                    </numberLiteral>
                                 </primaryExpression>
                              </expression>
                              <powerOperator>**</powerOperator>
                              <expression>
                                 <typeConversion>
                                    <typeName>
                                       <elementaryTypeName>uint256</elementaryTypeName>
                                    </typeName>(<expression>
                                       <primaryExpression>
                                          <identifier>decimals</identifier>
                                       </primaryExpression>
                                    </expression>)</typeConversion>
                              </expression>
                           </expression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>balanceOf</identifier>
                              </primaryExpression>
                           </expression>[<expression>
                              <environmentalVariable>msg.sender</environmentalVariable>
                           </expression>]</expression>=<expression>
                           <primaryExpression>
                              <identifier>totalSupply</identifier>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>name</identifier>
                           </primaryExpression>
                        </expression>=<expression>
                           <primaryExpression>
                              <identifier>tokenName</identifier>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>symbol</identifier>
                           </primaryExpression>
                        </expression>=<expression>
                           <primaryExpression>
                              <identifier>tokenSymbol</identifier>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>burn</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>_value</identifier>
               </parameter>)</parameterList>
            <visibleType>public</visibleType>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>bool</elementaryTypeName>
                     </typeName>
                     <identifier>success</identifier>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>balanceOf</identifier>
                                          </primaryExpression>
                                       </expression>[<expression>
                                          <environmentalVariable>msg.sender</environmentalVariable>
                                       </expression>]</expression>&gt;=<expression>
                                       <primaryExpression>
                                          <identifier>_value</identifier>
                                       </primaryExpression>
                                    </expression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>balanceOf</identifier>
                              </primaryExpression>
                           </expression>[<expression>
                              <environmentalVariable>msg.sender</environmentalVariable>
                           </expression>]</expression>
                        <lvalueOperator>
                           <minusLvalueOperator>-=</minusLvalueOperator>
                        </lvalueOperator>
                        <expression>
                           <primaryExpression>
                              <identifier>_value</identifier>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>totalSupply</identifier>
                           </primaryExpression>
                        </expression>
                        <lvalueOperator>
                           <minusLvalueOperator>-=</minusLvalueOperator>
                        </lvalueOperator>
                        <expression>
                           <primaryExpression>
                              <identifier>_value</identifier>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>Burn</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <environmentalVariable>msg.sender</environmentalVariable>
                                 </expression>,<expression>
                                    <primaryExpression>
                                       <identifier>_value</identifier>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <returnStatement>return<expression>
                        <primaryExpression>
                           <booleanLiteral>true</booleanLiteral>
                        </primaryExpression>
                     </expression>
                  </returnStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
   </contractDefinition>&lt;EOF&gt;</sourceUnit>