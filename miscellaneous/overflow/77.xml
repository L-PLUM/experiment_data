<?xml version="1.0" encoding="UTF-8"?>
<sourceUnit>
   <pragmaDirective>pragma<pragmaSolidity>solidity<version>
            <versionOperator>^</versionOperator>
            <versionLiteral>0.5.7</versionLiteral>
         </version>
      </pragmaSolidity>;</pragmaDirective>
   <contractDefinition>contract<identifier>Master</identifier>{<contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>address payable</elementaryTypeName>
            </typeName>
            <identifier>ownerAddress</identifier>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>address</elementaryTypeName>
            </typeName>
            <constantType>constant</constantType>
            <identifier>oracleAddress</identifier>=<expression>
               <primaryExpression>
                  <numberLiteral>
                     <hexNumber>0xE8013bD526100Ebf67ace0E0F21a296D8974f0A4</hexNumber>
                  </numberLiteral>
               </primaryExpression>
            </expression>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <mappingSt>mapping(<typeName>
                     <elementaryTypeName>uint</elementaryTypeName>
                  </typeName>=&gt;<typeName>
                     <elementaryTypeName>bool</elementaryTypeName>
                  </typeName>)</mappingSt>
            </typeName>
            <visibleType>public</visibleType>
            <identifier>validDueDate</identifier>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <eventDefinition>event<identifier>NewContract</identifier>
            <indexedParameterList>(<indexedParameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>contractAddress</identifier>
               </indexedParameter>)</indexedParameterList>;</eventDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <modifierDefinition>modifier<identifier>onlyByOwner</identifier>
            <parameterList>()</parameterList>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <environmentalVariable>msg.sender</environmentalVariable>
                                    </expression>
                                    <comparison>==</comparison>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>ownerAddress</identifier>
                                       </primaryExpression>
                                    </expression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <placeholderStatement>_</placeholderStatement>;</statement>}</block>
         </modifierDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>constructor<parameterList>()</parameterList>
            <visibleType>public</visibleType>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>ownerAddress</identifier>
                           </primaryExpression>
                        </expression>=<expression>
                           <environmentalVariable>msg.sender</environmentalVariable>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>createConditionalPayment</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>address payable</elementaryTypeName>
                  </typeName>
                  <identifier>creator</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>bool</elementaryTypeName>
                  </typeName>
                  <identifier>long</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>dueDate</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>strikePrice</identifier>
               </parameter>)</parameterList>
            <stateMutability>
               <payableType>payable</payableType>
            </stateMutability>
            <visibleType>public</visibleType>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>address</elementaryTypeName>
                     </typeName>
                     <identifier>newDerivativeAddress</identifier>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>validDueDate</identifier>
                                       </primaryExpression>
                                    </expression>[<expression>
                                       <primaryExpression>
                                          <identifier>dueDate</identifier>
                                       </primaryExpression>
                                    </expression>]</expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <variableDeclaration>
                              <typeName>
                                 <userDefinedTypeName>
                                    <identifier>ConditionalPayment</identifier>
                                 </userDefinedTypeName>
                              </typeName>
                              <identifier>conditionalPayment</identifier>
                           </variableDeclaration>
                        </expression>=<expression>
                           <functionCall>
                              <functionName>(<functionName>
                                    <newConrtact>new<identifier>ConditionalPayment</identifier>
                                    </newConrtact>
                                 </functionName>)</functionName>
                              <value>.value(<expression>
                                    <environmentalVariable>msg.value</environmentalVariable>
                                 </expression>)</value>
                              <callArguments>
                                 <tupleExpression>(<expression>
                                       <primaryExpression>
                                          <identifier>creator</identifier>
                                       </primaryExpression>
                                    </expression>,<expression>
                                       <primaryExpression>
                                          <identifier>long</identifier>
                                       </primaryExpression>
                                    </expression>,<expression>
                                       <primaryExpression>
                                          <identifier>dueDate</identifier>
                                       </primaryExpression>
                                    </expression>,<expression>
                                       <primaryExpression>
                                          <identifier>strikePrice</identifier>
                                       </primaryExpression>
                                    </expression>)</tupleExpression>
                              </callArguments>
                           </functionCall>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <emitEventStatement>emit<identifier>NewContract</identifier>
                     <callArguments>
                        <tupleExpression>(<expression>
                              <typeConversion>
                                 <typeName>
                                    <elementaryTypeName>address</elementaryTypeName>
                                 </typeName>(<expression>
                                    <primaryExpression>
                                       <identifier>conditionalPayment</identifier>
                                    </primaryExpression>
                                 </expression>)</typeConversion>
                           </expression>)</tupleExpression>
                     </callArguments>
                  </emitEventStatement>;</statement>
               <statement>
                  <returnStatement>return<expression>
                        <typeConversion>
                           <typeName>
                              <elementaryTypeName>address</elementaryTypeName>
                           </typeName>(<expression>
                              <primaryExpression>
                                 <identifier>conditionalPayment</identifier>
                              </primaryExpression>
                           </expression>)</typeConversion>
                     </expression>
                  </returnStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>settle</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>dueDate</identifier>
               </parameter>)</parameterList>
            <visibleType>public</visibleType>
            <stateMutability>
               <payableType>payable</payableType>
            </stateMutability>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>uint256</elementaryTypeName>
                     </typeName>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <variableDeclaration>
                              <typeName>
                                 <userDefinedTypeName>
                                    <identifier>Oracle</identifier>
                                 </userDefinedTypeName>
                              </typeName>
                              <identifier>o</identifier>
                           </variableDeclaration>
                        </expression>=<expression>
                           <functionCall>
                              <functionName>
                                 <identifier>Oracle</identifier>
                              </functionName>
                              <callArguments>
                                 <tupleExpression>(<expression>
                                       <primaryExpression>
                                          <identifier>oracleAddress</identifier>
                                       </primaryExpression>
                                    </expression>)</tupleExpression>
                              </callArguments>
                           </functionCall>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <returnStatement>return<expression>
                        <expression>
                           <primaryExpression>
                              <identifier>o</identifier>
                           </primaryExpression>
                        </expression>.<functionCall>
                           <functionName>
                              <identifier>sendPrice</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <primaryExpression>
                                       <identifier>dueDate</identifier>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </returnStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>setValidDueDate</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>uint</elementaryTypeName>
                  </typeName>
                  <identifier>dueDate</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>bool</elementaryTypeName>
                  </typeName>
                  <identifier>valid</identifier>
               </parameter>)</parameterList>
            <visibleType>public</visibleType>
            <identifier>onlyByOwner</identifier>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>validDueDate</identifier>
                              </primaryExpression>
                           </expression>[<expression>
                              <primaryExpression>
                                 <identifier>dueDate</identifier>
                              </primaryExpression>
                           </expression>]</expression>=<expression>
                           <primaryExpression>
                              <identifier>valid</identifier>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>withdrawFees</identifier>
            <parameterList>()</parameterList>
            <visibleType>public</visibleType>
            <identifier>onlyByOwner</identifier>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <environmentalVariable>msg.sender</environmentalVariable>
                        </expression>.<functionCall>
                           <functionName>
                              <identifier>transfer</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <typeConversion>
                                          <typeName>
                                             <elementaryTypeName>address</elementaryTypeName>
                                          </typeName>(<expression>
                                             <environmentalVariable>this</environmentalVariable>
                                          </expression>)</typeConversion>
                                    </expression>.balance</expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>balanceOfFactory</identifier>
            <parameterList>()</parameterList>
            <visibleType>public</visibleType>
            <stateMutability>
               <viewType>view</viewType>
            </stateMutability>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>uint256</elementaryTypeName>
                     </typeName>
                  </parameter>)</parameterList>
            </returnsParameters>
            <block>{<statement>
                  <returnStatement>return<expression>
                        <tupleExpression>(<expression>
                              <expression>
                                 <typeConversion>
                                    <typeName>
                                       <elementaryTypeName>address</elementaryTypeName>
                                    </typeName>(<expression>
                                       <environmentalVariable>this</environmentalVariable>
                                    </expression>)</typeConversion>
                              </expression>.balance</expression>)</tupleExpression>
                     </expression>
                  </returnStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>}</contractDefinition>
   <contractDefinition>contract<identifier>ConditionalPayment</identifier>{<contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>address payable</elementaryTypeName>
            </typeName>
            <visibleType>public</visibleType>
            <identifier>masterAddress</identifier>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>address</elementaryTypeName>
            </typeName>
            <constantType>constant</constantType>
            <visibleType>public</visibleType>
            <identifier>withdrawFunctionsAddress</identifier>=<expression>
               <primaryExpression>
                  <numberLiteral>
                     <hexNumber>0x0b564F0aD4dcb35Cd43eff2f26Bf96B670eaBF5e</hexNumber>
                  </numberLiteral>
               </primaryExpression>
            </expression>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>address payable</elementaryTypeName>
            </typeName>
            <visibleType>public</visibleType>
            <identifier>creator</identifier>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>uint256</elementaryTypeName>
            </typeName>
            <visibleType>public</visibleType>
            <identifier>dueDate</identifier>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>uint256</elementaryTypeName>
            </typeName>
            <visibleType>public</visibleType>
            <identifier>strikePrice</identifier>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>bool</elementaryTypeName>
            </typeName>
            <visibleType>public</visibleType>
            <identifier>creatorLong</identifier>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>uint8</elementaryTypeName>
            </typeName>
            <visibleType>public</visibleType>
            <identifier>countCounterparties</identifier>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>bool</elementaryTypeName>
            </typeName>
            <visibleType>public</visibleType>
            <identifier>isSettled</identifier>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>uint256</elementaryTypeName>
            </typeName>
            <visibleType>public</visibleType>
            <identifier>settlementPrice</identifier>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <elementaryTypeName>uint256</elementaryTypeName>
            </typeName>
            <visibleType>public</visibleType>
            <identifier>totalStakeCounterparties</identifier>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <stateVariableDeclaration>
            <typeName>
               <mappingSt>mapping(<typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>=&gt;<typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>)</mappingSt>
            </typeName>
            <visibleType>public</visibleType>
            <identifier>stakes</identifier>;</stateVariableDeclaration>
      </contractPartDefinition>
      <contractPartDefinition>
         <eventDefinition>event<identifier>ContractAltered</identifier>
            <indexedParameterList>()</indexedParameterList>;</eventDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <eventDefinition>event<identifier>UpdatedParticipant</identifier>
            <indexedParameterList>(<indexedParameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>indexed<identifier>participant</identifier>
               </indexedParameter>,<indexedParameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>stake</identifier>
               </indexedParameter>)</indexedParameterList>;</eventDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <modifierDefinition>modifier<identifier>onlyByCreator</identifier>
            <parameterList>()</parameterList>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <environmentalVariable>msg.sender</environmentalVariable>
                                    </expression>
                                    <comparison>==</comparison>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>creator</identifier>
                                       </primaryExpression>
                                    </expression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <placeholderStatement>_</placeholderStatement>;</statement>}</block>
         </modifierDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <modifierDefinition>modifier<identifier>onlyIncremental</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>uint</elementaryTypeName>
                  </typeName>
                  <identifier>amount</identifier>
               </parameter>)</parameterList>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>amount</identifier>
                                          </primaryExpression>
                                       </expression>
                                       <muldivOperator>
                                          <divRemOperator>%</divRemOperator>
                                       </muldivOperator>
                                       <expression>
                                          <tupleExpression>(<expression>
                                                <primaryExpression>
                                                   <numberLiteral>
                                                      <decimalNumber>0.1</decimalNumber>
                                                      <numberUnit>ether</numberUnit>
                                                   </numberLiteral>
                                                </primaryExpression>
                                             </expression>)</tupleExpression>
                                       </expression>
                                    </expression>
                                    <comparison>==</comparison>
                                    <expression>
                                       <primaryExpression>
                                          <numberLiteral>
                                             <decimalNumber>0</decimalNumber>
                                          </numberLiteral>
                                       </primaryExpression>
                                    </expression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <placeholderStatement>_</placeholderStatement>;</statement>}</block>
         </modifierDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <modifierDefinition>modifier<identifier>nonZeroMsgValue</identifier>
            <parameterList>()</parameterList>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <environmentalVariable>msg.value</environmentalVariable>
                                    </expression>&gt;<expression>
                                       <primaryExpression>
                                          <numberLiteral>
                                             <decimalNumber>0</decimalNumber>
                                          </numberLiteral>
                                       </primaryExpression>
                                    </expression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <placeholderStatement>_</placeholderStatement>;</statement>}</block>
         </modifierDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <modifierDefinition>modifier<identifier>dueDateInFuture</identifier>
            <parameterList>()</parameterList>
            <block>{<statement>
                  <placeholderStatement>_</placeholderStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <environmentalVariable>now</environmentalVariable>
                                    </expression>&lt;<expression>
                                       <primaryExpression>
                                          <identifier>dueDate</identifier>
                                       </primaryExpression>
                                    </expression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>}</block>
         </modifierDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <modifierDefinition>modifier<identifier>nonZeroStrikePrice</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>newStrikePrice</identifier>
               </parameter>)</parameterList>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>newStrikePrice</identifier>
                                       </primaryExpression>
                                    </expression>&gt;<expression>
                                       <primaryExpression>
                                          <numberLiteral>
                                             <decimalNumber>0</decimalNumber>
                                          </numberLiteral>
                                       </primaryExpression>
                                    </expression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <placeholderStatement>_</placeholderStatement>;</statement>}</block>
         </modifierDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <modifierDefinition>modifier<identifier>emitsContractAlteredEvent</identifier>
            <parameterList>()</parameterList>
            <block>{<statement>
                  <placeholderStatement>_</placeholderStatement>;</statement>
               <statement>
                  <emitEventStatement>emit<identifier>ContractAltered</identifier>
                     <callArguments>
                        <tupleExpression>()</tupleExpression>
                     </callArguments>
                  </emitEventStatement>;</statement>}</block>
         </modifierDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <modifierDefinition>modifier<identifier>emitsUpdatedParticipantEvent</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>address</elementaryTypeName>
                  </typeName>
                  <identifier>participant</identifier>
               </parameter>)</parameterList>
            <block>{<statement>
                  <placeholderStatement>_</placeholderStatement>;</statement>
               <statement>
                  <emitEventStatement>emit<identifier>UpdatedParticipant</identifier>
                     <callArguments>
                        <tupleExpression>(<expression>
                              <primaryExpression>
                                 <identifier>participant</identifier>
                              </primaryExpression>
                           </expression>,<expression>
                              <expression>
                                 <primaryExpression>
                                    <identifier>stakes</identifier>
                                 </primaryExpression>
                              </expression>[<expression>
                                 <primaryExpression>
                                    <identifier>participant</identifier>
                                 </primaryExpression>
                              </expression>]</expression>)</tupleExpression>
                     </callArguments>
                  </emitEventStatement>;</statement>}</block>
         </modifierDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>constructor<parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>address payable</elementaryTypeName>
                  </typeName>
                  <identifier>_creator</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>bool</elementaryTypeName>
                  </typeName>
                  <identifier>_long</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>_dueDate</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>_strikePrice</identifier>
               </parameter>)</parameterList>
            <stateMutability>
               <payableType>payable</payableType>
            </stateMutability>
            <visibleType>public</visibleType>
            <functionCall>
               <functionName>
                  <identifier>onlyIncremental</identifier>
               </functionName>
               <callArguments>
                  <tupleExpression>(<expression>
                        <environmentalVariable>msg.value</environmentalVariable>
                     </expression>)</tupleExpression>
               </callArguments>
            </functionCall>
            <functionCall>
               <functionName>
                  <identifier>nonZeroStrikePrice</identifier>
               </functionName>
               <callArguments>
                  <tupleExpression>(<expression>
                        <primaryExpression>
                           <identifier>_strikePrice</identifier>
                        </primaryExpression>
                     </expression>)</tupleExpression>
               </callArguments>
            </functionCall>
            <identifier>nonZeroMsgValue</identifier>
            <identifier>dueDateInFuture</identifier>
            <functionCall>
               <functionName>
                  <identifier>emitsUpdatedParticipantEvent</identifier>
               </functionName>
               <callArguments>
                  <tupleExpression>(<expression>
                        <primaryExpression>
                           <identifier>_creator</identifier>
                        </primaryExpression>
                     </expression>)</tupleExpression>
               </callArguments>
            </functionCall>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>masterAddress</identifier>
                           </primaryExpression>
                        </expression>=<expression>
                           <environmentalVariable>msg.sender</environmentalVariable>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>creator</identifier>
                           </primaryExpression>
                        </expression>=<expression>
                           <primaryExpression>
                              <identifier>_creator</identifier>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>creatorLong</identifier>
                           </primaryExpression>
                        </expression>=<expression>
                           <primaryExpression>
                              <identifier>_long</identifier>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>stakes</identifier>
                              </primaryExpression>
                           </expression>[<expression>
                              <primaryExpression>
                                 <identifier>creator</identifier>
                              </primaryExpression>
                           </expression>]</expression>=<expression>
                           <environmentalVariable>msg.value</environmentalVariable>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>strikePrice</identifier>
                           </primaryExpression>
                        </expression>=<expression>
                           <primaryExpression>
                              <identifier>_strikePrice</identifier>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>dueDate</identifier>
                           </primaryExpression>
                        </expression>=<expression>
                           <primaryExpression>
                              <identifier>_dueDate</identifier>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>changeStrikePrice</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>newStrikePrice</identifier>
               </parameter>)</parameterList>
            <visibleType>public</visibleType>
            <functionCall>
               <functionName>
                  <identifier>nonZeroStrikePrice</identifier>
               </functionName>
               <callArguments>
                  <tupleExpression>(<expression>
                        <primaryExpression>
                           <identifier>newStrikePrice</identifier>
                        </primaryExpression>
                     </expression>)</tupleExpression>
               </callArguments>
            </functionCall>
            <identifier>onlyByCreator</identifier>
            <identifier>emitsContractAlteredEvent</identifier>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>countCounterparties</identifier>
                                       </primaryExpression>
                                    </expression>
                                    <comparison>==</comparison>
                                    <expression>
                                       <primaryExpression>
                                          <numberLiteral>
                                             <decimalNumber>0</decimalNumber>
                                          </numberLiteral>
                                       </primaryExpression>
                                    </expression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>strikePrice</identifier>
                           </primaryExpression>
                        </expression>=<expression>
                           <primaryExpression>
                              <identifier>newStrikePrice</identifier>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>reduceStake</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>amount</identifier>
               </parameter>)</parameterList>
            <visibleType>public</visibleType>
            <identifier>onlyByCreator</identifier>
            <functionCall>
               <functionName>
                  <identifier>onlyIncremental</identifier>
               </functionName>
               <callArguments>
                  <tupleExpression>(<expression>
                        <primaryExpression>
                           <identifier>amount</identifier>
                        </primaryExpression>
                     </expression>)</tupleExpression>
               </callArguments>
            </functionCall>
            <identifier>emitsContractAlteredEvent</identifier>
            <functionCall>
               <functionName>
                  <identifier>emitsUpdatedParticipantEvent</identifier>
               </functionName>
               <callArguments>
                  <tupleExpression>(<expression>
                        <primaryExpression>
                           <identifier>creator</identifier>
                        </primaryExpression>
                     </expression>)</tupleExpression>
               </callArguments>
            </functionCall>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <variableDeclaration>
                              <typeName>
                                 <elementaryTypeName>uint256</elementaryTypeName>
                              </typeName>
                              <identifier>maxWithdrawAmount</identifier>
                           </variableDeclaration>
                        </expression>=<expression>
                           <expression>
                              <expression>
                                 <primaryExpression>
                                    <identifier>stakes</identifier>
                                 </primaryExpression>
                              </expression>[<expression>
                                 <environmentalVariable>msg.sender</environmentalVariable>
                              </expression>]</expression>
                           <plusminusOperator>
                              <minusOperator>-</minusOperator>
                           </plusminusOperator>
                           <expression>
                              <primaryExpression>
                                 <identifier>totalStakeCounterparties</identifier>
                              </primaryExpression>
                           </expression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <ifStatement>if(<condition>
                        <expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>amount</identifier>
                              </primaryExpression>
                           </expression>&lt;<expression>
                              <primaryExpression>
                                 <identifier>maxWithdrawAmount</identifier>
                              </primaryExpression>
                           </expression>
                        </expression>
                     </condition>)<statement>
                        <block>{<statement>
                              <expressionStatement>
                                 <expression>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>stakes</identifier>
                                          </primaryExpression>
                                       </expression>[<expression>
                                          <environmentalVariable>msg.sender</environmentalVariable>
                                       </expression>]</expression>
                                    <lvalueOperator>
                                       <minusLvalueOperator>-=</minusLvalueOperator>
                                    </lvalueOperator>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>amount</identifier>
                                       </primaryExpression>
                                    </expression>
                                 </expression>
                              </expressionStatement>;</statement>
                           <statement>
                              <expressionStatement>
                                 <expression>
                                    <expression>
                                       <environmentalVariable>msg.sender</environmentalVariable>
                                    </expression>.<functionCall>
                                       <functionName>
                                          <identifier>transfer</identifier>
                                       </functionName>
                                       <callArguments>
                                          <tupleExpression>(<expression>
                                                <primaryExpression>
                                                   <identifier>amount</identifier>
                                                </primaryExpression>
                                             </expression>)</tupleExpression>
                                       </callArguments>
                                    </functionCall>
                                 </expression>
                              </expressionStatement>;</statement>}</block>
                     </statement>else<statement>
                        <block>{<statement>
                              <expressionStatement>
                                 <expression>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>stakes</identifier>
                                          </primaryExpression>
                                       </expression>[<expression>
                                          <environmentalVariable>msg.sender</environmentalVariable>
                                       </expression>]</expression>
                                    <lvalueOperator>
                                       <minusLvalueOperator>-=</minusLvalueOperator>
                                    </lvalueOperator>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>maxWithdrawAmount</identifier>
                                       </primaryExpression>
                                    </expression>
                                 </expression>
                              </expressionStatement>;</statement>
                           <statement>
                              <expressionStatement>
                                 <expression>
                                    <expression>
                                       <environmentalVariable>msg.sender</environmentalVariable>
                                    </expression>.<functionCall>
                                       <functionName>
                                          <identifier>transfer</identifier>
                                       </functionName>
                                       <callArguments>
                                          <tupleExpression>(<expression>
                                                <primaryExpression>
                                                   <identifier>maxWithdrawAmount</identifier>
                                                </primaryExpression>
                                             </expression>)</tupleExpression>
                                       </callArguments>
                                    </functionCall>
                                 </expression>
                              </expressionStatement>;</statement>}</block>
                     </statement>
                  </ifStatement>
               </statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>addStake</identifier>
            <parameterList>()</parameterList>
            <visibleType>public</visibleType>
            <stateMutability>
               <payableType>payable</payableType>
            </stateMutability>
            <identifier>onlyByCreator</identifier>
            <functionCall>
               <functionName>
                  <identifier>onlyIncremental</identifier>
               </functionName>
               <callArguments>
                  <tupleExpression>(<expression>
                        <environmentalVariable>msg.value</environmentalVariable>
                     </expression>)</tupleExpression>
               </callArguments>
            </functionCall>
            <identifier>emitsContractAlteredEvent</identifier>
            <functionCall>
               <functionName>
                  <identifier>emitsUpdatedParticipantEvent</identifier>
               </functionName>
               <callArguments>
                  <tupleExpression>(<expression>
                        <primaryExpression>
                           <identifier>creator</identifier>
                        </primaryExpression>
                     </expression>)</tupleExpression>
               </callArguments>
            </functionCall>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>stakes</identifier>
                              </primaryExpression>
                           </expression>[<expression>
                              <environmentalVariable>msg.sender</environmentalVariable>
                           </expression>]</expression>
                        <lvalueOperator>
                           <plusLvalueOperator>+=</plusLvalueOperator>
                        </lvalueOperator>
                        <expression>
                           <environmentalVariable>msg.value</environmentalVariable>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>signContract</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>requestedStrikePrice</identifier>
               </parameter>)</parameterList>
            <stateMutability>
               <payableType>payable</payableType>
            </stateMutability>
            <visibleType>public</visibleType>
            <functionCall>
               <functionName>
                  <identifier>onlyIncremental</identifier>
               </functionName>
               <callArguments>
                  <tupleExpression>(<expression>
                        <environmentalVariable>msg.value</environmentalVariable>
                     </expression>)</tupleExpression>
               </callArguments>
            </functionCall>
            <identifier>nonZeroMsgValue</identifier>
            <identifier>dueDateInFuture</identifier>
            <identifier>emitsContractAlteredEvent</identifier>
            <functionCall>
               <functionName>
                  <identifier>emitsUpdatedParticipantEvent</identifier>
               </functionName>
               <callArguments>
                  <tupleExpression>(<expression>
                        <environmentalVariable>msg.sender</environmentalVariable>
                     </expression>)</tupleExpression>
               </callArguments>
            </functionCall>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <environmentalVariable>msg.sender</environmentalVariable>
                                    </expression>
                                    <comparison>!=</comparison>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>creator</identifier>
                                       </primaryExpression>
                                    </expression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>requestedStrikePrice</identifier>
                                       </primaryExpression>
                                    </expression>
                                    <comparison>==</comparison>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>strikePrice</identifier>
                                       </primaryExpression>
                                    </expression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <primaryExpression>
                              <identifier>totalStakeCounterparties</identifier>
                           </primaryExpression>
                        </expression>
                        <lvalueOperator>
                           <plusLvalueOperator>+=</plusLvalueOperator>
                        </lvalueOperator>
                        <expression>
                           <environmentalVariable>msg.value</environmentalVariable>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>totalStakeCounterparties</identifier>
                                       </primaryExpression>
                                    </expression>&lt;=<expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>stakes</identifier>
                                          </primaryExpression>
                                       </expression>[<expression>
                                          <primaryExpression>
                                             <identifier>creator</identifier>
                                          </primaryExpression>
                                       </expression>]</expression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <ifStatement>if(<condition>
                        <expression>
                           <expression>
                              <expression>
                                 <primaryExpression>
                                    <identifier>stakes</identifier>
                                 </primaryExpression>
                              </expression>[<expression>
                                 <environmentalVariable>msg.sender</environmentalVariable>
                              </expression>]</expression>
                           <comparison>==</comparison>
                           <expression>
                              <primaryExpression>
                                 <numberLiteral>
                                    <decimalNumber>0</decimalNumber>
                                 </numberLiteral>
                              </primaryExpression>
                           </expression>
                        </expression>
                     </condition>)<statement>
                        <block>{<statement>
                              <expressionStatement>
                                 <expression>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>countCounterparties</identifier>
                                       </primaryExpression>
                                    </expression>
                                    <lvalueOperator>
                                       <plusLvalueOperator>+=</plusLvalueOperator>
                                    </lvalueOperator>
                                    <expression>
                                       <primaryExpression>
                                          <numberLiteral>
                                             <decimalNumber>1</decimalNumber>
                                          </numberLiteral>
                                       </primaryExpression>
                                    </expression>
                                 </expression>
                              </expressionStatement>;</statement>}</block>
                     </statement>
                  </ifStatement>
               </statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>stakes</identifier>
                              </primaryExpression>
                           </expression>[<expression>
                              <environmentalVariable>msg.sender</environmentalVariable>
                           </expression>]</expression>
                        <lvalueOperator>
                           <plusLvalueOperator>+=</plusLvalueOperator>
                        </lvalueOperator>
                        <expression>
                           <environmentalVariable>msg.value</environmentalVariable>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>withdraw</identifier>
            <parameterList>()</parameterList>
            <visibleType>public</visibleType>
            <identifier>emitsContractAlteredEvent</identifier>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <environmentalVariable>now</environmentalVariable>
                                    </expression>&gt;<expression>
                                       <primaryExpression>
                                          <identifier>dueDate</identifier>
                                       </primaryExpression>
                                    </expression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>countCounterparties</identifier>
                                       </primaryExpression>
                                    </expression>&gt;<expression>
                                       <primaryExpression>
                                          <numberLiteral>
                                             <decimalNumber>0</decimalNumber>
                                          </numberLiteral>
                                       </primaryExpression>
                                    </expression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <ifStatement>if(<condition>
                        <expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>isSettled</identifier>
                              </primaryExpression>
                           </expression>
                           <comparison>==</comparison>
                           <expression>
                              <primaryExpression>
                                 <booleanLiteral>false</booleanLiteral>
                              </primaryExpression>
                           </expression>
                        </expression>
                     </condition>)<statement>
                        <block>{<statement>
                              <expressionStatement>
                                 <expression>
                                    <expression>
                                       <variableDeclaration>
                                          <typeName>
                                             <userDefinedTypeName>
                                                <identifier>Master</identifier>
                                             </userDefinedTypeName>
                                          </typeName>
                                          <identifier>m</identifier>
                                       </variableDeclaration>
                                    </expression>=<expression>
                                       <functionCall>
                                          <functionName>
                                             <identifier>Master</identifier>
                                          </functionName>
                                          <callArguments>
                                             <tupleExpression>(<expression>
                                                   <primaryExpression>
                                                      <identifier>masterAddress</identifier>
                                                   </primaryExpression>
                                                </expression>)</tupleExpression>
                                          </callArguments>
                                       </functionCall>
                                    </expression>
                                 </expression>
                              </expressionStatement>;</statement>
                           <statement>
                              <expressionStatement>
                                 <expression>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>settlementPrice</identifier>
                                       </primaryExpression>
                                    </expression>=<expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>m</identifier>
                                          </primaryExpression>
                                       </expression>.<functionCall>
                                          <functionName>
                                             <identifier>settle</identifier>
                                          </functionName>
                                          <value>.value(<expression>
                                                <expression>
                                                   <primaryExpression>
                                                      <identifier>totalStakeCounterparties</identifier>
                                                   </primaryExpression>
                                                </expression>
                                                <muldivOperator>
                                                   <divOperator>/</divOperator>
                                                </muldivOperator>
                                                <expression>
                                                   <primaryExpression>
                                                      <numberLiteral>
                                                         <decimalNumber>200</decimalNumber>
                                                      </numberLiteral>
                                                   </primaryExpression>
                                                </expression>
                                             </expression>)</value>
                                          <callArguments>
                                             <tupleExpression>(<expression>
                                                   <primaryExpression>
                                                      <identifier>dueDate</identifier>
                                                   </primaryExpression>
                                                </expression>)</tupleExpression>
                                          </callArguments>
                                       </functionCall>
                                    </expression>
                                 </expression>
                              </expressionStatement>;</statement>
                           <statement>
                              <expressionStatement>
                                 <expression>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>isSettled</identifier>
                                       </primaryExpression>
                                    </expression>=<expression>
                                       <primaryExpression>
                                          <booleanLiteral>true</booleanLiteral>
                                       </primaryExpression>
                                    </expression>
                                 </expression>
                              </expressionStatement>;</statement>}</block>
                     </statement>
                  </ifStatement>
               </statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <variableDeclaration>
                              <typeName>
                                 <elementaryTypeName>uint256</elementaryTypeName>
                              </typeName>
                              <identifier>stakeMemory</identifier>
                           </variableDeclaration>
                        </expression>=<expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>stakes</identifier>
                              </primaryExpression>
                           </expression>[<expression>
                              <environmentalVariable>msg.sender</environmentalVariable>
                           </expression>]</expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <variableDeclaration>
                              <typeName>
                                 <userDefinedTypeName>
                                    <identifier>Withdraw</identifier>
                                 </userDefinedTypeName>
                              </typeName>
                              <identifier>w</identifier>
                           </variableDeclaration>
                        </expression>=<expression>
                           <functionCall>
                              <functionName>
                                 <identifier>Withdraw</identifier>
                              </functionName>
                              <callArguments>
                                 <tupleExpression>(<expression>
                                       <primaryExpression>
                                          <identifier>withdrawFunctionsAddress</identifier>
                                       </primaryExpression>
                                    </expression>)</tupleExpression>
                              </callArguments>
                           </functionCall>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <ifStatement>if(<condition>
                        <expression>
                           <expression>
                              <environmentalVariable>msg.sender</environmentalVariable>
                           </expression>
                           <comparison>==</comparison>
                           <expression>
                              <primaryExpression>
                                 <identifier>creator</identifier>
                              </primaryExpression>
                           </expression>
                        </expression>
                     </condition>)<statement>
                        <block>{<statement>
                              <expressionStatement>
                                 <expression>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>stakes</identifier>
                                          </primaryExpression>
                                       </expression>[<expression>
                                          <environmentalVariable>msg.sender</environmentalVariable>
                                       </expression>]</expression>=<expression>
                                       <primaryExpression>
                                          <numberLiteral>
                                             <decimalNumber>0</decimalNumber>
                                          </numberLiteral>
                                       </primaryExpression>
                                    </expression>
                                 </expression>
                              </expressionStatement>;</statement>
                           <statement>
                              <expressionStatement>
                                 <expression>
                                    <expression>
                                       <environmentalVariable>msg.sender</environmentalVariable>
                                    </expression>.<functionCall>
                                       <functionName>
                                          <identifier>transfer</identifier>
                                       </functionName>
                                       <callArguments>
                                          <tupleExpression>(<expression>
                                                <expression>
                                                   <primaryExpression>
                                                      <identifier>w</identifier>
                                                   </primaryExpression>
                                                </expression>.<functionCall>
                                                   <functionName>
                                                      <identifier>amountCreator</identifier>
                                                   </functionName>
                                                   <callArguments>
                                                      <tupleExpression>(<expression>
                                                            <primaryExpression>
                                                               <identifier>creatorLong</identifier>
                                                            </primaryExpression>
                                                         </expression>,<expression>
                                                            <primaryExpression>
                                                               <identifier>stakeMemory</identifier>
                                                            </primaryExpression>
                                                         </expression>,<expression>
                                                            <primaryExpression>
                                                               <identifier>settlementPrice</identifier>
                                                            </primaryExpression>
                                                         </expression>,<expression>
                                                            <primaryExpression>
                                                               <identifier>strikePrice</identifier>
                                                            </primaryExpression>
                                                         </expression>,<expression>
                                                            <primaryExpression>
                                                               <identifier>totalStakeCounterparties</identifier>
                                                            </primaryExpression>
                                                         </expression>)</tupleExpression>
                                                   </callArguments>
                                                </functionCall>
                                             </expression>)</tupleExpression>
                                       </callArguments>
                                    </functionCall>
                                 </expression>
                              </expressionStatement>;</statement>}</block>
                     </statement>
                  </ifStatement>
               </statement>
               <statement>
                  <ifStatement>if(<condition>
                        <expression>
                           <expression>
                              <expression>
                                 <primaryExpression>
                                    <identifier>stakes</identifier>
                                 </primaryExpression>
                              </expression>[<expression>
                                 <environmentalVariable>msg.sender</environmentalVariable>
                              </expression>]</expression>
                           <comparison>!=</comparison>
                           <expression>
                              <primaryExpression>
                                 <numberLiteral>
                                    <decimalNumber>0</decimalNumber>
                                 </numberLiteral>
                              </primaryExpression>
                           </expression>
                        </expression>
                     </condition>)<statement>
                        <block>{<statement>
                              <expressionStatement>
                                 <expression>
                                    <expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>stakes</identifier>
                                          </primaryExpression>
                                       </expression>[<expression>
                                          <environmentalVariable>msg.sender</environmentalVariable>
                                       </expression>]</expression>=<expression>
                                       <primaryExpression>
                                          <numberLiteral>
                                             <decimalNumber>0</decimalNumber>
                                          </numberLiteral>
                                       </primaryExpression>
                                    </expression>
                                 </expression>
                              </expressionStatement>;</statement>
                           <statement>
                              <expressionStatement>
                                 <expression>
                                    <expression>
                                       <environmentalVariable>msg.sender</environmentalVariable>
                                    </expression>.<functionCall>
                                       <functionName>
                                          <identifier>transfer</identifier>
                                       </functionName>
                                       <callArguments>
                                          <tupleExpression>(<expression>
                                                <expression>
                                                   <primaryExpression>
                                                      <identifier>w</identifier>
                                                   </primaryExpression>
                                                </expression>.<functionCall>
                                                   <functionName>
                                                      <identifier>amountCounterparty</identifier>
                                                   </functionName>
                                                   <callArguments>
                                                      <tupleExpression>(<expression>
                                                            <primaryExpression>
                                                               <identifier>creatorLong</identifier>
                                                            </primaryExpression>
                                                         </expression>,<expression>
                                                            <primaryExpression>
                                                               <identifier>stakeMemory</identifier>
                                                            </primaryExpression>
                                                         </expression>,<expression>
                                                            <primaryExpression>
                                                               <identifier>settlementPrice</identifier>
                                                            </primaryExpression>
                                                         </expression>,<expression>
                                                            <primaryExpression>
                                                               <identifier>strikePrice</identifier>
                                                            </primaryExpression>
                                                         </expression>)</tupleExpression>
                                                   </callArguments>
                                                </functionCall>
                                             </expression>)</tupleExpression>
                                       </callArguments>
                                    </functionCall>
                                 </expression>
                              </expressionStatement>;</statement>}</block>
                     </statement>
                  </ifStatement>
               </statement>}</block>
         </functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>unsettledWithdraw</identifier>
            <parameterList>()</parameterList>
            <visibleType>public</visibleType>
            <identifier>emitsContractAlteredEvent</identifier>
            <block>{<statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <environmentalVariable>now</environmentalVariable>
                                    </expression>&gt;<expression>
                                       <expression>
                                          <primaryExpression>
                                             <identifier>dueDate</identifier>
                                          </primaryExpression>
                                       </expression>
                                       <plusminusOperator>
                                          <plusOperator>+</plusOperator>
                                       </plusminusOperator>
                                       <expression>
                                          <primaryExpression>
                                             <numberLiteral>
                                                <decimalNumber>90</decimalNumber>
                                                <numberUnit>days</numberUnit>
                                             </numberLiteral>
                                          </primaryExpression>
                                       </expression>
                                    </expression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <functionCall>
                           <functionName>
                              <identifier>require</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <expression>
                                       <primaryExpression>
                                          <identifier>isSettled</identifier>
                                       </primaryExpression>
                                    </expression>
                                    <comparison>==</comparison>
                                    <expression>
                                       <primaryExpression>
                                          <booleanLiteral>false</booleanLiteral>
                                       </primaryExpression>
                                    </expression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <variableDeclaration>
                              <typeName>
                                 <elementaryTypeName>uint256</elementaryTypeName>
                              </typeName>
                              <identifier>stakeMemory</identifier>
                           </variableDeclaration>
                        </expression>=<expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>stakes</identifier>
                              </primaryExpression>
                           </expression>[<expression>
                              <environmentalVariable>msg.sender</environmentalVariable>
                           </expression>]</expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <expression>
                              <primaryExpression>
                                 <identifier>stakes</identifier>
                              </primaryExpression>
                           </expression>[<expression>
                              <environmentalVariable>msg.sender</environmentalVariable>
                           </expression>]</expression>=<expression>
                           <primaryExpression>
                              <numberLiteral>
                                 <decimalNumber>0</decimalNumber>
                              </numberLiteral>
                           </primaryExpression>
                        </expression>
                     </expression>
                  </expressionStatement>;</statement>
               <statement>
                  <expressionStatement>
                     <expression>
                        <expression>
                           <environmentalVariable>msg.sender</environmentalVariable>
                        </expression>.<functionCall>
                           <functionName>
                              <identifier>transfer</identifier>
                           </functionName>
                           <callArguments>
                              <tupleExpression>(<expression>
                                    <primaryExpression>
                                       <identifier>stakeMemory</identifier>
                                    </primaryExpression>
                                 </expression>)</tupleExpression>
                           </callArguments>
                        </functionCall>
                     </expression>
                  </expressionStatement>;</statement>}</block>
         </functionDefinition>
      </contractPartDefinition>}</contractDefinition>
   <interfaceDefinition>interface<identifier>Oracle</identifier>{<contractPartDefinition>
         <functionDefinition>function<identifier>sendPrice</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>dueDate</identifier>
               </parameter>)</parameterList>
            <visibleType>external</visibleType>
            <stateMutability>
               <viewType>view</viewType>
            </stateMutability>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>uint256</elementaryTypeName>
                     </typeName>
                  </parameter>)</parameterList>
            </returnsParameters>;</functionDefinition>
      </contractPartDefinition>}</interfaceDefinition>
   <interfaceDefinition>interface<identifier>Withdraw</identifier>{<contractPartDefinition>
         <functionDefinition>function<identifier>amountCreator</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>bool</elementaryTypeName>
                  </typeName>
                  <identifier>makerLong</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>stakeMemory</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>settlementPrice</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>strikePrice</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>totalStakeAllTakers</identifier>
               </parameter>)</parameterList>
            <visibleType>external</visibleType>
            <stateMutability>
               <pureType>pure</pureType>
            </stateMutability>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>uint256</elementaryTypeName>
                     </typeName>
                  </parameter>)</parameterList>
            </returnsParameters>;</functionDefinition>
      </contractPartDefinition>
      <contractPartDefinition>
         <functionDefinition>function<identifier>amountCounterparty</identifier>
            <parameterList>(<parameter>
                  <typeName>
                     <elementaryTypeName>bool</elementaryTypeName>
                  </typeName>
                  <identifier>makerLong</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>stakeMemory</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>settlementPrice</identifier>
               </parameter>,<parameter>
                  <typeName>
                     <elementaryTypeName>uint256</elementaryTypeName>
                  </typeName>
                  <identifier>strikePrice</identifier>
               </parameter>)</parameterList>
            <visibleType>external</visibleType>
            <stateMutability>
               <pureType>pure</pureType>
            </stateMutability>
            <returnsParameters>returns<parameterList>(<parameter>
                     <typeName>
                        <elementaryTypeName>uint256</elementaryTypeName>
                     </typeName>
                  </parameter>)</parameterList>
            </returnsParameters>;</functionDefinition>
      </contractPartDefinition>}</interfaceDefinition>&lt;EOF&gt;</sourceUnit>